// ----------------------------------------------------------------------
// This file is automatically generated from the script:
// 
// ./create_headers_from_dos_params_h.pl
// 
// and was applied to the file
// 
// ./dos_param.h
// 
// DO NOT EDIT!!!!!
// ----------------------------------------------------------------------
// 
#ifdef DOS_C_ARC_POINTER_H
#else
#define DOS_C_ARC_POINTER_H

//
// Reading file:  ./dos_param.h
//
//------------------------------------------------------------------------------
// Define all modules' base address under DOS 
// APB allocation from 32'hd0050000
//------------------------------------------------------------------------------
//`define APB_DOS_HCODEC2_ADDR_OFFSET     6'h30 // HCODEC 2
// Define base address for VDEC module under DOS:
//  DOS_VDEC_ASSIST_BASE_ADDR       14'h0000
//  DOS_VDEC_MDEC_BASE_ADDR         14'h0900
//  DOS_VDEC_VLD_BASE_ADDR          14'h0c00
//  DOS_VDEC_IQIDCT_BASE_ADDR       14'h0e00
//  DOS_VDEC_VCPU_BASE_ADDR         14'h0300
//  DOS_VDEC_RESERVED_BASE_ADDR     14'h0f00 // Do not use this offset
// Define base address for DOS top-level register module:
//  DOS_TOP_BASE_ADDR               14'h3f00
//------------------------------------------------------------------------------
// VDEC_ASSIST module level register offset
//------------------------------------------------------------------------------
// -----------------------------------------------
// CBUS_BASE:  DOS_VDEC_ASSIST_CBUS_BASE = 0x00
// -----------------------------------------------
#define P_VDEC_ASSIST_MMC_CTRL0                    (volatile unsigned long *)0xd0050004
#define P_VDEC_ASSIST_MMC_CTRL1                    (volatile unsigned long *)0xd0050008
#define P_VDEC_ASSIST_AMR1_INT0                    (volatile unsigned long *)0xd0050094
#define P_VDEC_ASSIST_AMR1_INT1                    (volatile unsigned long *)0xd0050098
#define P_VDEC_ASSIST_AMR1_INT2                    (volatile unsigned long *)0xd005009c
#define P_VDEC_ASSIST_AMR1_INT3                    (volatile unsigned long *)0xd00500a0
#define P_VDEC_ASSIST_AMR1_INT4                    (volatile unsigned long *)0xd00500a4
#define P_VDEC_ASSIST_AMR1_INT5                    (volatile unsigned long *)0xd00500a8
#define P_VDEC_ASSIST_AMR1_INT6                    (volatile unsigned long *)0xd00500ac
#define P_VDEC_ASSIST_AMR1_INT7                    (volatile unsigned long *)0xd00500b0
#define P_VDEC_ASSIST_AMR1_INT8                    (volatile unsigned long *)0xd00500b4
#define P_VDEC_ASSIST_AMR1_INT9                    (volatile unsigned long *)0xd00500b8
#define P_VDEC_ASSIST_AMR1_INTA                    (volatile unsigned long *)0xd00500bc
#define P_VDEC_ASSIST_AMR1_INTB                    (volatile unsigned long *)0xd00500c0
#define P_VDEC_ASSIST_AMR1_INTC                    (volatile unsigned long *)0xd00500c4
#define P_VDEC_ASSIST_AMR1_INTD                    (volatile unsigned long *)0xd00500c8
#define P_VDEC_ASSIST_AMR1_INTE                    (volatile unsigned long *)0xd00500cc
#define P_VDEC_ASSIST_AMR1_INTF                    (volatile unsigned long *)0xd00500d0
#define P_VDEC_ASSIST_AMR2_INT0                    (volatile unsigned long *)0xd00500d4
#define P_VDEC_ASSIST_AMR2_INT1                    (volatile unsigned long *)0xd00500d8
#define P_VDEC_ASSIST_AMR2_INT2                    (volatile unsigned long *)0xd00500dc
#define P_VDEC_ASSIST_AMR2_INT3                    (volatile unsigned long *)0xd00500e0
#define P_VDEC_ASSIST_AMR2_INT4                    (volatile unsigned long *)0xd00500e4
#define P_VDEC_ASSIST_AMR2_INT5                    (volatile unsigned long *)0xd00500e8
#define P_VDEC_ASSIST_AMR2_INT6                    (volatile unsigned long *)0xd00500ec
#define P_VDEC_ASSIST_AMR2_INT7                    (volatile unsigned long *)0xd00500f0
#define P_VDEC_ASSIST_AMR2_INT8                    (volatile unsigned long *)0xd00500f4
#define P_VDEC_ASSIST_AMR2_INT9                    (volatile unsigned long *)0xd00500f8
#define P_VDEC_ASSIST_AMR2_INTA                    (volatile unsigned long *)0xd00500fc
#define P_VDEC_ASSIST_AMR2_INTB                    (volatile unsigned long *)0xd0050100
#define P_VDEC_ASSIST_AMR2_INTC                    (volatile unsigned long *)0xd0050104
#define P_VDEC_ASSIST_AMR2_INTD                    (volatile unsigned long *)0xd0050108
#define P_VDEC_ASSIST_AMR2_INTE                    (volatile unsigned long *)0xd005010c
#define P_VDEC_ASSIST_AMR2_INTF                    (volatile unsigned long *)0xd0050110
#define P_VDEC_ASSIST_MBX_SSEL                     (volatile unsigned long *)0xd0050114
#define P_VDEC_ASSIST_TIMER0_LO                    (volatile unsigned long *)0xd0050180
#define P_VDEC_ASSIST_TIMER0_HI                    (volatile unsigned long *)0xd0050184
#define P_VDEC_ASSIST_TIMER1_LO                    (volatile unsigned long *)0xd0050188
#define P_VDEC_ASSIST_TIMER1_HI                    (volatile unsigned long *)0xd005018c
#define P_VDEC_ASSIST_DMA_INT                      (volatile unsigned long *)0xd0050190
#define P_VDEC_ASSIST_DMA_INT_MSK                  (volatile unsigned long *)0xd0050194
#define P_VDEC_ASSIST_DMA_INT2                     (volatile unsigned long *)0xd0050198
#define P_VDEC_ASSIST_DMA_INT_MSK2                 (volatile unsigned long *)0xd005019c
#define P_VDEC_ASSIST_MBOX0_IRQ_REG                (volatile unsigned long *)0xd00501c0
#define P_VDEC_ASSIST_MBOX0_CLR_REG                (volatile unsigned long *)0xd00501c4
#define P_VDEC_ASSIST_MBOX0_MASK                   (volatile unsigned long *)0xd00501c8
#define P_VDEC_ASSIST_MBOX0_FIQ_SEL                (volatile unsigned long *)0xd00501cc
#define P_VDEC_ASSIST_MBOX1_IRQ_REG                (volatile unsigned long *)0xd00501d0
#define P_VDEC_ASSIST_MBOX1_CLR_REG                (volatile unsigned long *)0xd00501d4
#define P_VDEC_ASSIST_MBOX1_MASK                   (volatile unsigned long *)0xd00501d8
#define P_VDEC_ASSIST_MBOX1_FIQ_SEL                (volatile unsigned long *)0xd00501dc
#define P_VDEC_ASSIST_MBOX2_IRQ_REG                (volatile unsigned long *)0xd00501e0
#define P_VDEC_ASSIST_MBOX2_CLR_REG                (volatile unsigned long *)0xd00501e4
#define P_VDEC_ASSIST_MBOX2_MASK                   (volatile unsigned long *)0xd00501e8
#define P_VDEC_ASSIST_MBOX2_FIQ_SEL                (volatile unsigned long *)0xd00501ec
//------------------------------------------------------------------------------
// VDEC2_ASSIST module level register offset
//------------------------------------------------------------------------------
// -----------------------------------------------
// CBUS_BASE:  DOS_VDEC2_ASSIST_CBUS_BASE = 0x00
// -----------------------------------------------
#define P_VDEC2_ASSIST_MMC_CTRL0                   (volatile unsigned long *)0xd0058004
#define P_VDEC2_ASSIST_MMC_CTRL1                   (volatile unsigned long *)0xd0058008
#define P_VDEC2_ASSIST_AMR1_INT0                   (volatile unsigned long *)0xd0058094
#define P_VDEC2_ASSIST_AMR1_INT1                   (volatile unsigned long *)0xd0058098
#define P_VDEC2_ASSIST_AMR1_INT2                   (volatile unsigned long *)0xd005809c
#define P_VDEC2_ASSIST_AMR1_INT3                   (volatile unsigned long *)0xd00580a0
#define P_VDEC2_ASSIST_AMR1_INT4                   (volatile unsigned long *)0xd00580a4
#define P_VDEC2_ASSIST_AMR1_INT5                   (volatile unsigned long *)0xd00580a8
#define P_VDEC2_ASSIST_AMR1_INT6                   (volatile unsigned long *)0xd00580ac
#define P_VDEC2_ASSIST_AMR1_INT7                   (volatile unsigned long *)0xd00580b0
#define P_VDEC2_ASSIST_AMR1_INT8                   (volatile unsigned long *)0xd00580b4
#define P_VDEC2_ASSIST_AMR1_INT9                   (volatile unsigned long *)0xd00580b8
#define P_VDEC2_ASSIST_AMR1_INTA                   (volatile unsigned long *)0xd00580bc
#define P_VDEC2_ASSIST_AMR1_INTB                   (volatile unsigned long *)0xd00580c0
#define P_VDEC2_ASSIST_AMR1_INTC                   (volatile unsigned long *)0xd00580c4
#define P_VDEC2_ASSIST_AMR1_INTD                   (volatile unsigned long *)0xd00580c8
#define P_VDEC2_ASSIST_AMR1_INTE                   (volatile unsigned long *)0xd00580cc
#define P_VDEC2_ASSIST_AMR1_INTF                   (volatile unsigned long *)0xd00580d0
#define P_VDEC2_ASSIST_AMR2_INT0                   (volatile unsigned long *)0xd00580d4
#define P_VDEC2_ASSIST_AMR2_INT1                   (volatile unsigned long *)0xd00580d8
#define P_VDEC2_ASSIST_AMR2_INT2                   (volatile unsigned long *)0xd00580dc
#define P_VDEC2_ASSIST_AMR2_INT3                   (volatile unsigned long *)0xd00580e0
#define P_VDEC2_ASSIST_AMR2_INT4                   (volatile unsigned long *)0xd00580e4
#define P_VDEC2_ASSIST_AMR2_INT5                   (volatile unsigned long *)0xd00580e8
#define P_VDEC2_ASSIST_AMR2_INT6                   (volatile unsigned long *)0xd00580ec
#define P_VDEC2_ASSIST_AMR2_INT7                   (volatile unsigned long *)0xd00580f0
#define P_VDEC2_ASSIST_AMR2_INT8                   (volatile unsigned long *)0xd00580f4
#define P_VDEC2_ASSIST_AMR2_INT9                   (volatile unsigned long *)0xd00580f8
#define P_VDEC2_ASSIST_AMR2_INTA                   (volatile unsigned long *)0xd00580fc
#define P_VDEC2_ASSIST_AMR2_INTB                   (volatile unsigned long *)0xd0058100
#define P_VDEC2_ASSIST_AMR2_INTC                   (volatile unsigned long *)0xd0058104
#define P_VDEC2_ASSIST_AMR2_INTD                   (volatile unsigned long *)0xd0058108
#define P_VDEC2_ASSIST_AMR2_INTE                   (volatile unsigned long *)0xd005810c
#define P_VDEC2_ASSIST_AMR2_INTF                   (volatile unsigned long *)0xd0058110
#define P_VDEC2_ASSIST_MBX_SSEL                    (volatile unsigned long *)0xd0058114
#define P_VDEC2_ASSIST_TIMER0_LO                   (volatile unsigned long *)0xd0058180
#define P_VDEC2_ASSIST_TIMER0_HI                   (volatile unsigned long *)0xd0058184
#define P_VDEC2_ASSIST_TIMER1_LO                   (volatile unsigned long *)0xd0058188
#define P_VDEC2_ASSIST_TIMER1_HI                   (volatile unsigned long *)0xd005818c
#define P_VDEC2_ASSIST_DMA_INT                     (volatile unsigned long *)0xd0058190
#define P_VDEC2_ASSIST_DMA_INT_MSK                 (volatile unsigned long *)0xd0058194
#define P_VDEC2_ASSIST_DMA_INT2                    (volatile unsigned long *)0xd0058198
#define P_VDEC2_ASSIST_DMA_INT_MSK2                (volatile unsigned long *)0xd005819c
#define P_VDEC2_ASSIST_MBOX0_IRQ_REG               (volatile unsigned long *)0xd00581c0
#define P_VDEC2_ASSIST_MBOX0_CLR_REG               (volatile unsigned long *)0xd00581c4
#define P_VDEC2_ASSIST_MBOX0_MASK                  (volatile unsigned long *)0xd00581c8
#define P_VDEC2_ASSIST_MBOX0_FIQ_SEL               (volatile unsigned long *)0xd00581cc
#define P_VDEC2_ASSIST_MBOX1_IRQ_REG               (volatile unsigned long *)0xd00581d0
#define P_VDEC2_ASSIST_MBOX1_CLR_REG               (volatile unsigned long *)0xd00581d4
#define P_VDEC2_ASSIST_MBOX1_MASK                  (volatile unsigned long *)0xd00581d8
#define P_VDEC2_ASSIST_MBOX1_FIQ_SEL               (volatile unsigned long *)0xd00581dc
#define P_VDEC2_ASSIST_MBOX2_IRQ_REG               (volatile unsigned long *)0xd00581e0
#define P_VDEC2_ASSIST_MBOX2_CLR_REG               (volatile unsigned long *)0xd00581e4
#define P_VDEC2_ASSIST_MBOX2_MASK                  (volatile unsigned long *)0xd00581e8
#define P_VDEC2_ASSIST_MBOX2_FIQ_SEL               (volatile unsigned long *)0xd00581ec
//------------------------------------------------------------------------------
// HCODEC_ASSIST module level register offset
//------------------------------------------------------------------------------
// -----------------------------------------------
// CBUS_BASE:  DOS_HCODEC_ASSIST_CBUS_BASE = 0x00
// -----------------------------------------------
#define P_HCODEC_ASSIST_MMC_CTRL0                  (volatile unsigned long *)0xd0054004
#define P_HCODEC_HCODEC_ASSIST_MMC_CTRL0           (volatile unsigned long *)0xd0054004
#define P_HCODEC_ASSIST_MMC_CTRL1                  (volatile unsigned long *)0xd0054008
#define P_HCODEC_HCODEC_ASSIST_MMC_CTRL1           (volatile unsigned long *)0xd0054008
#define P_HCODEC_MFDIN_REG0_CRST                   (volatile unsigned long *)0xd0054040
#define P_HCODEC_HCODEC_MFDIN_REG0_CRST            (volatile unsigned long *)0xd0054040
#define P_HCODEC_MFDIN_REG1_CTRL                   (volatile unsigned long *)0xd0054044
#define P_HCODEC_HCODEC_MFDIN_REG1_CTRL            (volatile unsigned long *)0xd0054044
#define P_HCODEC_MFDIN_REG2_STAT                   (volatile unsigned long *)0xd0054048
#define P_HCODEC_HCODEC_MFDIN_REG2_STAT            (volatile unsigned long *)0xd0054048
#define P_HCODEC_MFDIN_REG3_CANV                   (volatile unsigned long *)0xd005404c
#define P_HCODEC_HCODEC_MFDIN_REG3_CANV            (volatile unsigned long *)0xd005404c
#define P_HCODEC_MFDIN_REG4_LNR0                   (volatile unsigned long *)0xd0054050
#define P_HCODEC_HCODEC_MFDIN_REG4_LNR0            (volatile unsigned long *)0xd0054050
#define P_HCODEC_MFDIN_REG5_LNR1                   (volatile unsigned long *)0xd0054054
#define P_HCODEC_HCODEC_MFDIN_REG5_LNR1            (volatile unsigned long *)0xd0054054
#define P_HCODEC_MFDIN_REG6_DCFG                   (volatile unsigned long *)0xd0054058
#define P_HCODEC_HCODEC_MFDIN_REG6_DCFG            (volatile unsigned long *)0xd0054058
#define P_HCODEC_MFDIN_REG7_SCMD                   (volatile unsigned long *)0xd005405c
#define P_HCODEC_HCODEC_MFDIN_REG7_SCMD            (volatile unsigned long *)0xd005405c
#define P_HCODEC_MFDIN_REG8_DMBL                   (volatile unsigned long *)0xd0054060
#define P_HCODEC_HCODEC_MFDIN_REG8_DMBL            (volatile unsigned long *)0xd0054060
#define P_HCODEC_MFDIN_REG9_ENDN                   (volatile unsigned long *)0xd0054064
#define P_HCODEC_HCODEC_MFDIN_REG9_ENDN            (volatile unsigned long *)0xd0054064
#define P_HCODEC_MFDIN_REGA_CAV1                   (volatile unsigned long *)0xd0054068
#define P_HCODEC_HCODEC_MFDIN_REGA_CAV1            (volatile unsigned long *)0xd0054068
#define P_HCODEC_MFDIN_REGB_AMPC                   (volatile unsigned long *)0xd005406c
#define P_HCODEC_HCODEC_MFDIN_REGB_AMPC            (volatile unsigned long *)0xd005406c
#define P_HCODEC_ASSIST_AMR1_INT0                  (volatile unsigned long *)0xd0054094
#define P_HCODEC_HCODEC_ASSIST_AMR1_INT0           (volatile unsigned long *)0xd0054094
#define P_HCODEC_ASSIST_AMR1_INT1                  (volatile unsigned long *)0xd0054098
#define P_HCODEC_HCODEC_ASSIST_AMR1_INT1           (volatile unsigned long *)0xd0054098
#define P_HCODEC_ASSIST_AMR1_INT2                  (volatile unsigned long *)0xd005409c
#define P_HCODEC_HCODEC_ASSIST_AMR1_INT2           (volatile unsigned long *)0xd005409c
#define P_HCODEC_ASSIST_AMR1_INT3                  (volatile unsigned long *)0xd00540a0
#define P_HCODEC_HCODEC_ASSIST_AMR1_INT3           (volatile unsigned long *)0xd00540a0
#define P_HCODEC_ASSIST_AMR1_INT4                  (volatile unsigned long *)0xd00540a4
#define P_HCODEC_HCODEC_ASSIST_AMR1_INT4           (volatile unsigned long *)0xd00540a4
#define P_HCODEC_ASSIST_AMR1_INT5                  (volatile unsigned long *)0xd00540a8
#define P_HCODEC_HCODEC_ASSIST_AMR1_INT5           (volatile unsigned long *)0xd00540a8
#define P_HCODEC_ASSIST_AMR1_INT6                  (volatile unsigned long *)0xd00540ac
#define P_HCODEC_HCODEC_ASSIST_AMR1_INT6           (volatile unsigned long *)0xd00540ac
#define P_HCODEC_ASSIST_AMR1_INT7                  (volatile unsigned long *)0xd00540b0
#define P_HCODEC_HCODEC_ASSIST_AMR1_INT7           (volatile unsigned long *)0xd00540b0
#define P_HCODEC_ASSIST_AMR1_INT8                  (volatile unsigned long *)0xd00540b4
#define P_HCODEC_HCODEC_ASSIST_AMR1_INT8           (volatile unsigned long *)0xd00540b4
#define P_HCODEC_ASSIST_AMR1_INT9                  (volatile unsigned long *)0xd00540b8
#define P_HCODEC_HCODEC_ASSIST_AMR1_INT9           (volatile unsigned long *)0xd00540b8
#define P_HCODEC_ASSIST_AMR1_INTA                  (volatile unsigned long *)0xd00540bc
#define P_HCODEC_HCODEC_ASSIST_AMR1_INTA           (volatile unsigned long *)0xd00540bc
#define P_HCODEC_ASSIST_AMR1_INTB                  (volatile unsigned long *)0xd00540c0
#define P_HCODEC_HCODEC_ASSIST_AMR1_INTB           (volatile unsigned long *)0xd00540c0
#define P_HCODEC_ASSIST_AMR1_INTC                  (volatile unsigned long *)0xd00540c4
#define P_HCODEC_HCODEC_ASSIST_AMR1_INTC           (volatile unsigned long *)0xd00540c4
#define P_HCODEC_ASSIST_AMR1_INTD                  (volatile unsigned long *)0xd00540c8
#define P_HCODEC_HCODEC_ASSIST_AMR1_INTD           (volatile unsigned long *)0xd00540c8
#define P_HCODEC_ASSIST_AMR1_INTE                  (volatile unsigned long *)0xd00540cc
#define P_HCODEC_HCODEC_ASSIST_AMR1_INTE           (volatile unsigned long *)0xd00540cc
#define P_HCODEC_ASSIST_AMR1_INTF                  (volatile unsigned long *)0xd00540d0
#define P_HCODEC_HCODEC_ASSIST_AMR1_INTF           (volatile unsigned long *)0xd00540d0
#define P_HCODEC_ASSIST_AMR2_INT0                  (volatile unsigned long *)0xd00540d4
#define P_HCODEC_HCODEC_ASSIST_AMR2_INT0           (volatile unsigned long *)0xd00540d4
#define P_HCODEC_ASSIST_AMR2_INT1                  (volatile unsigned long *)0xd00540d8
#define P_HCODEC_HCODEC_ASSIST_AMR2_INT1           (volatile unsigned long *)0xd00540d8
#define P_HCODEC_ASSIST_AMR2_INT2                  (volatile unsigned long *)0xd00540dc
#define P_HCODEC_HCODEC_ASSIST_AMR2_INT2           (volatile unsigned long *)0xd00540dc
#define P_HCODEC_ASSIST_AMR2_INT3                  (volatile unsigned long *)0xd00540e0
#define P_HCODEC_HCODEC_ASSIST_AMR2_INT3           (volatile unsigned long *)0xd00540e0
#define P_HCODEC_ASSIST_AMR2_INT4                  (volatile unsigned long *)0xd00540e4
#define P_HCODEC_HCODEC_ASSIST_AMR2_INT4           (volatile unsigned long *)0xd00540e4
#define P_HCODEC_ASSIST_AMR2_INT5                  (volatile unsigned long *)0xd00540e8
#define P_HCODEC_HCODEC_ASSIST_AMR2_INT5           (volatile unsigned long *)0xd00540e8
#define P_HCODEC_ASSIST_AMR2_INT6                  (volatile unsigned long *)0xd00540ec
#define P_HCODEC_HCODEC_ASSIST_AMR2_INT6           (volatile unsigned long *)0xd00540ec
#define P_HCODEC_ASSIST_AMR2_INT7                  (volatile unsigned long *)0xd00540f0
#define P_HCODEC_HCODEC_ASSIST_AMR2_INT7           (volatile unsigned long *)0xd00540f0
#define P_HCODEC_ASSIST_AMR2_INT8                  (volatile unsigned long *)0xd00540f4
#define P_HCODEC_HCODEC_ASSIST_AMR2_INT8           (volatile unsigned long *)0xd00540f4
#define P_HCODEC_ASSIST_AMR2_INT9                  (volatile unsigned long *)0xd00540f8
#define P_HCODEC_HCODEC_ASSIST_AMR2_INT9           (volatile unsigned long *)0xd00540f8
#define P_HCODEC_ASSIST_AMR2_INTA                  (volatile unsigned long *)0xd00540fc
#define P_HCODEC_HCODEC_ASSIST_AMR2_INTA           (volatile unsigned long *)0xd00540fc
#define P_HCODEC_ASSIST_AMR2_INTB                  (volatile unsigned long *)0xd0054100
#define P_HCODEC_HCODEC_ASSIST_AMR2_INTB           (volatile unsigned long *)0xd0054100
#define P_HCODEC_ASSIST_AMR2_INTC                  (volatile unsigned long *)0xd0054104
#define P_HCODEC_HCODEC_ASSIST_AMR2_INTC           (volatile unsigned long *)0xd0054104
#define P_HCODEC_ASSIST_AMR2_INTD                  (volatile unsigned long *)0xd0054108
#define P_HCODEC_HCODEC_ASSIST_AMR2_INTD           (volatile unsigned long *)0xd0054108
#define P_HCODEC_ASSIST_AMR2_INTE                  (volatile unsigned long *)0xd005410c
#define P_HCODEC_HCODEC_ASSIST_AMR2_INTE           (volatile unsigned long *)0xd005410c
#define P_HCODEC_ASSIST_AMR2_INTF                  (volatile unsigned long *)0xd0054110
#define P_HCODEC_HCODEC_ASSIST_AMR2_INTF           (volatile unsigned long *)0xd0054110
#define P_HCODEC_ASSIST_MBX_SSEL                   (volatile unsigned long *)0xd0054114
#define P_HCODEC_HCODEC_ASSIST_MBX_SSEL            (volatile unsigned long *)0xd0054114
#define P_HCODEC_ASSIST_TIMER0_LO                  (volatile unsigned long *)0xd0054180
#define P_HCODEC_HCODEC_ASSIST_TIMER0_LO           (volatile unsigned long *)0xd0054180
#define P_HCODEC_ASSIST_TIMER0_HI                  (volatile unsigned long *)0xd0054184
#define P_HCODEC_HCODEC_ASSIST_TIMER0_HI           (volatile unsigned long *)0xd0054184
#define P_HCODEC_ASSIST_TIMER1_LO                  (volatile unsigned long *)0xd0054188
#define P_HCODEC_HCODEC_ASSIST_TIMER1_LO           (volatile unsigned long *)0xd0054188
#define P_HCODEC_ASSIST_TIMER1_HI                  (volatile unsigned long *)0xd005418c
#define P_HCODEC_HCODEC_ASSIST_TIMER1_HI           (volatile unsigned long *)0xd005418c
#define P_HCODEC_ASSIST_DMA_INT                    (volatile unsigned long *)0xd0054190
#define P_HCODEC_HCODEC_ASSIST_DMA_INT             (volatile unsigned long *)0xd0054190
#define P_HCODEC_ASSIST_DMA_INT_MSK                (volatile unsigned long *)0xd0054194
#define P_HCODEC_HCODEC_ASSIST_DMA_INT_MSK         (volatile unsigned long *)0xd0054194
#define P_HCODEC_ASSIST_DMA_INT2                   (volatile unsigned long *)0xd0054198
#define P_HCODEC_HCODEC_ASSIST_DMA_INT2            (volatile unsigned long *)0xd0054198
#define P_HCODEC_ASSIST_DMA_INT_MSK2               (volatile unsigned long *)0xd005419c
#define P_HCODEC_HCODEC_ASSIST_DMA_INT_MSK2        (volatile unsigned long *)0xd005419c
#define P_HCODEC_ASSIST_MBOX0_IRQ_REG              (volatile unsigned long *)0xd00541c0
#define P_HCODEC_HCODEC_ASSIST_MBOX0_IRQ_REG       (volatile unsigned long *)0xd00541c0
#define P_HCODEC_ASSIST_MBOX0_CLR_REG              (volatile unsigned long *)0xd00541c4
#define P_HCODEC_HCODEC_ASSIST_MBOX0_CLR_REG       (volatile unsigned long *)0xd00541c4
#define P_HCODEC_ASSIST_MBOX0_MASK                 (volatile unsigned long *)0xd00541c8
#define P_HCODEC_HCODEC_ASSIST_MBOX0_MASK          (volatile unsigned long *)0xd00541c8
#define P_HCODEC_ASSIST_MBOX0_FIQ_SEL              (volatile unsigned long *)0xd00541cc
#define P_HCODEC_HCODEC_ASSIST_MBOX0_FIQ_SEL       (volatile unsigned long *)0xd00541cc
#define P_HCODEC_ASSIST_MBOX1_IRQ_REG              (volatile unsigned long *)0xd00541d0
#define P_HCODEC_HCODEC_ASSIST_MBOX1_IRQ_REG       (volatile unsigned long *)0xd00541d0
#define P_HCODEC_ASSIST_MBOX1_CLR_REG              (volatile unsigned long *)0xd00541d4
#define P_HCODEC_HCODEC_ASSIST_MBOX1_CLR_REG       (volatile unsigned long *)0xd00541d4
#define P_HCODEC_ASSIST_MBOX1_MASK                 (volatile unsigned long *)0xd00541d8
#define P_HCODEC_HCODEC_ASSIST_MBOX1_MASK          (volatile unsigned long *)0xd00541d8
#define P_HCODEC_ASSIST_MBOX1_FIQ_SEL              (volatile unsigned long *)0xd00541dc
#define P_HCODEC_HCODEC_ASSIST_MBOX1_FIQ_SEL       (volatile unsigned long *)0xd00541dc
#define P_HCODEC_ASSIST_MBOX2_IRQ_REG              (volatile unsigned long *)0xd00541e0
#define P_HCODEC_HCODEC_ASSIST_MBOX2_IRQ_REG       (volatile unsigned long *)0xd00541e0
#define P_HCODEC_ASSIST_MBOX2_CLR_REG              (volatile unsigned long *)0xd00541e4
#define P_HCODEC_HCODEC_ASSIST_MBOX2_CLR_REG       (volatile unsigned long *)0xd00541e4
#define P_HCODEC_ASSIST_MBOX2_MASK                 (volatile unsigned long *)0xd00541e8
#define P_HCODEC_HCODEC_ASSIST_MBOX2_MASK          (volatile unsigned long *)0xd00541e8
#define P_HCODEC_ASSIST_MBOX2_FIQ_SEL              (volatile unsigned long *)0xd00541ec
#define P_HCODEC_HCODEC_ASSIST_MBOX2_FIQ_SEL       (volatile unsigned long *)0xd00541ec
//------------------------------------------------------------------------------
// MDEC module level register offset
//------------------------------------------------------------------------------
//
// Reading file:  mdec_regs.h
//
//========================================================================
//  MDEC module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_VDEC_MDEC_CBUS_BASE = 0x09
// -----------------------------------------------
#define P_MC_CTRL_REG                              (volatile unsigned long *)0xd0052400
#define P_MC_MB_INFO                               (volatile unsigned long *)0xd0052404
#define P_MC_PIC_INFO                              (volatile unsigned long *)0xd0052408
#define P_MC_HALF_PEL_ONE                          (volatile unsigned long *)0xd005240c
#define P_MC_HALF_PEL_TWO                          (volatile unsigned long *)0xd0052410
#define P_POWER_CTL_MC                             (volatile unsigned long *)0xd0052414
#define P_MC_CMD                                   (volatile unsigned long *)0xd0052418
#define P_MC_CTRL0                                 (volatile unsigned long *)0xd005241c
#define P_MC_PIC_W_H                               (volatile unsigned long *)0xd0052420
#define P_MC_STATUS0                               (volatile unsigned long *)0xd0052424
#define P_MC_STATUS1                               (volatile unsigned long *)0xd0052428
#define P_MC_CTRL1                                 (volatile unsigned long *)0xd005242c
#define P_MC_MIX_RATIO0                            (volatile unsigned long *)0xd0052430
#define P_MC_MIX_RATIO1                            (volatile unsigned long *)0xd0052434
#define P_MC_DP_MB_XY                              (volatile unsigned long *)0xd0052438
#define P_MC_OM_MB_XY                              (volatile unsigned long *)0xd005243c
#define P_PSCALE_RST                               (volatile unsigned long *)0xd0052440
#define P_PSCALE_CTRL                              (volatile unsigned long *)0xd0052444
#define P_PSCALE_PICI_W                            (volatile unsigned long *)0xd0052448
#define P_PSCALE_PICI_H                            (volatile unsigned long *)0xd005244c
#define P_PSCALE_PICO_W                            (volatile unsigned long *)0xd0052450
#define P_PSCALE_PICO_H                            (volatile unsigned long *)0xd0052454
#define P_PSCALE_PICO_START_X                      (volatile unsigned long *)0xd0052458
#define P_PSCALE_PICO_START_Y                      (volatile unsigned long *)0xd005245c
#define P_PSCALE_DUMMY                             (volatile unsigned long *)0xd0052460
#define P_PSCALE_FILT0_COEF0                       (volatile unsigned long *)0xd0052464
#define P_PSCALE_FILT0_COEF1                       (volatile unsigned long *)0xd0052468
#define P_PSCALE_CMD_CTRL                          (volatile unsigned long *)0xd005246c
#define P_PSCALE_CMD_BLK_X                         (volatile unsigned long *)0xd0052470
#define P_PSCALE_CMD_BLK_Y                         (volatile unsigned long *)0xd0052474
#define P_PSCALE_STATUS                            (volatile unsigned long *)0xd0052478
#define P_PSCALE_BMEM_ADDR                         (volatile unsigned long *)0xd005247c
#define P_PSCALE_BMEM_DAT                          (volatile unsigned long *)0xd0052480
#define P_PSCALE_DRAM_BUF_CTRL                     (volatile unsigned long *)0xd0052484
#define P_PSCALE_MCMD_CTRL                         (volatile unsigned long *)0xd0052488
#define P_PSCALE_MCMD_XSIZE                        (volatile unsigned long *)0xd005248c
#define P_PSCALE_MCMD_YSIZE                        (volatile unsigned long *)0xd0052490
#define P_PSCALE_RBUF_START_BLKX                   (volatile unsigned long *)0xd0052494
#define P_PSCALE_RBUF_START_BLKY                   (volatile unsigned long *)0xd0052498
//`define PSCALE_RBUF_MB_WIDTH   8'h27
#define P_PSCALE_PICO_SHIFT_XY                     (volatile unsigned long *)0xd00524a0
#define P_PSCALE_CTRL1                             (volatile unsigned long *)0xd00524a4
//Bit 15, wmask enable
//Bit 14:13, filt0 srckey_less, 
//Bit 12:11, filt1 srckey_less, in the case of the interpolated data is equal distance to 
//key data and normal data, 00: select normal data, 01: select right data, 10: select key data
//Bit 10:9, srckey mode, 00: equal, 01: less than or equal, 10: great than or equal
//Bit 8, src key enable
//Bit 7:0, y src key
#define P_PSCALE_SRCKEY_CTRL0                      (volatile unsigned long *)0xd00524a8
//Bit 15:8, cb src key
//Bit 7:0, cr src key
#define P_PSCALE_SRCKEY_CTRL1                      (volatile unsigned long *)0xd00524ac
//Bit 22:16 canvas_rd_addr2
//Bit 14:8 canvas_rd_addr1
//Bit 6:0 canvas_rd_addr1
#define P_PSCALE_CANVAS_RD_ADDR                    (volatile unsigned long *)0xd00524b0
//Bit 22:16 canvas_wr_addr2
//Bit 14:8 canvas_wr_addr1
//Bit 6:0 canvas_wr_addr1
#define P_PSCALE_CANVAS_WR_ADDR                    (volatile unsigned long *)0xd00524b4
//bit 13:8 pscale thread ID and token 
//bit 7 disable write response count adding to busy bit 
//bit 5:0  pscale prearbitor burst num
#define P_PSCALE_CTRL2                             (volatile unsigned long *)0xd00524b8
#define P_MC_MPORT_CTRL                            (volatile unsigned long *)0xd0052500
#define P_MC_MPORT_DAT                             (volatile unsigned long *)0xd0052504
#define P_MC_WT_PRED_CTRL                          (volatile unsigned long *)0xd0052508
#define P_MC_MBBOT_ST_EVEN_ADDR                    (volatile unsigned long *)0xd0052510
#define P_MC_MBBOT_ST_ODD_ADDR                     (volatile unsigned long *)0xd0052514
#define P_MC_DPDN_MB_XY                            (volatile unsigned long *)0xd0052518
#define P_MC_OMDN_MB_XY                            (volatile unsigned long *)0xd005251c
#define P_MC_HCMDBUF_H                             (volatile unsigned long *)0xd0052520
#define P_MC_HCMDBUF_L                             (volatile unsigned long *)0xd0052524
#define P_MC_HCMD_H                                (volatile unsigned long *)0xd0052528
#define P_MC_HCMD_L                                (volatile unsigned long *)0xd005252c
#define P_MC_IDCT_DAT                              (volatile unsigned long *)0xd0052530
#define P_MC_CTRL_GCLK_CTRL                        (volatile unsigned long *)0xd0052534
#define P_MC_OTHER_GCLK_CTRL                       (volatile unsigned long *)0xd0052538
//Bit 29:24, mbbot thread ID and token 
//Bit 21:16, mc read/write thread ID and token 
//Bit 13:8,  mbbot pre-arbitor burst number 
//Bit 5:0,   mc pre-arbitor burst number 
#define P_MC_CTRL2                                 (volatile unsigned long *)0xd005253c
// `define DBLK_QUANT            8'h76 // ONLY for $ucode/real/amrisc/rv.s, reg value from apollo
//`define ANC1_CANVAS_ADDR      8'h80
//`define ANC2_CANVAS_ADDR      8'h81
//`define REC_CANVAS_ADDR       8'h89
//`define MDEC_PIC_W          8'h8c
//`define MDEC_PIC_H          8'h8d
#define P_MDEC_PIC_DC_CTRL                         (volatile unsigned long *)0xd0052638
#define P_MDEC_PIC_DC_STATUS                       (volatile unsigned long *)0xd005263c
#define P_ANC0_CANVAS_ADDR                         (volatile unsigned long *)0xd0052640
#define P_ANC1_CANVAS_ADDR                         (volatile unsigned long *)0xd0052644
#define P_ANC2_CANVAS_ADDR                         (volatile unsigned long *)0xd0052648
#define P_ANC3_CANVAS_ADDR                         (volatile unsigned long *)0xd005264c
#define P_ANC4_CANVAS_ADDR                         (volatile unsigned long *)0xd0052650
#define P_ANC5_CANVAS_ADDR                         (volatile unsigned long *)0xd0052654
#define P_ANC6_CANVAS_ADDR                         (volatile unsigned long *)0xd0052658
#define P_ANC7_CANVAS_ADDR                         (volatile unsigned long *)0xd005265c
#define P_ANC8_CANVAS_ADDR                         (volatile unsigned long *)0xd0052660
#define P_ANC9_CANVAS_ADDR                         (volatile unsigned long *)0xd0052664
#define P_ANC10_CANVAS_ADDR                        (volatile unsigned long *)0xd0052668
#define P_ANC11_CANVAS_ADDR                        (volatile unsigned long *)0xd005266c
#define P_ANC12_CANVAS_ADDR                        (volatile unsigned long *)0xd0052670
#define P_ANC13_CANVAS_ADDR                        (volatile unsigned long *)0xd0052674
#define P_ANC14_CANVAS_ADDR                        (volatile unsigned long *)0xd0052678
#define P_ANC15_CANVAS_ADDR                        (volatile unsigned long *)0xd005267c
#define P_ANC16_CANVAS_ADDR                        (volatile unsigned long *)0xd0052680
#define P_ANC17_CANVAS_ADDR                        (volatile unsigned long *)0xd0052684
#define P_ANC18_CANVAS_ADDR                        (volatile unsigned long *)0xd0052688
#define P_ANC19_CANVAS_ADDR                        (volatile unsigned long *)0xd005268c
#define P_ANC20_CANVAS_ADDR                        (volatile unsigned long *)0xd0052690
#define P_ANC21_CANVAS_ADDR                        (volatile unsigned long *)0xd0052694
#define P_ANC22_CANVAS_ADDR                        (volatile unsigned long *)0xd0052698
#define P_ANC23_CANVAS_ADDR                        (volatile unsigned long *)0xd005269c
#define P_ANC24_CANVAS_ADDR                        (volatile unsigned long *)0xd00526a0
#define P_ANC25_CANVAS_ADDR                        (volatile unsigned long *)0xd00526a4
#define P_ANC26_CANVAS_ADDR                        (volatile unsigned long *)0xd00526a8
#define P_ANC27_CANVAS_ADDR                        (volatile unsigned long *)0xd00526ac
#define P_ANC28_CANVAS_ADDR                        (volatile unsigned long *)0xd00526b0
#define P_ANC29_CANVAS_ADDR                        (volatile unsigned long *)0xd00526b4
#define P_ANC30_CANVAS_ADDR                        (volatile unsigned long *)0xd00526b8
#define P_ANC31_CANVAS_ADDR                        (volatile unsigned long *)0xd00526bc
#define P_DBKR_CANVAS_ADDR                         (volatile unsigned long *)0xd00526c0
#define P_DBKW_CANVAS_ADDR                         (volatile unsigned long *)0xd00526c4
#define P_REC_CANVAS_ADDR                          (volatile unsigned long *)0xd00526c8
//28:24, read/write, current canvas idx, used in h264 only now
//23:0, read only, current canvas address, 23:16, Cr canvas addr, 15:8, Cb canvas addr, 7:0, Y  canvas addr
#define P_CURR_CANVAS_CTRL                         (volatile unsigned long *)0xd00526cc
#define P_MDEC_PIC_DC_THRESH                       (volatile unsigned long *)0xd00526e0
#define P_MDEC_PICR_BUF_STATUS                     (volatile unsigned long *)0xd00526e4
#define P_MDEC_PICW_BUF_STATUS                     (volatile unsigned long *)0xd00526e8
#define P_MCW_DBLK_WRRSP_CNT                       (volatile unsigned long *)0xd00526ec
#define P_MC_MBBOT_WRRSP_CNT                       (volatile unsigned long *)0xd00526f0
#define P_MDEC_PICW_BUF2_STATUS                    (volatile unsigned long *)0xd00526f4
#define P_WRRSP_FIFO_PICW_DBK                      (volatile unsigned long *)0xd00526f8
#define P_WRRSP_FIFO_PICW_MC                       (volatile unsigned long *)0xd00526fc
#define P_AV_SCRATCH_0                             (volatile unsigned long *)0xd0052700
#define P_AV_SCRATCH_1                             (volatile unsigned long *)0xd0052704
#define P_AV_SCRATCH_2                             (volatile unsigned long *)0xd0052708
#define P_AV_SCRATCH_3                             (volatile unsigned long *)0xd005270c
#define P_AV_SCRATCH_4                             (volatile unsigned long *)0xd0052710
#define P_AV_SCRATCH_5                             (volatile unsigned long *)0xd0052714
#define P_AV_SCRATCH_6                             (volatile unsigned long *)0xd0052718
#define P_AV_SCRATCH_7                             (volatile unsigned long *)0xd005271c
#define P_AV_SCRATCH_8                             (volatile unsigned long *)0xd0052720
#define P_AV_SCRATCH_9                             (volatile unsigned long *)0xd0052724
#define P_AV_SCRATCH_A                             (volatile unsigned long *)0xd0052728
#define P_AV_SCRATCH_B                             (volatile unsigned long *)0xd005272c
#define P_AV_SCRATCH_C                             (volatile unsigned long *)0xd0052730
#define P_AV_SCRATCH_D                             (volatile unsigned long *)0xd0052734
#define P_AV_SCRATCH_E                             (volatile unsigned long *)0xd0052738
#define P_AV_SCRATCH_F                             (volatile unsigned long *)0xd005273c
#define P_AV_SCRATCH_G                             (volatile unsigned long *)0xd0052740
#define P_AV_SCRATCH_H                             (volatile unsigned long *)0xd0052744
#define P_AV_SCRATCH_I                             (volatile unsigned long *)0xd0052748
#define P_AV_SCRATCH_J                             (volatile unsigned long *)0xd005274c
#define P_AV_SCRATCH_K                             (volatile unsigned long *)0xd0052750
#define P_AV_SCRATCH_L                             (volatile unsigned long *)0xd0052754
#define P_AV_SCRATCH_M                             (volatile unsigned long *)0xd0052758
#define P_AV_SCRATCH_N                             (volatile unsigned long *)0xd005275c
// bit[29:24] A_brst_num_co_mb
// bit[21:16] A_id_co_mb
// bit[11:0] wrrsp_count_co_mb
#define P_WRRSP_CO_MB                              (volatile unsigned long *)0xd0052760
// bit[29:24] A_brst_num_dcac
// bit[21:16] A_id_dcac
// bit[11:0] wrrsp_count_dcac
#define P_WRRSP_DCAC                               (volatile unsigned long *)0xd0052764
//======================================
//  MC Control Register Bits
//
//======================================
// For bits, just copy the defines...don't translate to addresses
    #define MC_ENABLE	    0x0001
    //`define MC_RESET	    16'h0002
    #define SKIP_MB		    0x0004

//======================================
//  MB Info Register Bits
//
//======================================
    #define INTRA_MB	    0x0001

    #define BWD_PRED	    0x0004
    #define FWD_PRED	    0x0008

    #define FLD_MOT		    0x0100
    #define FRM_16x8_MOT	0x0200
    #define DUAL_PRM_MOT	0x0300

    #define FRM_DCT		    0x0000	    // Bit 10
    #define FLD_DCT		    0x0400

//======================================
//  MB Info Register Bits
//
//======================================
    #define I_PIC		    0x0001
    #define P_PIC		    0x0002
    #define B_PIC		    0x0003
    
    #define FLD_PIC		    0x0000	    // Bit 8
    #define FRM_PIC		    0x0100	    
//========================================================================
// DBLK Register:  12'h950 - 12'h97f 
//========================================================================
#define P_DBLK_RST                                 (volatile unsigned long *)0xd0052540
#define P_DBLK_CTRL                                (volatile unsigned long *)0xd0052544
#define P_DBLK_MB_WID_HEIGHT                       (volatile unsigned long *)0xd0052548
#define P_DBLK_STATUS                              (volatile unsigned long *)0xd005254c
#define P_DBLK_CMD_CTRL                            (volatile unsigned long *)0xd0052550
#define P_DBLK_MB_XY                               (volatile unsigned long *)0xd0052554
#define P_DBLK_QP                                  (volatile unsigned long *)0xd0052558
#define P_DBLK_Y_BHFILT                            (volatile unsigned long *)0xd005255c
#define P_DBLK_Y_BHFILT_HIGH                       (volatile unsigned long *)0xd0052560
#define P_DBLK_Y_BVFILT                            (volatile unsigned long *)0xd0052564
#define P_DBLK_CB_BFILT                            (volatile unsigned long *)0xd0052568
#define P_DBLK_CR_BFILT                            (volatile unsigned long *)0xd005256c
#define P_DBLK_Y_HFILT                             (volatile unsigned long *)0xd0052570
#define P_DBLK_Y_HFILT_HIGH                        (volatile unsigned long *)0xd0052574
#define P_DBLK_Y_VFILT                             (volatile unsigned long *)0xd0052578
#define P_DBLK_CB_FILT                             (volatile unsigned long *)0xd005257c
#define P_DBLK_CR_FILT                             (volatile unsigned long *)0xd0052580
#define P_DBLK_BETAX_QP_SEL                        (volatile unsigned long *)0xd0052584
#define P_DBLK_CLIP_CTRL0                          (volatile unsigned long *)0xd0052588
#define P_DBLK_CLIP_CTRL1                          (volatile unsigned long *)0xd005258c
#define P_DBLK_CLIP_CTRL2                          (volatile unsigned long *)0xd0052590
#define P_DBLK_CLIP_CTRL3                          (volatile unsigned long *)0xd0052594
#define P_DBLK_CLIP_CTRL4                          (volatile unsigned long *)0xd0052598
#define P_DBLK_CLIP_CTRL5                          (volatile unsigned long *)0xd005259c
#define P_DBLK_CLIP_CTRL6                          (volatile unsigned long *)0xd00525a0
#define P_DBLK_CLIP_CTRL7                          (volatile unsigned long *)0xd00525a4
#define P_DBLK_CLIP_CTRL8                          (volatile unsigned long *)0xd00525a8
#define P_DBLK_STATUS1                             (volatile unsigned long *)0xd00525ac
#define P_DBLK_GCLK_FREE                           (volatile unsigned long *)0xd00525b0
#define P_DBLK_GCLK_OFF                            (volatile unsigned long *)0xd00525b4
#define P_DBLK_AVSFLAGS                            (volatile unsigned long *)0xd00525b8
// bit 15:0
#define P_DBLK_CBPY                                (volatile unsigned long *)0xd00525c0
// bit 11:8 -- deblk_cbpy_bottom
// bit 7:4 -- deblk_cbpy_left
// bit 3:0 -- deblk_cbpy_top
#define P_DBLK_CBPY_ADJ                            (volatile unsigned long *)0xd00525c4
// bit 7:0 -- deblk_cbpc
#define P_DBLK_CBPC                                (volatile unsigned long *)0xd00525c8
// bit 15 -- bottom_mb
// bit 14 -- left_mb
// bit 13 -- top_mb
// bit 12 -- reserved
// bit 11:8 -- deblk_cbpc_bottom
// bit 7:4 -- deblk_cbpc_left
// bit 3:0 -- deblk_cbpc_top
#define P_DBLK_CBPC_ADJ                            (volatile unsigned long *)0xd00525cc
// bit 15:8 -- deblk_hmvd   -- {left_1, left_0, below_1, below_0, block3-0} 
// bit 7:0 -- deblk_vmvd    -- {top_1, top_0, below_1, below_0, block3-0} 
#define P_DBLK_VHMVD                               (volatile unsigned long *)0xd00525d0
// bit 13:12 -- right_vmvd
// bit 11 -- right_above_vmvd
// bit 10 -- left_below_hmvd
// bit 9 -- disable_dblk_luma  
// bit 8 -- disable_dblk_chroma
// bit 7 -- bBelowRefDiff
// bit 6 -- bLeftRefDiff
// bit 5 -- bAboveRefDiff
// bit 4 -- reserved
// bit 3 -- s_below
// bit 2 -- s_left
// bit 1 -- s_above
// bit 0 -- s 
#define P_DBLK_STRONG                              (volatile unsigned long *)0xd00525d4
// bit 14:10 -- PQUANT 
// bit 9:5 -- left_PQUANT 
// bit 4:0 -- top_PQUANT 
#define P_DBLK_RV8_QUANT                           (volatile unsigned long *)0xd00525d8
#define P_DBLK_CBUS_HCMD2                          (volatile unsigned long *)0xd00525dc
#define P_DBLK_CBUS_HCMD1                          (volatile unsigned long *)0xd00525e0
#define P_DBLK_CBUS_HCMD0                          (volatile unsigned long *)0xd00525e4
#define P_DBLK_VLD_HCMD2                           (volatile unsigned long *)0xd00525e8
#define P_DBLK_VLD_HCMD1                           (volatile unsigned long *)0xd00525ec
#define P_DBLK_VLD_HCMD0                           (volatile unsigned long *)0xd00525f0
#define P_DBLK_OST_YBASE                           (volatile unsigned long *)0xd00525f4
#define P_DBLK_OST_CBCRDIFF                        (volatile unsigned long *)0xd00525f8
//13:8 dblk thread ID and token 
//5:0  dblk prearbitor burst num
#define P_DBLK_CTRL1                               (volatile unsigned long *)0xd00525fc
// MCRCC_CTL1
// 31:3  <reserved[23:0]>
// 2     <cfg_field_pic>
// 1     <sw_rst>
// 0     <bypass_en>
#define P_MCRCC_CTL1                               (volatile unsigned long *)0xd0052600
// MCRCC_CTL2
// 31:24    <cfg_cache_anc01_c[7:0]>
// 23:16    <cfg_cache_anc01_y[7:0]>
// 15:8     <cfg_cache_anc00_c[7:0]>
// 7:0      <cfg_cache_anc00_y[7:0]>
#define P_MCRCC_CTL2                               (volatile unsigned long *)0xd0052604
// MCRCC_CTL3
// 31:24    <cfg_cache_anc11_c[7:0]>
// 23:16    <cfg_cache_anc11_y[7:0]>
// 15:8     <cfg_cache_anc10_c[7:0]>
// 7:0      <cfg_cache_anc10_y[7:0]>
#define P_MCRCC_CTL3                               (volatile unsigned long *)0xd0052608
// bit[31:10] reserved
// bit[9:0] sw_clock_gating control 
// [9] vdec clk_en for assist and cbus.
// [8] vdec clk_en for ddr
// [7] vdec clk_en for vcpu
// [6] vdec clk_en for assist
// [5] vdec clk_en for dblk
// [4] vdec clk_en for iqidct
// [3] vdec clk_en for mc
// [2] vdec clk_en for pic_dc
// [1] vdec clk_en for psc
// [0] vdec clk_en for vld
#define P_GCLK_EN                                  (volatile unsigned long *)0xd005260c
// [0]  Reserved 
// [1]  Reserved
// [2]  Reset assist, mdec's CBUS
// [3]  Reset mdec's VLD
// [4]  Reset mdec's VLD
// [5]  Reset mdec's VLD
// [6]  Reset mdec's IQIDCT
// [7]  Reset mdec's MC
// [8]  Reset mdec's DBLK
// [9]  Reset mdec's PIC_DC
// [10] Reset mdec's Pscale
// [11] Reset vcpu's MCPU
// [12] Reset vcpu's CCPU
// [13] Reset mmc_pre_arb
#define P_MDEC_SW_RESET                            (volatile unsigned long *)0xd0052610
//DBLK last address 12'h97f
//
// Closing file:  mdec_regs.h
//
//------------------------------------------------------------------------------
// VLD module level register offset
//------------------------------------------------------------------------------
//
// Reading file:  vld_regs.h
//
//========================================================================
//  VLD module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_VDEC_VLD_CBUS_BASE = 0x0c
// -----------------------------------------------
#define P_VLD_STATUS_CTRL                          (volatile unsigned long *)0xd0053000
//
// bit 10 -- use_old_shift_en
// bit 9 -- output_mv_not_pmv
// bit 8:5 -- force_zigzag
// bit 4 -- force_zigzag_en
// bit 3 -- disable_viff_anempty_int
// bit 2 -- disable_m2_ac_coeff_one_cycle
// bit 1 -- forced_reset  force reset pmv
// bit 0 -- mpeg_type  0:mpeg1 1: mpeg2
#define P_MPEG1_2_REG                              (volatile unsigned long *)0xd0053004
#define P_F_CODE_REG                               (volatile unsigned long *)0xd0053008
#define P_PIC_HEAD_INFO                            (volatile unsigned long *)0xd005300c
#define P_SLICE_VER_POS_PIC_TYPE                   (volatile unsigned long *)0xd0053010
#define P_QP_VALUE_REG                             (volatile unsigned long *)0xd0053014
#define P_MBA_INC                                  (volatile unsigned long *)0xd0053018
#define P_MB_MOTION_MODE                           (volatile unsigned long *)0xd005301c
//`define PACKET_BYTE_COUNT   8'h08
// bit 15 -- force_search_startcode_en
// bit 14 -- int_cpu_when_error (before do anything)
// bit 13 -- vld_error_reset
// bit 12 -- return_on_slice_header
// bit 6 -- jpeg_ff00_en 
// bit 5:0 -- vld_power_ctl
#define P_POWER_CTL_VLD                            (volatile unsigned long *)0xd0053020
#define P_MB_WIDTH                                 (volatile unsigned long *)0xd0053024
#define P_SLICE_QP                                 (volatile unsigned long *)0xd0053028
// `define MB_X_MB_Y           8'h0b   /* current MBX and MBY                  */
#define P_PRE_START_CODE                           (volatile unsigned long *)0xd005302c
#define P_SLICE_START_BYTE_01                      (volatile unsigned long *)0xd0053030
#define P_SLICE_START_BYTE_23                      (volatile unsigned long *)0xd0053034
#define P_RESYNC_MARKER_LENGTH                     (volatile unsigned long *)0xd0053038
// bit[6:5] - frame/field info, 01 - top, 10 - bottom, 11 - frame
// bit[4:0] - buffer ID
// L0_BUFF_ID_0, L0_BUFF_ID_1, L1_BUFF_ID_0, L1_BUFF_ID_1
#define P_DECODER_BUFFER_INFO                      (volatile unsigned long *)0xd005303c
#define P_FST_FOR_MV_X                             (volatile unsigned long *)0xd0053040
#define P_FST_FOR_MV_Y                             (volatile unsigned long *)0xd0053044
#define P_SCD_FOR_MV_X                             (volatile unsigned long *)0xd0053048
#define P_SCD_FOR_MV_Y                             (volatile unsigned long *)0xd005304c
#define P_FST_BAK_MV_X                             (volatile unsigned long *)0xd0053050
#define P_FST_BAK_MV_Y                             (volatile unsigned long *)0xd0053054
#define P_SCD_BAK_MV_X                             (volatile unsigned long *)0xd0053058
#define P_SCD_BAK_MV_Y                             (volatile unsigned long *)0xd005305c
// Bit 7:4 -- read_buffer_interlace  0-progressive, 1-interlace, used in VC1
// bit 3 -- reserved
// bit 2 -- weighting_prediction
// bit 1 -- mb_weighting_flag
// bit 0 -- slice_weighting_flag 
#define P_VLD_DECODE_CONTROL                       (volatile unsigned long *)0xd0053060
#define P_VLD_REVERVED_19                          (volatile unsigned long *)0xd0053064
#define P_VIFF_BIT_CNT                             (volatile unsigned long *)0xd0053068
#define P_BYTE_ALIGN_PEAK_HI                       (volatile unsigned long *)0xd005306c
#define P_BYTE_ALIGN_PEAK_LO                       (volatile unsigned long *)0xd0053070
#define P_NEXT_ALIGN_PEAK                          (volatile unsigned long *)0xd0053074
// bit 19    : vc1_inv_intra_co_mb_ref_rd
// bit 18    : vc1_inv_co_mb_ref_rd
// bit 17    : vc1_inv_intra_co_mb_ref_wr
// bit 16    : vc1_inv_co_mb_ref_wr
// bit 15    : reserved
// bit 14    : avs_drop_enable
// bit 13:12 : avs_drop_ptr
// bit 11:8  : avs_demu_ctl_reg
// bit 7 : avs_enable
// bit 6 : disable_dblk_hcmd
// bit 5 : disable_mc_hcmd
// bit 4 : first_mode3_set enable
// bit 3 : first_mode3
// bit 2:1 : vc1_profile  0-SP, 1-MP, 2-reserved, 3-AP
// bit 0   : vc1_enable
#define P_VC1_CONTROL_REG                          (volatile unsigned long *)0xd0053078
#define P_PMV1_X                                   (volatile unsigned long *)0xd0053080
#define P_PMV1_Y                                   (volatile unsigned long *)0xd0053084
#define P_PMV2_X                                   (volatile unsigned long *)0xd0053088
#define P_PMV2_Y                                   (volatile unsigned long *)0xd005308c
#define P_PMV3_X                                   (volatile unsigned long *)0xd0053090
#define P_PMV3_Y                                   (volatile unsigned long *)0xd0053094
#define P_PMV4_X                                   (volatile unsigned long *)0xd0053098
#define P_PMV4_Y                                   (volatile unsigned long *)0xd005309c
// Can't use the same address for different defines
// Therefore, create a single define that covers both
// Only appears to be used in micro-code since the VLD hardware is 
// hard coded.
// `define M4_TABLE_SELECT     8'h28  // Does this exist in HW ? Added from register_mp2.h
// `define M4_TABLE_OUTPUT     8'h28  // Does this exist in HW ? Added from register_mp2.h
#define P_M4_TABLE_SELECT                          (volatile unsigned long *)0xd00530a0
#define P_M4_CONTROL_REG                           (volatile unsigned long *)0xd00530a4
#define P_BLOCK_NUM                                (volatile unsigned long *)0xd00530a8
#define P_PATTERN_CODE                             (volatile unsigned long *)0xd00530ac
#define P_MB_INFO                                  (volatile unsigned long *)0xd00530b0
#define P_VLD_DC_PRED                              (volatile unsigned long *)0xd00530b4
#define P_VLD_ERROR_MASK                           (volatile unsigned long *)0xd00530b8
#define P_VLD_DC_PRED_C                            (volatile unsigned long *)0xd00530bc
#define P_LAST_SLICE_MV_ADDR                       (volatile unsigned long *)0xd00530c0
#define P_LAST_MVX                                 (volatile unsigned long *)0xd00530c4
#define P_LAST_MVY                                 (volatile unsigned long *)0xd00530c8
#define P_VLD_C38                                  (volatile unsigned long *)0xd00530e0
#define P_VLD_C39                                  (volatile unsigned long *)0xd00530e4
#define P_VLD_STATUS                               (volatile unsigned long *)0xd00530e8
#define P_VLD_SHIFT_STATUS                         (volatile unsigned long *)0xd00530ec
// `define VLD_SHIFT_INFO      8'h3b  // Does this exist in HW ? used in $ucode/mpeg4
#define P_VOFF_STATUS                              (volatile unsigned long *)0xd00530f0
#define P_VLD_C3D                                  (volatile unsigned long *)0xd00530f4
#define P_VLD_DBG_INDEX                            (volatile unsigned long *)0xd00530f8
// vld_buff_info -- (index == 0) 
// Bit[7:6]  mv_UR_ready_cnt;
// Bit[5]  vld_wr_idx
// Bit[4]  iq_rd_idx
// Bit[3]  vld_vi_block_rdy_1
// Bit[2]  vld_vi_block_rdy_2
// Bit[1]  voff_empty_1
// Bit[0]  voff_empty_2
// cabac_buff_info_0 -- (index == 1) 
// Bit[31] shift_data_ready
// Bit[30:29] Reserved
// Bit[28:24] cabac_buffer_ptr
// Bit[23:0] cabac_buffer
// cabac_buff_info_1 -- (index == 2) 
// Bit[31:29] Reserved
// Bit[28:20] Drange
// Bit[19:16] bin_count_4
// Bit[15:13] Reserved
// Bit[12:6] context_mem_do
// Bit[5:3] coeff_state
// Bit[2:0] mvd_state
// h264_mv_present -- (index == 3) 
// Bit[31:16] mv_present_l0
// Bit[15:0] mv_present_l1
// h264_mv_cal_info_0 -- (index == 4) 
// [31:28] mv_cal_state
// [27:24] direct_spatial_cnt
// Bit[23:21] Reserved
// Bit[20] mv_UR_ready_for_mv_cal
// Bit[19] co_mb_mem_ready_for_mv_cal
// Bit[18] mc_dblk_cmd_if_busy
// Bit[17] h264_co_mb_wr_busy
// Bit[16] H264_cbp_blk_ready
// Bit[15] mc_hcmd_rrdy
// Bit[14] mc_hcmd_srdy
// Bit[13] mc_cmd_if_ready
// Bit[12] mc_hcmd_mv_available
// Bit[11:8] mc_cmd_if_state
// Bit[7] dblk_hcmd_rrdy
// Bit[6] dblk_hcmd_srdy
// Bit[5] dblk_cmd_if_ready
// Bit[4] dblk_hcmd_mv_available
// Bit[3:0] dblk_cmd_if_state
// h264_mv_cal_info_1 -- (index == 5) 
//  Bit[31:29] Reserved
//  Bit[28:24] total_mvd_num_l0
//  Bit[23:21] Reserved
//  Bit[20:16] mv_cal_ptr_l0
//  Bit[15:13] Reserved
//  Bit[12:8] mc_hcmd_ptr_l0
//  Bit[7:5] Reserved
//  Bit[4:0] dblk_hcmd_ptr_l0
// h264_mv_cal_info_2 -- (index == 6) 
//  Bit[31:29] Reserved
//  Bit[28:24] total_mvd_num_l1
//  Bit[23:21] Reserved
//  Bit[20:16] mv_cal_ptr_l1
//  Bit[15:13] Reserved
//  Bit[12:8] mc_hcmd_ptr_l1
//  Bit[7:5] Reserved
//  Bit[4:0] dblk_hcmd_ptr_l1
// h264_co_mb_info -- (index == 7)
// Bit[31:26] Reserved
// Bit[25] mv_scale_cal_busy
// Bit[24:20] co_mv_count
// Bit[19:16] co_mv_process_state
// Bit[15] h264_co_mb_rd_busy
// Bit[15] h264_co_mb_rd_ready
// Bit[13:12] co_mv_transfer_block_cnt
// Bit[11:8] co_mv_transfer_ptr
// Bit[7] co_mv_POC_l1_busy
// Bit[6] h264_weight_scale_cal_en
// Bit[5] weight_cal_busy
// Bit[4] weight_cal_not_finished
// Bit[3:0] weight_process_state
#define P_VLD_DBG_DATA                             (volatile unsigned long *)0xd00530fc
// --------------------------------------------
// VIFIFO DDR Interface
// --------------------------------------------
// The VIFIFO start pointer into DDR memory is a 32-bit number
// The Start pointer will automatically be truncated to land on 
// an 8-byte boundary.  That is, bits [2:0] = 0;
#define P_VLD_MEM_VIFIFO_START_PTR                 (volatile unsigned long *)0xd0053100
// The current pointer points so some location between the START and END 
// pointers.  The current pointer is a BYTE pointer.  That is, you can 
// point to any BYTE address within the START/END range
#define P_VLD_MEM_VIFIFO_CURR_PTR                  (volatile unsigned long *)0xd0053104
#define P_VLD_MEM_VIFIFO_END_PTR                   (volatile unsigned long *)0xd0053108
#define P_VLD_MEM_VIFIFO_BYTES_AVAIL               (volatile unsigned long *)0xd005310c
// VIFIFO FIFO Control
// bit  [31:24] viff_empty_int_enable_cpu[7:0] 
// bit  [23:16] viff_empty_int_enable_amrisc[7:0] 
//   -bit 23 Video BUFFER < 0x400 Bytes
//   -bit 22 Video BUFFER < 0x200 Bytes
//   -bit 21 Video BUFFER < 0x100 Bytes
//   -bit 20 Video BUFFER < 0x80 Bytes
//   -bit 19 Video BUFFER < 0x40 Bytes
//   -bit 18 Video BUFFER < 0x20 Bytes
//   -bit 17 vififo  < 16 double words
//   -bit 16 vififo  < 8 double words
// bit  [15:13] unused
// bit  [12]    A_urgent
// bit  [11]    transfer_length 0 - 32x64 Bits per request, 1 - 16x64 Bits per request
// bit  [10]    use_level       Set this bit to 1 to enable filling of the FIFO controlled by the buffer
//                              level control.  If this bit is 0, then use bit[1] to control the enabling of filling
// bit  [9]     Data Ready.     This bit is set when data can be popped
// bit  [8]     fill busy       This bit will be high when we're fetching data from the DDR memory
//                              To reset this module, set cntl_enable = 0, and then wait for busy = 0. 
//                              After that you can pulse cntl_init to start over
// bit  [7]     init_with_cntl_init
// bit  [6]     reserved
// bits [5:3]   endian:         see $lib/rtl/ddr_endian.v
// bit  [2]     cntl_empty_en   Set to 1 to enable reading the DDR memory FIFO
//                              Set cntl_empty_en = cntl_fill_en = 0 when pulsing cntl_init
// bit  [1]     cntl_fill_en    Set to 1 to enable reading data from DDR memory
// bit  [0]     cntl_init:      After setting the read pointers, sizes, channel masks
//                              and read masks, set this bit to 1 and then to 0
//                              NOTE:  You don't need to pulse cntl_init if only the start address is
//                              being changed
#define P_VLD_MEM_VIFIFO_CONTROL                   (volatile unsigned long *)0xd0053110
// --------------------------------------------
// VIFIFO Buffer Level Manager
// --------------------------------------------
#define P_VLD_MEM_VIFIFO_WP                        (volatile unsigned long *)0xd0053114
#define P_VLD_MEM_VIFIFO_RP                        (volatile unsigned long *)0xd0053118
#define P_VLD_MEM_VIFIFO_LEVEL                     (volatile unsigned long *)0xd005311c
//
// bit  [8]     use_parser_video2_wp
// bit  [7]     vbuf2_out_manual
// bit  [6]     vbuf_out_manual
// bit  [5]     empty (ReadOnly)
// bit  [4]     full (ReadOnly)
// bit  [3:2]   reserved
// bit  [1]     manual mode     Set to 1 for manual write pointer mode
// bit  [0]     Init            Set high then low after everything has been initialized
#define P_VLD_MEM_VIFIFO_BUF_CNTL                  (volatile unsigned long *)0xd0053120
// bit 31:16 -- drop_bytes
// bit 15:14 -- drop_status (Read-Only)
// bit 13:12 -- sync_match_position (Read-Only)
// bit 11:6 -- reserved
// bit 5:4 -- TIME_STAMP_NUMBER, 0-32bits, 1-64bits, 2-96bits, 3-128bits 
// bit 3 -- stamp_soft_reset
// bit 2 -- TIME_STAMP_length_enable
// bit 1 -- TIME_STAMP_sync64_enable
// bit 0 -- TIME_STAMP_enable
#define P_VLD_TIME_STAMP_CNTL                      (volatile unsigned long *)0xd0053124
// bit 31:0 -- TIME_STAMP_SYNC_CODE_0
#define P_VLD_TIME_STAMP_SYNC_0                    (volatile unsigned long *)0xd0053128
// bit 31:0 -- TIME_STAMP_SYNC_CODE_1 
#define P_VLD_TIME_STAMP_SYNC_1                    (volatile unsigned long *)0xd005312c
// bit 31:0 TIME_STAMP_0
#define P_VLD_TIME_STAMP_0                         (volatile unsigned long *)0xd0053130
// bit 31:0 TIME_STAMP_1
#define P_VLD_TIME_STAMP_1                         (volatile unsigned long *)0xd0053134
// bit 31:0 TIME_STAMP_2
#define P_VLD_TIME_STAMP_2                         (volatile unsigned long *)0xd0053138
// bit 31:0 TIME_STAMP_3
#define P_VLD_TIME_STAMP_3                         (volatile unsigned long *)0xd005313c
// bit 31:0 TIME_STAMP_LENGTH
#define P_VLD_TIME_STAMP_LENGTH                    (volatile unsigned long *)0xd0053140
// bit 15:0 vififo_rd_count
#define P_VLD_MEM_VIFIFO_WRAP_COUNT                (volatile unsigned long *)0xd0053144
// bit 29:24 A_brst_num
// bit 21:16 A_id
// bit 15:0 level_hold 
#define P_VLD_MEM_VIFIFO_MEM_CTL                   (volatile unsigned long *)0xd0053148
#define P_VLD_MEM_VBUF_RD_PTR                      (volatile unsigned long *)0xd005314c
#define P_VLD_MEM_VBUF2_RD_PTR                     (volatile unsigned long *)0xd0053150
#define P_VLD_MEM_SWAP_ADDR                        (volatile unsigned long *)0xd0053154
// bit[23:16] - swap_d_count (Read Only)
// bit[15:8]  - swap_a_count (Read Only)
// bit [7] - swap busy (Read Only)
// bit [6:2] - reserved
// bit [1] - 1 - STORE to Memory, 0 - LOAD from Memory
// bit [0] - swap active
#define P_VLD_MEM_SWAP_CTL                         (volatile unsigned long *)0xd0053158
//
// Closing file:  vld_regs.h
//
//------------------------------------------------------------------------------
// IQ/IDCT module level register offset
//------------------------------------------------------------------------------
//
// Reading file:  iqidct_regs.h
//
//========================================================================
//  IQ/IDCT module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_VDEC_IQIDCT_CBUS_BASE = 0x0e
// -----------------------------------------------
#define P_VCOP_CTRL_REG                            (volatile unsigned long *)0xd0053800
#define P_QP_CTRL_REG                              (volatile unsigned long *)0xd0053804
#define P_INTRA_QUANT_MATRIX                       (volatile unsigned long *)0xd0053808
#define P_NON_I_QUANT_MATRIX                       (volatile unsigned long *)0xd005380c
#define P_DC_SCALER                                (volatile unsigned long *)0xd0053810
#define P_DC_AC_CTRL                               (volatile unsigned long *)0xd0053814
// `define RV_AI_CTRL          8'h05  // ONLY for $ucode/real/amrisc/rv.s reg value from apollo
#define P_DC_AC_SCALE_MUL                          (volatile unsigned long *)0xd0053818
#define P_DC_AC_SCALE_DIV                          (volatile unsigned long *)0xd005381c
// `define DC_AC_SCALE_RESULT  8'h06
// `define RESERVED_E07        8'h07
#define P_POWER_CTL_IQIDCT                         (volatile unsigned long *)0xd0053820
#define P_RV_AI_Y_X                                (volatile unsigned long *)0xd0053824
#define P_RV_AI_U_X                                (volatile unsigned long *)0xd0053828
#define P_RV_AI_V_X                                (volatile unsigned long *)0xd005382c
// bit 15:0 will count up when rv_ai_mb finished when non zero
// and rv_ai_mb_finished_int will be generate when this is not zero
#define P_RV_AI_MB_COUNT                           (volatile unsigned long *)0xd0053830
// For H264 I in PB picture Use -- dma type : h264_next_intra_dma
#define P_NEXT_INTRA_DMA_ADDRESS                   (volatile unsigned long *)0xd0053834
// Bit 0 -- constrained_intra_pred_flag for H264
#define P_IQIDCT_CONTROL                           (volatile unsigned long *)0xd0053838
// Bit[31:19] Reserved
// Bit[18] iq_waiting
// Bit[17] iq_om_wr_idx
// Bit[16] iq_om_rd_idx
// Bit[15] iq_om_busy
// Bit[14] iq_om_2_busy 
// Bit[13] idx_fifo_0
// Bit[12] idx_fifo_1
// Bit[11] idx_fifo_2
// Bit[10] idx_fifo_3
// Bit[9] idx_fifo_4
// Bit[8] idx_fifo_5
// Bit[7] idx_fifo_6
// Bit[6] idx_fifo_7
// Bit[5:3] idx_fifo_wp
// Bit[2:0] idx_fifo_rp
#define P_IQIDCT_DEBUG_INFO_0                      (volatile unsigned long *)0xd005383c
// For RTL Simulation Only
#define P_DEBLK_CMD                                (volatile unsigned long *)0xd0053840
// Bit[15+16] ds_mc_valid_2
// Bit[14+16] new_idct1_rd_idx_2
// Bit[13+16] new_idct1_wr_idx_2
// Bit[12+16] idct1_buff0_busy_2
// Bit[11+16] idct1_buff1_busy_2
// Bit[10+16] new_idct1_busy_2
// Bit[9+16] iq_om_8val_2
// Bit[8+16] idct1_pipe_busy_2
// Bit[7+16] wait_mb_left_finish_hold_2
// Bit[6+16] new_idct2_rd_idx_2
// Bit[5+16] new_idct2_wr_idx_2
// Bit[4+16] idct2_buff0_busy_2
// Bit[3+16] idct2_buff1_busy_2
// Bit[2+16] idct2_en_2
// Bit[1+16] new_idct2_busy_2
// Bit[0+16] new_idct1_ready_2
// Bit[15] ds_mc_valid_1
// Bit[14] new_idct1_rd_idx_1
// Bit[13] new_idct1_wr_idx_1
// Bit[12] idct1_buff0_busy_1
// Bit[11] idct1_buff1_busy_1
// Bit[10] new_idct1_busy_1
// Bit[9] iq_om_8val_1
// Bit[8] idct1_pipe_busy_1
// Bit[7] wait_mb_left_finish_hold_1
// Bit[6] new_idct2_rd_idx_1
// Bit[5] new_idct2_wr_idx_1
// Bit[4] idct2_buff0_busy_1
// Bit[3] idct2_buff1_busy_1
// Bit[2] idct2_en_1
// Bit[1] new_idct2_busy_1
// Bit[0] new_idct1_ready_1
#define P_IQIDCT_DEBUG_IDCT                        (volatile unsigned long *)0xd0053844
// bit 31 -- convas_enable
// bit 30:24 -- convas_x_count ( 8 pixels / 64 bits )
// bit 23:16 -- convas_y_count
// bit 15   -- dcac_dma_busy
// bit 14   -- dcac_dma_urgent
// bit 13:8 -- dcac_dma_count
// bit 7    -- dcac_dma_rw
// bit 6    -- dcac_skip_read_mode
// bit 5:0  -- dcac_dma_offset
#define P_DCAC_DMA_CTRL                            (volatile unsigned long *)0xd0053848
// when (convas_enable == 0 )
//   bit 31:0 dcac_dma_addr
// when (convas_enable == 1 )
//   bit 31:25 canvas_addr (7 bits)
//   bit 24:12 convas_y_start ( 13 btis )
//   bit 11:0  convas_x_start ( 12 btis )
#define P_DCAC_DMA_ADDRESS                         (volatile unsigned long *)0xd005384c
// bit 7:0 -- dcac_cpu_addr
#define P_DCAC_CPU_ADDRESS                         (volatile unsigned long *)0xd0053850
// bit 31:0 -- dcac_cpu_data
#define P_DCAC_CPU_DATA                            (volatile unsigned long *)0xd0053854
// bit 31:19 -- reserved
// bit 18:16 -- block_num_reg -- Read-Only 
// bit 15:0 -- dcac_mb_count
#define P_DCAC_MB_COUNT                            (volatile unsigned long *)0xd0053858
// bit 31:18 -- reserved
// For H264 :
//   bit 17:2 -- h264_quant 
//   bit 11:6 -- h264_quant_c 
//   bit  5:0 -- h264_quant_c 
// For VC1 :
//   bit    17 -- qindex_GT_8
//   bit    16 -- HalfQPStep
//   bit 15:12 -- eQuantMode 
//   bit 11:6  -- AltPQuant 
//   bit  5:0  -- PQuant 
//             
#define P_IQ_QUANT                                 (volatile unsigned long *)0xd005385c
// bit 31:24  -- bitplane_width 
// bit 23:16  -- bitplane_height 
// bit 15:14  -- bitplane_start_x 
// bit 13:12  -- bitplane_start_y 
// bit 11:4   -- reserved
// bit 3:1    -- bitplane_type
// bit 0      -- bitplane_busy
#define P_VC1_BITPLANE_CTL                         (volatile unsigned long *)0xd0053860
    #define RAM_TEST_CMD        0x002
    #define RAM_TEST_ADDR       0x003
    #define RAM_TEST_DATAH      0x004
    #define RAM_TEST_DATAL      0x005

    #define RAM_TEST_RD_CMD	    0x0000
    #define RAM_TEST_WR_CMD	    0x8000
    #define IDCT_TM2_PT0	    0x0001
    #define IDCT_TM2_PT1	    0x0002
    #define IDCT_TM1_PT0	    0x0004
    #define IDCT_TM1_PT1	    0x0008
    #define IQ_OMEM_PT0	        0x0010
    #define IQ_OMEM_PT1	        0x0020
    #define MC_IMEM_PT0	        0x0040
    #define ALL_RAM_PTS	        0x007f
//======================================
//  VCOP Control Register Bits
//
//======================================
    //`define IQIDCT_RESET	    16'h0001	    // Bit 0
    #define QM_WEN		    0x0002	    // Bit 1
    #define IQIDCT_ENABLE	    0x0004	    // Bit 2
    #define INTRA_QM	    0x0008	    // Bit 3	0 = Use default; 1 = use loaded
    #define NINTRA_QM	    0x0010	    // Bit 4	0 = Use default; 1 = use loaded
//======================================
//  QP Control Register Bits
//
//======================================
    #define INTRA_MODE	    0x0080	    // Bit 7
// Duplicate Address:  When actually used
// please move to a different address
// `define FLD_DCT_TYPE	    16'h0100	    // Bit 8	0 = Frame DCT; 1 = field DCT
//
// Closing file:  iqidct_regs.h
//
//------------------------------------------------------------------------------
// VCPU module level register offset
//------------------------------------------------------------------------------
//
// Reading file:  vcpu_regs.h
//
//========================================================================
//  VCPU module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_VDEC_VCPU_CBUS_BASE = 0x03
// -----------------------------------------------
#define P_MSP                                      (volatile unsigned long *)0xd0050c00
#define P_MPSR                                     (volatile unsigned long *)0xd0050c04
#define P_MINT_VEC_BASE                            (volatile unsigned long *)0xd0050c08
#define P_MCPU_INTR_GRP                            (volatile unsigned long *)0xd0050c0c
#define P_MCPU_INTR_MSK                            (volatile unsigned long *)0xd0050c10
#define P_MCPU_INTR_REQ                            (volatile unsigned long *)0xd0050c14
#define P_MPC_P                                    (volatile unsigned long *)0xd0050c18
#define P_MPC_D                                    (volatile unsigned long *)0xd0050c1c
#define P_MPC_E                                    (volatile unsigned long *)0xd0050c20
#define P_MPC_W                                    (volatile unsigned long *)0xd0050c24
#define P_MINDEX0_REG                              (volatile unsigned long *)0xd0050c28
#define P_MINDEX1_REG                              (volatile unsigned long *)0xd0050c2c
#define P_MINDEX2_REG                              (volatile unsigned long *)0xd0050c30
#define P_MINDEX3_REG                              (volatile unsigned long *)0xd0050c34
#define P_MINDEX4_REG                              (volatile unsigned long *)0xd0050c38
#define P_MINDEX5_REG                              (volatile unsigned long *)0xd0050c3c
#define P_MINDEX6_REG                              (volatile unsigned long *)0xd0050c40
#define P_MINDEX7_REG                              (volatile unsigned long *)0xd0050c44
#define P_MMIN_REG                                 (volatile unsigned long *)0xd0050c48
#define P_MMAX_REG                                 (volatile unsigned long *)0xd0050c4c
#define P_MBREAK0_REG                              (volatile unsigned long *)0xd0050c50
#define P_MBREAK1_REG                              (volatile unsigned long *)0xd0050c54
#define P_MBREAK2_REG                              (volatile unsigned long *)0xd0050c58
#define P_MBREAK3_REG                              (volatile unsigned long *)0xd0050c5c
#define P_MBREAK_TYPE                              (volatile unsigned long *)0xd0050c60
#define P_MBREAK_CTRL                              (volatile unsigned long *)0xd0050c64
#define P_MBREAK_STAUTS                            (volatile unsigned long *)0xd0050c68
#define P_MDB_ADDR_REG                             (volatile unsigned long *)0xd0050c6c
#define P_MDB_DATA_REG                             (volatile unsigned long *)0xd0050c70
#define P_MDB_CTRL                                 (volatile unsigned long *)0xd0050c74
#define P_MSFTINT0                                 (volatile unsigned long *)0xd0050c78
#define P_MSFTINT1                                 (volatile unsigned long *)0xd0050c7c
#define P_CSP                                      (volatile unsigned long *)0xd0050c80
#define P_CPSR                                     (volatile unsigned long *)0xd0050c84
#define P_CINT_VEC_BASE                            (volatile unsigned long *)0xd0050c88
#define P_CCPU_INTR_GRP                            (volatile unsigned long *)0xd0050c8c
#define P_CCPU_INTR_MSK                            (volatile unsigned long *)0xd0050c90
#define P_CCPU_INTR_REQ                            (volatile unsigned long *)0xd0050c94
#define P_CPC_P                                    (volatile unsigned long *)0xd0050c98
#define P_CPC_D                                    (volatile unsigned long *)0xd0050c9c
#define P_CPC_E                                    (volatile unsigned long *)0xd0050ca0
#define P_CPC_W                                    (volatile unsigned long *)0xd0050ca4
#define P_CINDEX0_REG                              (volatile unsigned long *)0xd0050ca8
#define P_CINDEX1_REG                              (volatile unsigned long *)0xd0050cac
#define P_CINDEX2_REG                              (volatile unsigned long *)0xd0050cb0
#define P_CINDEX3_REG                              (volatile unsigned long *)0xd0050cb4
#define P_CINDEX4_REG                              (volatile unsigned long *)0xd0050cb8
#define P_CINDEX5_REG                              (volatile unsigned long *)0xd0050cbc
#define P_CINDEX6_REG                              (volatile unsigned long *)0xd0050cc0
#define P_CINDEX7_REG                              (volatile unsigned long *)0xd0050cc4
#define P_CMIN_REG                                 (volatile unsigned long *)0xd0050cc8
#define P_CMAX_REG                                 (volatile unsigned long *)0xd0050ccc
#define P_CBREAK0_REG                              (volatile unsigned long *)0xd0050cd0
#define P_CBREAK1_REG                              (volatile unsigned long *)0xd0050cd4
#define P_CBREAK2_REG                              (volatile unsigned long *)0xd0050cd8
#define P_CBREAK3_REG                              (volatile unsigned long *)0xd0050cdc
#define P_CBREAK_TYPE                              (volatile unsigned long *)0xd0050ce0
#define P_CBREAK_CTRL                              (volatile unsigned long *)0xd0050ce4
#define P_CBREAK_STAUTS                            (volatile unsigned long *)0xd0050ce8
#define P_CDB_ADDR_REG                             (volatile unsigned long *)0xd0050cec
#define P_CDB_DATA_REG                             (volatile unsigned long *)0xd0050cf0
#define P_CDB_CTRL                                 (volatile unsigned long *)0xd0050cf4
#define P_CSFTINT0                                 (volatile unsigned long *)0xd0050cf8
#define P_CSFTINT1                                 (volatile unsigned long *)0xd0050cfc
#define P_IMEM_DMA_CTRL                            (volatile unsigned long *)0xd0050d00
#define P_IMEM_DMA_ADR                             (volatile unsigned long *)0xd0050d04
#define P_IMEM_DMA_COUNT                           (volatile unsigned long *)0xd0050d08
// bit[29:24] A_brst_num_imem
// bit[21:16] A_id_imem
// bit[11:0] wrrsp_count_imem (reserved)
#define P_WRRSP_IMEM                               (volatile unsigned long *)0xd0050d0c
#define P_LMEM_DMA_CTRL                            (volatile unsigned long *)0xd0050d40
#define P_LMEM_DMA_ADR                             (volatile unsigned long *)0xd0050d44
#define P_LMEM_DMA_COUNT                           (volatile unsigned long *)0xd0050d48
// bit[29:24] A_brst_num_lmem
// bit[21:16] A_id_lmem
// bit[11:0] wrrsp_count_lmem 
#define P_WRRSP_LMEM                               (volatile unsigned long *)0xd0050d4c
#define P_MAC_CTRL1                                (volatile unsigned long *)0xd0050d80
#define P_ACC0REG1                                 (volatile unsigned long *)0xd0050d84
#define P_ACC1REG1                                 (volatile unsigned long *)0xd0050d88
#define P_MAC_CTRL2                                (volatile unsigned long *)0xd0050dc0
#define P_ACC0REG2                                 (volatile unsigned long *)0xd0050dc4
#define P_ACC1REG2                                 (volatile unsigned long *)0xd0050dc8
#define P_CPU_TRACE                                (volatile unsigned long *)0xd0050e00
//
// Closing file:  vcpu_regs.h
//
//------------------------------------------------------------------------------
// HENC module level register offset
//------------------------------------------------------------------------------
//
// Reading file:  henc_regs.h
//
//========================================================================
//  MDEC module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_HCODEC_HENC_CBUS_BASE = 0x0a
// -----------------------------------------------
#define P_HENC_SCRATCH_0                           (volatile unsigned long *)0xd0056b00
#define P_HENC_SCRATCH_1                           (volatile unsigned long *)0xd0056b04
#define P_HENC_SCRATCH_2                           (volatile unsigned long *)0xd0056b08
#define P_HENC_SCRATCH_3                           (volatile unsigned long *)0xd0056b0c
#define P_HENC_SCRATCH_4                           (volatile unsigned long *)0xd0056b10
#define P_HENC_SCRATCH_5                           (volatile unsigned long *)0xd0056b14
#define P_HENC_SCRATCH_6                           (volatile unsigned long *)0xd0056b18
#define P_HENC_SCRATCH_7                           (volatile unsigned long *)0xd0056b1c
#define P_HENC_SCRATCH_8                           (volatile unsigned long *)0xd0056b20
#define P_HENC_SCRATCH_9                           (volatile unsigned long *)0xd0056b24
#define P_HENC_SCRATCH_A                           (volatile unsigned long *)0xd0056b28
#define P_HENC_SCRATCH_B                           (volatile unsigned long *)0xd0056b2c
#define P_HENC_SCRATCH_C                           (volatile unsigned long *)0xd0056b30
#define P_HENC_SCRATCH_D                           (volatile unsigned long *)0xd0056b34
#define P_HENC_SCRATCH_E                           (volatile unsigned long *)0xd0056b38
#define P_HENC_SCRATCH_F                           (volatile unsigned long *)0xd0056b3c
#define P_HENC_SCRATCH_G                           (volatile unsigned long *)0xd0056b40
#define P_HENC_SCRATCH_H                           (volatile unsigned long *)0xd0056b44
#define P_HENC_SCRATCH_I                           (volatile unsigned long *)0xd0056b48
#define P_HENC_SCRATCH_J                           (volatile unsigned long *)0xd0056b4c
#define P_HENC_SCRATCH_K                           (volatile unsigned long *)0xd0056b50
#define P_HENC_SCRATCH_L                           (volatile unsigned long *)0xd0056b54
#define P_HENC_SCRATCH_M                           (volatile unsigned long *)0xd0056b58
#define P_HENC_SCRATCH_N                           (volatile unsigned long *)0xd0056b5c
// bit [7:0] data_feed_buff_id
#define P_IE_DATA_FEED_BUFF_INFO                   (volatile unsigned long *)0xd0056b60
//
// Closing file:  henc_regs.h
//
//------------------------------------------------------------------------------
// VLC module level register offset
//------------------------------------------------------------------------------
//
// Reading file:  vlc_regs.h
//
//========================================================================
//  VLC module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_HCODEC_VLC_CBUS_BASE = 0x0d
// -----------------------------------------------
// Bit[31:28] - henc_status
// Bit[27:8] - reserved
// Bit[7]    mc_hcmd_buff_enable
// Bit[6]    mc_hcmd_use_mc_hcmd_buff
// Bit[5]    mc_hcmd_use_mc_hcmd_hw_start
// Bit[4]    no_mc_out_null_non_skipped_mb
// Bit[3]    mc_out_even_skipped_mb
// Bit[2] - hcmd_enable
// Bit[1] - vlc_control_enable (0 will treat as soft_reset)
// Bit[0] - vlc_input_enable (enable input interface)
#define P_VLC_STATUS_CTRL                          (volatile unsigned long *)0xd0057400
// Bit[31:16] - Reserved
// Bit [15]  - enable_free_clk_mc_hcmd_buff
// Bit [14]  - enable_free_clk_reg
// Bit [13]  - enable_free_clk_stream
// Bit [12]  - enable_free_clk_pre_buff
// Bit [11]  - enable_free_clk_vb_buff
// Bit [10]  - enable_free_clk_dc_input
// Bit [9]   - enable_free_clk_input
// Bit [8]   - enable_free_clk_mv_cal
// Bit [7]   - enable_free_clk_status
// Bit [6]   - enable_free_clk_mc_dblk_cmd_if
// Bit [5]   - disable_mvd_enc_finished
// Bit [4]   - I16MB_share_ipred_mode_with_I4MB
// Bit [3]   - fixed_picture_qp
// Bit [2]   - use_set_b8_mode ( not used now)
// Bit [1]   - use_set_mb_skip_run
// Bit [0]   - pop_coeff_even_all_zero
#define P_VLC_CONFIG                               (volatile unsigned long *)0xd0057404
// --------------------------------------------
// Bitstream DDR Interface
// --------------------------------------------
#define P_VLC_VB_START_PTR                         (volatile unsigned long *)0xd0057440
#define P_VLC_VB_END_PTR                           (volatile unsigned long *)0xd0057444
#define P_VLC_VB_WR_PTR                            (volatile unsigned long *)0xd0057448
// Read Only, VLC_VB_SW_RD_PTR or VLC_VB_HW_RD_PTR
#define P_VLC_VB_RD_PTR                            (volatile unsigned long *)0xd005744c
#define P_VLC_VB_SW_RD_PTR                         (volatile unsigned long *)0xd0057450
// Read Only
#define P_VLC_VB_LEFT                              (volatile unsigned long *)0xd0057454
// VB FIFO Control
// bit  [31:24] vb_full_int_enable_cpu[7:0] 
// bit  [23:16] vb_full_int_enable_amrisc[7:0] 
//   -bit 23 Video BUFFER LEFT < 0x400 Bytes
//   -bit 22 Video BUFFER LEFT < 0x200 Bytes
//   -bit 21 Video BUFFER LEFT < 0x100 Bytes
//   -bit 20 Video BUFFER LEFT < 0x80 Bytes
//   -bit 19 Video BUFFER LEFT < 0x40 Bytes
//   -bit 18 Video BUFFER LEFT < 0x20 Bytes
//   -bit 17 vbfifo left  < 16 double words (8x64bits)
//   -bit 16 vbfifo left  < 8 double words (4x64bits)
// bit  [15]    wr_ptr_int_enable_cpu
// bit  [14]    wr_ptr_int_enable_amrisc
// bit  [13]    wr_ptr_int (Read Only, write 1 will clear)
// bit  [12]    vb_full_int_enable_cpu(Read Only)
// bit  [11]    vb_full_int_enable_amrisc(Read Only)
// bit  [10]    reserved
// bit  [9]     use_vb_hw_rd_ptr
// bit  [8]     vb_always_ready Set to 1 to ignore vb_level blocking DDR write
// bit  [7]     vb_ready_for_transfer (Read Only)
// bit  [6]     data_ready_for_transfer (Read Only)
// bits [5:3]   vb_endian       Set VB Endian inside DDR memory 
// bit  [2]     vb_write_busy   Read Only - indicate DDR write busy
// bit  [1]     vb_write_en     Set to 1 to enable writing data to DDR memory
// bit  [0]     vb_soft_reset   Soft reset  
#define P_VLC_VB_CONTROL                           (volatile unsigned long *)0xd0057458
// bit 31    transfer_length 0 - 32x64 Bits per request, 1 - 16x64 Bits per request  // default : 0
// bit 30    A_urgent  // default : 0
// bit 29:24 A_brst_num // default : 0x3f
// bit 23:22 reserved
// bit 21:16 A_id  // default : 0x20 
// bit 15:0  vb_left_hold // default : 0 
#define P_VLC_VB_MEM_CTL                           (volatile unsigned long *)0xd005745c
// vb_wr_ptr address to generate interrupt
#define P_VLC_VB_INT_PTR                           (volatile unsigned long *)0xd0057460
// bit[31:12] reserved
// bit[11:0] vlc_wrrsp_count
#define P_VLC_WRRSP                                (volatile unsigned long *)0xd0057464
#define P_VLC_TOTAL_BYTES                          (volatile unsigned long *)0xd0057468
// bit  [31:26] reserved
// bit  [25]    vb_flush
// bit  [24]    vb_reg_ready  
// bit  [23:16] vb_buff_left     -- Read only
// bit  [15:8]  vb_buff_wr_point -- RW
// bit  [7:0]   vb_buff_rd_point -- RW
#define P_VLC_VB_BUFF                              (volatile unsigned long *)0xd005746c
// bit[31]    flush_vlc_pre_buff
// bit[30:27] reserved
// bit[26:24] vb_pre_buff_level
// bit[23:0]  vb_pre_buff_data[55:32] 
#define P_VLC_VB_PRE_BUFF_HI                       (volatile unsigned long *)0xd0057470
// bit[31:0] vb_pre_buff_data[31:0]
#define P_VLC_VB_PRE_BUFF_LOW                      (volatile unsigned long *)0xd0057474
// bit[31]    stream_encap_enable  // 0x0000(00-03) will be changed to 0x000003(00-03) if enabled
// bit[30:29] stream_encap_delay   // delay bytes for encap used 
// bit[28:24] stream_buff_point
// bit[23:0]  stream_buff_data 
#define P_VLC_STREAM_BUFF                          (volatile unsigned long *)0xd0057478
// bit[31]    push_stream_block - Read Only (Will set if vb_buff full)
// bit[30]    push_stream_busy  - Read Only (busy when output one byte from stream_buf (max 2 clocks for 8 bits push)
// bit[29:28] stream_encap_status - Read Only
// bit[27:21] reserved
// Long Mode : (Amrisc need movilo and mvihi high to set stream_info)
//   bit[20:16] push_stream_long_length (0 or 31 : Mid or Short mode)
//   bit[15:0]  push_stream_data
// Mid Mode : (Amrisc need movi to set stream_info) 
//   bit[15:12]] push_stream_mid_length (1-12 : mid mode active, 0-short mode, 15 - byte align)
//   bit[11:0]  push_stream_data
// Short Mode : (Amrisc can use mtspi to push stream directely)
//   bit[7:5] push_stream_short_length (0-5 : short length, else - invalid)
//   bit[4:0]  push_stream_data
#define P_VLC_PUSH_STREAM                          (volatile unsigned long *)0xd005747c
// bit[15:8] ELEMENT_LENGTH
// bit[7:1]  reserved
// bit[0]  Write - push start, Read - Push Busy
#define P_VLC_PUSH_ELEMENT                         (volatile unsigned long *)0xd0057480
#define P_VLC_ELEMENT_DATA                         (volatile unsigned long *)0xd0057484
// --------------------------------------------
// Picture VLC 
// --------------------------------------------
// (&(int|(~AND_enable))|(|(int&OR_enable)))
// bit[31]    OR interrupt Enable Reserved
// bit[30]    OR interrupt Enable for mv_busy
// bit[29]    OR interrupt Enable for b8_mode_busy
// bit[28]    OR interrupt Enable for mb_skip_run_busy
// bit[27]    OR interrupt Enable for cbp_busy
// bit[26]    OR interrupt Enable for Reserved
// bit[25]    OR interrupt Enable for Reserved
// bit[24]    OR interrupt Enable for mb_info_busy
// bit[23]    AND interrupt Enable Reserved
// bit[22]    AND interrupt Enable for mv_busy
// bit[21]    AND interrupt Enable for b8_mode_busy
// bit[20]    AND interrupt Enable for mb_skip_run_busy
// bit[19]    AND interrupt Enable for cbp_busy 
// bit[18]    AND interrupt Enable for Reserved
// bit[17]    AND interrupt Enable for Reserved        
// bit[16]    AND interrupt Enable for mb_info_busy
// bit[15]    OR interrupt Enable Reserved
// bit[14]    OR interrupt Enable for mvd
// bit[13]    OR interrupt Enable for b8_mode
// bit[12]    OR interrupt Enable for mb_skip_run
// bit[11]    OR interrupt Enable for cbp_ready
// bit[10]    OR interrupt Enable for c_ipred_mode_ready
// bit[9]     OR interrupt Enable for ipred_mode_ready
// bit[8]     OR interrupt Enable for mb_info_ready
// bit[7]     AND interrupt Enable Reserved
// bit[6]     AND interrupt Enable for mvd
// bit[5]     AND interrupt Enable for b8_mode
// bit[4]     AND interrupt Enable for mb_skip_run
// bit[3]     AND interrupt Enable for cbp_ready
// bit[2]     AND interrupt Enable for c_ipred_mode_ready
// bit[1]     AND interrupt Enable for ipred_mode_ready
// bit[0]     AND interrupt Enable for mb_info_ready
#define P_VLC_INT_CONTROL                          (volatile unsigned long *)0xd00574c0
// Bit[31:16] picture_height
// Bit[15:0]  picture_width
#define P_VLC_PIC_SIZE                             (volatile unsigned long *)0xd00574c4
// [31:16] Reserved
// [15:3] pic_width_in_mbs_minus1
// [2:0]  picture_type 
#define P_VLC_PIC_INFO                             (volatile unsigned long *)0xd00574c8
// Bit[31:16] MB_NR
// Bit[15:8] MBY
// Bit[7:0] MBX
#define P_VLC_PIC_POSITION                         (volatile unsigned long *)0xd00574cc
// Bit[31] MV_busy
// Bit[30:6] Reserved
// Bit[15] Reserved
// Bit[14] vlc_input_MV_busy
// Bit[13] vlc_input_b8_mode_busy
// Bit[12] vlc_input_mb_skip_run_busy
// Bit[11] vlc_input_cbp_busy
// Bit[10] Reserved
// Bit[9]  Reserved
// Bit[8] vlc_input_mb_info_busy
// Bit[7] Reserved
// Bit[6] mvd
// Bit[5] b8_mode
// Bit[4] mb_skip_run
// Bit[3] cbp
// Bit[2] c_ipred_mode
// Bit[1] ipred_mode
// Bit[0] mb_info ( mb_type, mb_x, mb_y)
#define P_VLC_INPUT_STATUS                         (volatile unsigned long *)0xd00574d0
// Bit[31:28] detected_mb_type
// Bit[27:16] mb_y 
// Bit[15:4]  mb_x 
// Bit[3:0]   mb_type
#define P_VLC_MB_INFO                              (volatile unsigned long *)0xd00574d4
// commnad 0 -- no pending
// normal command + 1 is pending command
//
// bit 31:28 -- pending command 7
// bit 27:24 -- pending command 6
// bit 23:20 -- pending command 5
// bit 19:16 -- pending command 4
// bit 15:12 -- pending command 3
// bit 11:8  -- pending command 2
// bit  7:4  -- pending command 1
// bit  3:0  -- pending command 0
#define P_VLC_ENC_PEND_CMD                         (volatile unsigned long *)0xd00574d8
// For I Slice
// Bit[31:16] Reserved
// Bit[15:0] IntraType 
#define P_HENC_TOP_INFO_0                          (volatile unsigned long *)0xd00574dc
#define P_HENC_LEFT_INFO_0                         (volatile unsigned long *)0xd00574e0
// For I Slice
// Bit[31:24] V_nnz
// Bit[23:16] U_nnz
// Bit[15:0]  Y_nnz 
#define P_HENC_TOP_INFO_1                          (volatile unsigned long *)0xd00574e4
#define P_HENC_LEFT_INFO_1                         (volatile unsigned long *)0xd00574e8
// bit[63:0] ipred_mode
#define P_VLC_IPRED_MODE_HI                        (volatile unsigned long *)0xd00574ec
#define P_VLC_IPRED_MODE_LO                        (volatile unsigned long *)0xd00574f0
// bit[15:8] SE delta quant 
// bit[7:0]  UE delta quant
#define P_VLC_DELTA_QP                             (volatile unsigned long *)0xd00574f4
// bit[31:16] Reserved
// bit[15:12] Reserved
// bit[11:8] c_ipred_mode 
// bit[7:0] cbp
#define P_VLC_MB_HEADER_INFO                       (volatile unsigned long *)0xd00574f8
// bit[31:16] mb_skip_run
// bit[15:0]  b8_mode
#define P_VLC_P_MB_HEADER_INFO                     (volatile unsigned long *)0xd00574fc
// bit[31]    write_ptr_update
// bit[30]    read_ptr_update
// bit[29:20] coeff_buf_level
// bit[19:10] coeff_buf_write_ptr
// bit[9:0]   coeff_buf_read_ptr
#define P_VLC_COEFF_BUF_STATUS                     (volatile unsigned long *)0xd0057500
// bit[31:10] Reserved
// bit[9:0] read_req_addr
#define P_VLC_COEFF_RD_REQ                         (volatile unsigned long *)0xd0057504
// bit[20]   - coeff_buf_read_finished
// bit[19]   - coeff_first
// bit[18:4] - coeff_level 
// bit[3:0]  - coeff_run 
#define P_VLC_COEFF                                (volatile unsigned long *)0xd0057508
// bit[31]    - coeff_info_ready
// bit[30:25] - Reserved
// bit[24:15] - block_begin_addr
// bit[14:11] - trailing_one_sign
// bit[10:6]  - total_coeff 
// bit[5:4]   - trailing_ones 
// bit[3:0]   - total_zeros
#define P_VLC_COEFF_INFO                           (volatile unsigned long *)0xd005750c
// bit[31]    write_ptr_update
// bit[30]    read_ptr_update
// bit[29:25] Reserved
// bit[24:20] dc_buf_level -- 0-16
// bit[19:15] Reserved
// bit[14:10] dc_buf_write_ptr
// bit[9:5]   Reserved
// bit[4:0]   dc_buf_read_ptr
#define P_VLC_DC_BUF_STATUS                        (volatile unsigned long *)0xd0057510
// bit[31:10] Reserved
// bit[9:4]   Reserved
// bit[3:0]   read_req_addr
#define P_VLC_DC_RD_REQ                            (volatile unsigned long *)0xd0057514
// bit[31:17] - Reserved
// bit[16]   - dc_first
// bit[15:1] - dc_level 
// bit[0]    - dc_type  0 - CDC, 1 - LDC
#define P_VLC_DC                                   (volatile unsigned long *)0xd0057518
// bit[31]    - dc_info_ready
// bit[30:25] - Reserved
// bit[24:20] - Reserved
// bit[19:15] - dc_idx_begin_addr
// bit[14:11] - dc_trailing_one_sign
// bit[10:6]  - dc_total_coeff 
// bit[5:4]   - dc_trailing_ones 
// bit[3:0]   - dc_total_zeros
#define P_VLC_DC_INFO                              (volatile unsigned long *)0xd005751c
// bit[31:4]  - Reserved
// bit[3:0]   - mv_rw_idx  (auto increment when read/write VLC_MV) 
#define P_VLC_MV_INDEX                             (volatile unsigned long *)0xd0057520
// bit[31:16] - MVY
// bit[15:0]  - MVX
#define P_VLC_MV                                   (volatile unsigned long *)0xd0057524
// bit[31:16] - MVY
// bitp15:0]  - MVX
// Write to HENC_TOP_MV_0 will cause previous U->UL, UR->U, and UR write
// Read will read U MV only 
#define P_HENC_TOP_MV_0                            (volatile unsigned long *)0xd0057528
#define P_HENC_TOP_MV_1                            (volatile unsigned long *)0xd005752c
#define P_HENC_TOP_MV_2                            (volatile unsigned long *)0xd0057530
#define P_HENC_TOP_MV_3                            (volatile unsigned long *)0xd0057534
#define P_HENC_LEFT_MV_0                           (volatile unsigned long *)0xd0057538
#define P_HENC_LEFT_MV_1                           (volatile unsigned long *)0xd005753c
#define P_HENC_LEFT_MV_2                           (volatile unsigned long *)0xd0057540
#define P_HENC_LEFT_MV_3                           (volatile unsigned long *)0xd0057544
// Bit[31:1] Reserved
// Bit[0] top_left_mv_ready
#define P_TOP_LEFT_READY                           (volatile unsigned long *)0xd0057548
// Bit[31:16] Reserved
// Bit[15:0] mb_skip_run
#define P_MB_SKIP_RUN                              (volatile unsigned long *)0xd005754c
// Bit[31:16] Reserved
// Bit[15]    Reserved
// Bit[14:13] rd_struct // 00 - frame, 10 - top field, 11 - bottom field
// Bit[12:11] wr_struct // 00 - frame, 10 - top field, 11 - bottom field
// Bit[10:5]  mv_buff_id
// Bit[4:0]   mv_ref
#define P_VLC_HCMD_CONFIG                          (volatile unsigned long *)0xd0057550
// Bit[9:0] h264_dblk_info
#define P_VLC_HCMD_DBLK_INFO                       (volatile unsigned long *)0xd0057554
// Bit[3:0] vlc_dbg_idx
#define P_VLC_DBG_IDX                              (volatile unsigned long *)0xd0057558
// Read Only
#define P_VLC_DBG_READ                             (volatile unsigned long *)0xd005755c
#define P_VLC_JPEG_CTRL                            (volatile unsigned long *)0xd0057560
#define P_VLC_JPEG_COEFF_BUF_STAT                  (volatile unsigned long *)0xd0057564
#define P_VLC_HUFFMAN_ADDR                         (volatile unsigned long *)0xd0057568
#define P_VLC_HUFFMAN_DATA                         (volatile unsigned long *)0xd005756c
// bit[31:0] enc_mv_bits - including b8_mode and mvd
#define P_VLC_ENC_MV_BITS                          (volatile unsigned long *)0xd0057570
// bit[31:0] enc_coeff_bits - including cbp, token, trailing_sign, coeff_enc, h264_totzeros, h264_run
#define P_VLC_ENC_COEFF_BITS                       (volatile unsigned long *)0xd0057574
//
// Closing file:  vlc_regs.h
//
//------------------------------------------------------------------------------
// QDCT module level register offset
//------------------------------------------------------------------------------
//
// Reading file:  qdct_regs.h
//
//========================================================================
//  QDCT module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_HCODEC_QDCT_CBUS_BASE = 0x0f
// -----------------------------------------------
// bit[31:28] - mb_info_state
#define P_QDCT_STATUS_CTRL                         (volatile unsigned long *)0xd0057c00
// bit[18]    - enable_free_clk_sad_top
// bit[17]    - enable_free_clk_ie_top
// bit[16]    - enable_free_clk_ie_sub
// bit[15]    - enable_free_clk_mc_out
// bit[14]    - enable_free_clk_i_pred_top
// bit[13]    - enable_free_clk_idct_top
// bit[12]    - enable_free_clk_iq_top
// bit[11]    - enable_free_clk_q_top
// bit[10]    - enable_free_clk_dc_buff_8
// bit[9]     - enable_free_clk_dct_top
// bit[8]     - enable_free_clk_mb_info
// bit[7]     - enable_free_clk_mb_buff
// bit[6]     - enable_free_clk_reg
// bit[5]     - ignore_1_include_2nd_half_c
// bit[4]     - ignore_1_include_2nd_half
// bit[3]     - ignore_t_p8x8
// bit[2]     - not_ignore_dc
// bit[1]     - ignore_small_lac_intra
// bit[0]     - disable_fast_zero_block
#define P_QDCT_CONFIG                              (volatile unsigned long *)0xd0057c04
// bit[31]    - ignore_lac_coeff_en
// bit[30:26] - ignore_lac_coeff_else
// bit[25:21] - ignore_lac_coeff_2 
// bit[20:16] - ignore_lac_coeff_1 
// bit[15]    - ignore_cac_coeff_en
// bit[14:10] - ignore_cac_coeff_else
// bit[9:5]   - ignore_cac_coeff_2 
// bit[4:0]   - ignore_cac_coeff_1 
#define P_IGNORE_CONFIG                            (volatile unsigned long *)0xd0057c08
// bit[31]    - ignore_t_lac_coeff_en
// bit[30:26] - ignore_t_lac_coeff_else
// bit[25:21] - ignore_t_lac_coeff_2 
// bit[20:16] - ignore_t_lac_coeff_1 
// bit[15:0]  - Reserved
#define P_IGNORE_CONFIG_2                          (volatile unsigned long *)0xd0057c0c
// --------------------------------------------
// MB DATA DDR Interface
// --------------------------------------------
#define P_QDCT_MB_START_PTR                        (volatile unsigned long *)0xd0057c40
#define P_QDCT_MB_END_PTR                          (volatile unsigned long *)0xd0057c44
#define P_QDCT_MB_WR_PTR                           (volatile unsigned long *)0xd0057c48
#define P_QDCT_MB_RD_PTR                           (volatile unsigned long *)0xd0057c4c
#define P_QDCT_MB_LEVEL                            (volatile unsigned long *)0xd0057c50
// bit  [31]    reserved
// bit  [30]    no_wait_after_q_cdc
// bit  [29]    ie_start_int_enable
// bit  [28]    ignore_t_p8x8
// bit  [27]    zero_mc_out_null_non_skipped_mb
// bit  [26]    no_mc_out_null_non_skipped_mb
// bit  [25]    mc_out_even_skipped_mb
// bit  [24]    mc_out_wait_cbp_ready
// bit  [23]    mc_out_wait_mb_type_ready
// bit  [22]    i_pred_int_enable
// bit  [21]    intra_sat8_enable
// bit  [20]    ie_sub_enable
// bit  [19]    i_pred_enable
// bit  [18]    iq_enable
// bit  [17]    idct_enable
// bit  [16]    no_zero_coeff_mb
// bit  [15]    add_zero_coeff_block
// bit  [14]    mb_pause_enable
// bit  [13]    q_enable
// bit  [12]    dct_enable
// bit  [11]    ignore_magic_word
// bit  [10]    mb_info_en
// bit  [9]     mb_info_soft_reset
// bit  [8]     mb_always_ready Set to 1 to ignore mb_level blocking DDR read
// bit  [7]     mb_ready_for_transfer (Read Only)
// bit  [6]     data_ready_for_transfer (Read Only)
// bits [5:3]   mb_endian       Set MB Endian inside DDR memory 
// bit  [2]     mb_read_busy   Read Only - indicate DDR read busy
// bit  [1]     mb_read_en     Set to 1 to enable reading data from DDR memory
// bit  [0]     mb_soft_reset   Soft reset  
#define P_QDCT_MB_CONTROL                          (volatile unsigned long *)0xd0057c54
// bit 31    transfer_length 0 - 32x64 Bits per request, 1 - 16x64 Bits per request  // default : 0
// bit 30    A_urgent  // default : 0
// bit 29:24 A_brst_num // default : 0x3f
// bit 23    reserved
// bit 22    read_till_zero
// bit 21:16 A_id  // default : 0x21 
// bit 15:0  mb_level_hold // default : 0 
#define P_QDCT_MB_MEM_CTL                          (volatile unsigned long *)0xd0057c58
// bit  [31:24] reserved
// bit  [23:16] vb_buff_level     -- Read only
// bit  [15:8]  vb_buff_wr_point -- RW
// bit  [7:0]   vb_buff_rd_point -- RW
#define P_QDCT_MB_BUFF                             (volatile unsigned long *)0xd0057c5c
// bit [31:0] mb infor data begin magic word - default : 0xa55aaa55
#define P_QDCT_MB_MAGIC_WORD                       (volatile unsigned long *)0xd0057c60
// Read Only Register
// bit[19]   dct_ready_1
// bit[18]   dct_ready_0
// bit[17]   dct_rd_idx
// bit[16]   dct_wr_idx
// bit[15]   dct_srdy
// bit[14]   dct_rrdy
// bit[13]   Reserved
// bit[12:8] dct_block_number 
// bit[7:4]  dct_rw_addr 
// bit[3:0]  dct_status
#define P_QDCT_DCT_STATUS                          (volatile unsigned long *)0xd0057c64
// bit[3:0]  q_status
#define P_QDCT_Q_STATUS                            (volatile unsigned long *)0xd0057c68
// bit[31:3] Reserved
// bit[2:0]  picture_type
#define P_QDCT_PIC_INFO                            (volatile unsigned long *)0xd0057c6c
// bit[31:28] Reserved
// bit[27:22] I_pic_quant_c
// bit[21:16] I_pic_quant
// bit[15]    reserved
// bit[14:12] quant_rem_c
// bit[11:8]  quant_per_c
// bit[7]     reserved
// bit[6:4]   quant_rem
// bit[3:0]   quant_per
#define P_QDCT_Q_QUANT_I                           (volatile unsigned long *)0xd0057c70
// bit[31:28] Reserved
// bit[27:22] P_pic_quant_c
// bit[21:16] P_pic_quant
// bit[15]    reserved
// bit[14:12] quant_rem_c
// bit[11:8]  quant_per_c
// bit[7]     reserved
// bit[6:4]   quant_rem
// bit[3:0]   quant_per
#define P_QDCT_Q_QUANT_P                           (volatile unsigned long *)0xd0057c74
// bit[31]    mb_info_pause
// bit[30:16] pause_mby
// bit[15:0]  pause_mbx
#define P_QDCT_MB_PAUSE_CTL                        (volatile unsigned long *)0xd0057c78
// bit[31]   top_control_ready_i_pred
// bit[30:28]top_dma_status   
// bit[27]   top_control_ready_ie
// bit[26:24]Reserved
// bit[23]   ul_mb
// bit[22]   right_mb
// bit[21]   top_mb
// bit[20]   left_mb
// bit[19:8] mb_x
// bit[7:6]  i_pred_ref_idx_L 
// bit[5:4]  i_pred_ref_idx_UL 
// bit[3:2]  i_pred_ref_idx_U
// bit[1:0]  i_pred_ref_idx_UR 
#define P_QDCT_TOP_CONTROL                         (volatile unsigned long *)0xd0057c7c
// bit[31:0] top_base_addr - DDR Memory start address for save top Pixel
#define P_QDCT_TOP_BASE_MEM                        (volatile unsigned long *)0xd0057c80
// bit 15:13 Reserved
// bit 12    A_urgent  // default : 0
// bit 11:6  A_brst_num // default : 0x3f
// bit 5:0   A_id  // default : 0x22
#define P_QDCT_TOP_MEM_CTL                         (volatile unsigned long *)0xd0057c84
// bit [11:0] top_wrrsp_count
#define P_QDCT_TOP_WRRSP                           (volatile unsigned long *)0xd0057c88
// Bit[3:0] qdct_dbg_idx
#define P_QDCT_DBG_IDX                             (volatile unsigned long *)0xd0057c8c
// Read Only
#define P_QDCT_DBG_READ                            (volatile unsigned long *)0xd0057c90
#define P_QDCT_JPEG_CTRL                           (volatile unsigned long *)0xd0057c94
#define P_QDCT_JPEG_X_START_END                    (volatile unsigned long *)0xd0057c98
#define P_QDCT_JPEG_Y_START_END                    (volatile unsigned long *)0xd0057c9c
#define P_QDCT_JPEG_QUANT_ADDR                     (volatile unsigned long *)0xd0057ca0
#define P_QDCT_JPEG_QUANT_DATA                     (volatile unsigned long *)0xd0057ca4
#define P_QDCT_JPEG_SOF_RESUME                     (volatile unsigned long *)0xd0057ca8
#define P_QDCT_JPEG_DCT_STATUS0                    (volatile unsigned long *)0xd0057cac
#define P_QDCT_JPEG_DCT_STATUS1                    (volatile unsigned long *)0xd0057cb0
#define P_QDCT_JPEG_DCT_COEFF01                    (volatile unsigned long *)0xd0057cb4
#define P_QDCT_JPEG_DCT_COEFF23                    (volatile unsigned long *)0xd0057cb8
#define P_QDCT_JPEG_DCT_COEFF45                    (volatile unsigned long *)0xd0057cbc
#define P_QDCT_JPEG_DCT_COEFF67                    (volatile unsigned long *)0xd0057cc0
#define P_QDCT_JPEG_DCT_COEFF89                    (volatile unsigned long *)0xd0057cc4
// IE/ME share same cbus_base as QDCT
// 
// bit[31]  active_ur_block
// bit[30]  active_ul_block
// bit[9]   ie_c_wait_ie_pause
// bit[8:4] max_ie_result_buff_count 
// bit[3]   ie_wait_for_ie_result  // use for (max_ie_result_buff_count == 0) to wait every block
// bit[2]   reserved
// bit[1]   ie_enable
// bit[0]   ie_soft_reset
#define P_IE_CONTROL                               (volatile unsigned long *)0xd0057d00
// bit[31:12] Reserved
// bit[11:0]  mb_y
#define P_IE_MB_POSITION                           (volatile unsigned long *)0xd0057d04
// bit[31:16] me_skip_run
// bit[15:8]  reserved
// bit [7:4]  me_b8_mode
// bit [3:0]  ie_me_mb_type
#define P_IE_ME_MB_INFO                            (volatile unsigned long *)0xd0057d08
// bit[3]   ie_result_buff_enable
// bit[2]   ie_result_buff_soft_reset
// bit[1]   sad_enable
// bit[0]   sad_soft_reset
#define P_SAD_CONTROL                              (volatile unsigned long *)0xd0057d0c
// bit[31:16] - ie_result_buff_count - read only
// bit[14:12] -current_ie_result (pred_mode) - read only
// bit[11]  top_control_data_buff_wr_ptr - rd/wr 
// bit[10]  top_control_data_buff_rd_ptr - rd/wr 
// bit[9:5] ie_result_buff_wr_ptr        - rd/wr
// bit[4:0] ie_result_buff_rd_ptr        - rd/wr
#define P_IE_RESULT_BUFFER                         (volatile unsigned long *)0xd0057d10
// bit[63:0] ie_i4_pred_mode
#define P_IE_I4_PRED_MODE_HI                       (volatile unsigned long *)0xd0057d14
#define P_IE_I4_PRED_MODE_LO                       (volatile unsigned long *)0xd0057d18
// bit [31:9] reserved
// bit [8:4] i_pred_block_number
// bit [3:0] ie_c_pred_mode
#define P_IE_C_PRED_MODE                           (volatile unsigned long *)0xd0057d1c
// 31:16 - Left, 0-select ie_pixel, 1-select mc_data_out
// 15:0  - Top,  0-select ie_pixel, 1-select mc_data_out
#define P_IE_CUR_REF_SEL                           (volatile unsigned long *)0xd0057d20
// bit[31]  enable_f_skip_1_step_3
// bit[30]  enable_f_skip_1_step_2
// bit[29]  enable_f_skip_1_step_1
// bit[28]  step_3_enable
// bit[27]  step_2_sub_pixel
// bit[26]  always_f_skip_step_3 
// bit[25]  always_f_skip_step_2 
// bit[24]  always_f_skip_step_1
// bit[23]  half_pixel_only
// bit[22:11] reserved
// bit[10:9] mv_flexable_ctl 00:0x40, 01:0x80, 10:0xc0, 11 : 0x100
// bit[8]   no_md_ab_rd
// bit[7]   use_dct_state
// bit[6]   enable_free_clk_me_ctl
// bit[5]   enable_free_clk_me_ab
// bit[4]   enable_free_clk_me_cb
// bit[3]   reserved
// bit[2]   me_done_int_enable
// bit[1]   me_enable
// bit[0]   me_soft_reset
#define P_ME_CONTROL                               (volatile unsigned long *)0xd0057d24
// bit[31:28] Reserved
// bit[27:16] me_start_mby
// bit[15:12] Reserved
// bit[11:0]  me_start_mbx
#define P_ME_START_POSITION                        (volatile unsigned long *)0xd0057d28
// bit [31:28] me_status - Read only
// bit [27:24] me_cb_status  // current buffer
// bit [23:20] me_ab_status  // anc buffer
// bit [19]    Reserved
// bit [18:16] me_ab_wr_ptr  // read only
// bit [15:4]  me_last_mbx 
// bit [3:1]   me_ab_rd_ptr  // read only
// bit [0]     me_action
#define P_ME_STATUS                                (volatile unsigned long *)0xd0057d2c
// all Read-only
// bit [31:28] Reserved
// bit [27:16] me_ab_mbx
// bit [15:14] me_cb_wr_ptr
// bit [13:12] me_cb_rd_ptr
// bit [11:0]  me_cb_mbx
#define P_ME_DEBUG                                 (volatile unsigned long *)0xd0057d30
// bit[29:24] step_3_skip_line 
// bit[23:18] step_2_skip_line 
// bit[17:12] step_1_skip_line 
// bit[11:6]  step_0_skip_line 
// bit[5:0]   read_skip_line 
#define P_ME_SKIP_LINE                             (volatile unsigned long *)0xd0057d34
// bit 15:13 Reserved
// bit 12    A_urgent  // default : 0
// bit 11:6  A_brst_num // default : 0x3f
// bit 5:0   A_id  // default : 0x23
#define P_ME_AB_MEM_CTL                            (volatile unsigned long *)0xd0057d38
// bit[31:24] anc_pic_canvas
// bit[23:12] max_me_mby_num
// bit[11:0]  max_me_mbx_num 
#define P_ME_PIC_INFO                              (volatile unsigned long *)0xd0057d3c
// bit [23:12] me_sad_enough_1
// bit [11:0]  me_sad_enough_0
#define P_ME_SAD_ENOUGH_01                         (volatile unsigned long *)0xd0057d40
// bit [23:12] me_sad_enough_3
// bit [11:0]  me_sad_enough_2
#define P_ME_SAD_ENOUGH_23                         (volatile unsigned long *)0xd0057d44
// bit [21:10] me_step0_big_sad
// bit [9:5] me_step0_close_mv_y 
// bit [4:0] me_step0_close_mv_x 
#define P_ME_STEP0_CLOSE_MV                        (volatile unsigned long *)0xd0057d48
// bit[31:24] force_skip_sad_3
// bit[23:16] force_skip_sad_2
// bit[15:08] force_skip_sad_1
// bit[07:00] force_skip_sad_0
#define P_ME_F_SKIP_SAD                            (volatile unsigned long *)0xd0057d4c
// bit[31:24] force_skip_weight_3
// bit[23:16] force_skip_weight_2
// bit[15:08] force_skip_weight_1
// bit[07:00] force_skip_weight_0
#define P_ME_F_SKIP_WEIGHT                         (volatile unsigned long *)0xd0057d50
// Merge when (
//              (flex & me_merge_flex_en) | 
//              (big_sad & me_merge_sad_en)|
//              ((~me_merge_flex_en)&(~me_merge_sad_en))
//            ) & 
//            ( small_mv_diff |(~me_merge_small_mv_en))
//            & (me_merge_flex_en | me_merge_sad_en | me_merge_small_mv_en)
// bit[31]   me_merge_mv_en_16
// bit[30]   me_merge_small_mv_en_16
// bit[29]   me_merge_flex_en_16
// bit[28]   me_merge_sad_en_16
// bit[27]   me_merge_mv_en_8
// bit[26]   me_merge_small_mv_en_8
// bit[25]   me_merge_flex_en_8
// bit[24]   me_merge_sad_en_8
// bit[23:18] me_merge_mv_diff_16
// bit[17:12] me_merge_mv_diff_8
// bit[11:0] me_merge_min_sad
#define P_ME_MV_MERGE_CTL                          (volatile unsigned long *)0xd0057d54
// bit[31:24] mv_step_weight_1 
// bit[23:16] mv_pre_weight_1 
// bit [15:0] mv_step_weight_0
// bit[7:0]   mv_pre_weight_0 
#define P_ME_MV_WEIGHT_01                          (volatile unsigned long *)0xd0057d58
// bit[31:24] mv_step_weight_3 
// bit[23:16] mv_pre_weight_3
// bit[15:8]  mv_step_weight_2 
// bit[7:0]   mv_pre_weight_2
#define P_ME_MV_WEIGHT_23                          (volatile unsigned long *)0xd0057d5c
// bit[31:24] me_sad_range_inc_3
// bit[23:16] me_sad_range_inc_2
// bit[15:8] me_sad_range_inc_1
// bit[7:0] me_sad_range_inc_0
#define P_ME_SAD_RANGE_INC                         (volatile unsigned long *)0xd0057d60
// bit[31:19]  reserved
// bit[18]     sub_relative_any_1_en
// bit[17]     sub_relative_any_2_en
// bit[16]     sub_relative_any_3_en
// bit[15]     sub_relative_any_4_en
// bit[14]     sub_relative_any_h_en
// bit[13]     sub_make_non_flex_fix
// bit[12]     sub_make_big_non_flex_fix
// bit[11:8]   sub_normal_mv_diff_16
// bit[7:4]    sub_normal_mv_diff_8
// bit[3:2]    Reserved
// bit[1]      sub_merge_enable_16
// bit[0]      sub_merge_enable_8
#define P_ME_SUB_MERGE_CTL                         (volatile unsigned long *)0xd0057d64
// bit[31:28]  sub_ref_mv_diff_near
// bit[27:24]  sub_ref_mv_diff_near_flex
// bit[23:20]  sub_ref_mv_diff
// bit[19:16]  sub_ref_mv_diff_flex
// bit[15:8]   sub_ref_mv_near_weight
// bit[7:0]    sub_ref_mv_weight
#define P_ME_SUB_REF_MV_CTL                        (volatile unsigned long *)0xd0057d68
// bit[31:24]  sub_weight_max_sad
// bit[23:16]  sub_any_range_sad
// bit[15:8]   sub_any_min_sad
// bit[7:0]    sub_any_max_sad
#define P_ME_SUB_ANY_WEIGHT_SAD                    (volatile unsigned long *)0xd0057d6c
// bit[31:24]  sub_fix_sad
// bit[23:16]  sub_fix_diff_sad
// bit[15:8]   sub_sad_flex_adj
// bit[7:0]    sub_big_non_flex_fix_sad
#define P_ME_SUB_FIX_SAD                           (volatile unsigned long *)0xd0057d70
// bit[31:24]  sub_fix_min_sad
// bit[23:16]  sub_fix_min_diff_sad
// bit[15:8]   sub_fix_min_sad_2
// bit[7:0]    sub_fix_min_diff_sad_2
#define P_ME_SUB_FIX_MIN_SAD                       (volatile unsigned long *)0xd0057d74
// bit[31:24]  sub_snap_to_ref_max_sad
// bit[23]     sub_snap_to_ref_non_flex
// bit[22:16]  sub_snap_to_ref_mv_diff
// bit[15:4]   sub_glitch_mv_sad
// bit[3:0]    sub_glitch_mv_diff
#define P_ME_SUB_SNAP_GLITCH                       (volatile unsigned long *)0xd0057d78
// bit[31:20]  sad_act_limit
// bit[19:8]   s_a_any_sad
// bit[7]      Reserved
// bit[6:5]    sub_merge_method
// bit[4]      use_sub_act_result
// bit[3]      s_a_rnd
// bit[2]      Reserved
// bit[1]      sub_act_en_16
// bit[0]      sub_act_en
#define P_ME_SUB_ACT_CTL                           (volatile unsigned long *)0xd0057d7c
//
// Closing file:  qdct_regs.h
//
//------------------------------------------------------------------------------
// HCODEC MDEC module level register offset
//------------------------------------------------------------------------------
//
// Reading file:  hcodec_mdec_regs.h
//
//========================================================================
//  MDEC module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_HCODEC_HDEC_CBUS_BASE = 0x09
// -----------------------------------------------
//`define HCODEC_MC_CTRL_REG         8'h00
//`define HCODEC_MC_MB_INFO          8'h01
//`define HCODEC_MC_PIC_INFO         8'h02
//`define HCODEC_MC_HALF_PEL_ONE     8'h03
//`define HCODEC_MC_HALF_PEL_TWO     8'h04
//`define HCODEC_POWER_CTL_MC        8'h05
//
//`define HCODEC_MC_CMD			    8'h06
//`define HCODEC_MC_CTRL0			8'h07
//`define HCODEC_MC_PIC_W_H  	    8'h08     
//`define HCODEC_MC_STATUS0		    8'h09
//`define HCODEC_MC_STATUS1		    8'h0a
//`define HCODEC_MC_CTRL1			8'h0b
//`define HCODEC_MC_MIX_RATIO0	    8'h0c
//`define HCODEC_MC_MIX_RATIO1	    8'h0d
//`define HCODEC_MC_DP_MB_XY  	    8'h0e     //read only
//`define HCODEC_MC_OM_MB_XY  	    8'h0f     //read only
//
//`define HCODEC_MC_MPORT_CTRL  	    8'h40    
//`define HCODEC_MC_MPORT_DAT  	    8'h41     
//`define HCODEC_MC_WT_PRED_CTRL  	8'h42     
//`define HCODEC_MC_MBBOT_ST_EVEN_ADDR 8'h44     
//`define HCODEC_MC_MBBOT_ST_ODD_ADDR 8'h45     
//`define HCODEC_MC_DPDN_MB_XY        8'h46    //read only     
//`define HCODEC_MC_OMDN_MB_XY        8'h47    //read only     
//`define HCODEC_MC_HCMDBUF_H        8'h48     
//`define HCODEC_MC_HCMDBUF_L        8'h49     
//`define HCODEC_MC_HCMD_H           8'h4a     //read only     
//`define HCODEC_MC_HCMD_L           8'h4b     //read only     
//`define HCODEC_MC_IDCT_DAT         8'h4c 
//
//`define HCODEC_MC_CTRL_GCLK_CTRL   8'h4d 
//`define HCODEC_MC_OTHER_GCLK_CTRL  8'h4e 
//
////Bit 29:24, mbbot thread ID and token 
////Bit 21:16, mc read/write thread ID and token 
////Bit 13:8,  mbbot pre-arbitor burst number 
////Bit 5:0,   mc pre-arbitor burst number 
//`define HCODEC_MC_CTRL2            8'h4f 
//
//// `define HCODEC_DBLK_QUANT            8'h76 // ONLY for $ucode/real/amrisc/rv.s, reg value from apollo
//
////`define HCODEC_ANC1_CANVAS_ADDR      8'h80
////`define HCODEC_ANC2_CANVAS_ADDR      8'h81
//
////`define HCODEC_REC_CANVAS_ADDR       8'h89
//
////`define HCODEC_MDEC_PIC_W          8'h8c
////`define HCODEC_MDEC_PIC_H          8'h8d
//`define HCODEC_MDEC_PIC_DC_CTRL    8'h8e
//`define HCODEC_MDEC_PIC_DC_STATUS  8'h8f
//
//`define HCODEC_ANC0_CANVAS_ADDR      8'h90
//`define HCODEC_ANC1_CANVAS_ADDR      8'h91
//`define HCODEC_ANC2_CANVAS_ADDR      8'h92
//`define HCODEC_ANC3_CANVAS_ADDR      8'h93
//`define HCODEC_ANC4_CANVAS_ADDR      8'h94
//`define HCODEC_ANC5_CANVAS_ADDR      8'h95
//`define HCODEC_ANC6_CANVAS_ADDR      8'h96
//`define HCODEC_ANC7_CANVAS_ADDR      8'h97
//`define HCODEC_ANC8_CANVAS_ADDR      8'h98
//`define HCODEC_ANC9_CANVAS_ADDR      8'h99
//`define HCODEC_ANC10_CANVAS_ADDR     8'h9a
//`define HCODEC_ANC11_CANVAS_ADDR     8'h9b
//`define HCODEC_ANC12_CANVAS_ADDR     8'h9c
//`define HCODEC_ANC13_CANVAS_ADDR     8'h9d
//`define HCODEC_ANC14_CANVAS_ADDR     8'h9e
//`define HCODEC_ANC15_CANVAS_ADDR     8'h9f
//`define HCODEC_ANC16_CANVAS_ADDR     8'ha0
//`define HCODEC_ANC17_CANVAS_ADDR     8'ha1
//`define HCODEC_ANC18_CANVAS_ADDR     8'ha2
//`define HCODEC_ANC19_CANVAS_ADDR     8'ha3
//`define HCODEC_ANC20_CANVAS_ADDR     8'ha4
//`define HCODEC_ANC21_CANVAS_ADDR     8'ha5
//`define HCODEC_ANC22_CANVAS_ADDR     8'ha6
//`define HCODEC_ANC23_CANVAS_ADDR     8'ha7
//`define HCODEC_ANC24_CANVAS_ADDR     8'ha8
//`define HCODEC_ANC25_CANVAS_ADDR     8'ha9
//`define HCODEC_ANC26_CANVAS_ADDR     8'haa
//`define HCODEC_ANC27_CANVAS_ADDR     8'hab
//`define HCODEC_ANC28_CANVAS_ADDR     8'hac
//`define HCODEC_ANC29_CANVAS_ADDR     8'had
//`define HCODEC_ANC30_CANVAS_ADDR     8'hae
//`define HCODEC_ANC31_CANVAS_ADDR     8'haf
//
//`define HCODEC_DBKR_CANVAS_ADDR      8'hb0
//`define HCODEC_DBKW_CANVAS_ADDR      8'hb1
//`define HCODEC_REC_CANVAS_ADDR       8'hb2
//
////28:24, read/write, current canvas idx, used in h264 only now
////23:0, read only, current canvas address, 23:16, Cr canvas addr, 15:8, Cb canvas addr, 7:0, Y  canvas addr
//`define HCODEC_CURR_CANVAS_CTRL      8'hb3
//
//`define HCODEC_MDEC_PIC_DC_THRESH    8'hb8
//`define HCODEC_MDEC_PICR_BUF_STATUS  8'hb9
//`define HCODEC_MDEC_PICW_BUF_STATUS  8'hba
//`define HCODEC_MCW_DBLK_WRRSP_CNT    8'hbb
//
//`define HCODEC_AV_SCRATCH_0          8'hc0
//`define HCODEC_AV_SCRATCH_1          8'hc1
//`define HCODEC_AV_SCRATCH_2          8'hc2
//`define HCODEC_AV_SCRATCH_3          8'hc3
//`define HCODEC_AV_SCRATCH_4          8'hc4
//`define HCODEC_AV_SCRATCH_5          8'hc5
//`define HCODEC_AV_SCRATCH_6          8'hc6
//`define HCODEC_AV_SCRATCH_7          8'hc7
//`define HCODEC_AV_SCRATCH_8          8'hc8
//`define HCODEC_AV_SCRATCH_9          8'hc9
//`define HCODEC_AV_SCRATCH_A          8'hca
//`define HCODEC_AV_SCRATCH_B          8'hcb
//`define HCODEC_AV_SCRATCH_C          8'hcc
//`define HCODEC_AV_SCRATCH_D          8'hcd
//`define HCODEC_AV_SCRATCH_E          8'hce
//`define HCODEC_AV_SCRATCH_F          8'hcf
//`define HCODEC_AV_SCRATCH_G          8'hd0
//`define HCODEC_AV_SCRATCH_H          8'hd1
//`define HCODEC_AV_SCRATCH_I          8'hd2
//`define HCODEC_AV_SCRATCH_J          8'hd3
//`define HCODEC_AV_SCRATCH_K          8'hd4
//`define HCODEC_AV_SCRATCH_L          8'hd5
//`define HCODEC_AV_SCRATCH_M          8'hd6
//`define HCODEC_AV_SCRATCH_N          8'hd7
//
//// bit[29:24] A_brst_num_co_mb
//// bit[21:16] A_id_co_mb
//// bit[11:0] wrrsp_count_co_mb
//`define HCODEC_WRRSP_CO_MB           8'hd8 
//// bit[29:24] A_brst_num_dcac
//// bit[21:16] A_id_dcac
//// bit[11:0] wrrsp_count_dcac
//`define HCODEC_WRRSP_DCAC            8'hd9 
//
////======================================
////  MC Control Register Bits
////
////======================================
//// For bits, just copy the defines...don't translate to addresses
//    `define HCODEC_MC_ENABLE	    16'h0001
//    //`define MC_RESET	    16'h0002
//    `define HCODEC_SKIP_MB		    16'h0004
//
////======================================
////  MB Info Register Bits
////
////======================================
//    `define HCODEC_INTRA_MB	    16'h0001
//
//    `define HCODEC_BWD_PRED	    16'h0004
//    `define HCODEC_FWD_PRED	    16'h0008
//
//    `define HCODEC_FLD_MOT		    16'h0100
//    `define HCODEC_FRM_16x8_MOT	16'h0200
//    `define HCODEC_DUAL_PRM_MOT	16'h0300
//
//    `define HCODEC_FRM_DCT		    16'h0000	    // Bit 10
//    `define HCODEC_FLD_DCT		    16'h0400
//
////======================================
////  MB Info Register Bits
////
////======================================
//    `define HCODEC_I_PIC		    16'h0001
//    `define HCODEC_P_PIC		    16'h0002
//    `define HCODEC_B_PIC		    16'h0003
//    
//    `define HCODEC_FLD_PIC		    16'h0000	    // Bit 8
//    `define HCODEC_FRM_PIC		    16'h0100	    
//
////========================================================================
//// DBLK Register:  12'h950 - 12'h97f 
////========================================================================
//`define HCODEC_DBLK_RST                8'h50
//`define HCODEC_DBLK_CTRL               8'h51
//`define HCODEC_DBLK_MB_WID_HEIGHT      8'h52
//`define HCODEC_DBLK_STATUS             8'h53
//`define HCODEC_DBLK_CMD_CTRL           8'h54
//`define HCODEC_DBLK_MB_XY              8'h55
//`define HCODEC_DBLK_QP                 8'h56
//`define HCODEC_DBLK_Y_BHFILT           8'h57
//`define HCODEC_DBLK_Y_BHFILT_HIGH      8'h58
//`define HCODEC_DBLK_Y_BVFILT           8'h59
//`define HCODEC_DBLK_CB_BFILT           8'h5a
//`define HCODEC_DBLK_CR_BFILT           8'h5b
//`define HCODEC_DBLK_Y_HFILT            8'h5c
//`define HCODEC_DBLK_Y_HFILT_HIGH       8'h5d
//`define HCODEC_DBLK_Y_VFILT            8'h5e
//`define HCODEC_DBLK_CB_FILT            8'h5f
//`define HCODEC_DBLK_CR_FILT            8'h60
//`define HCODEC_DBLK_BETAX_QP_SEL       8'h61
//`define HCODEC_DBLK_CLIP_CTRL0         8'h62
//`define HCODEC_DBLK_CLIP_CTRL1         8'h63
//`define HCODEC_DBLK_CLIP_CTRL2         8'h64
//`define HCODEC_DBLK_CLIP_CTRL3         8'h65
//`define HCODEC_DBLK_CLIP_CTRL4         8'h66
//`define HCODEC_DBLK_CLIP_CTRL5         8'h67
//`define HCODEC_DBLK_CLIP_CTRL6         8'h68
//`define HCODEC_DBLK_CLIP_CTRL7         8'h69
//`define HCODEC_DBLK_CLIP_CTRL8         8'h6a
//
//`define HCODEC_DBLK_STATUS1            8'h6b
//`define HCODEC_DBLK_GCLK_FREE          8'h6c
//`define HCODEC_DBLK_GCLK_OFF           8'h6d
//
//`define HCODEC_DBLK_AVSFLAGS           8'h6e
//
//// bit 15:0
//`define HCODEC_DBLK_CBPY               8'h70
//// bit 11:8 -- deblk_cbpy_bottom
//// bit 7:4 -- deblk_cbpy_left
//// bit 3:0 -- deblk_cbpy_top
//`define HCODEC_DBLK_CBPY_ADJ           8'h71
//// bit 7:0 -- deblk_cbpc
//`define HCODEC_DBLK_CBPC               8'h72
//// bit 15 -- bottom_mb
//// bit 14 -- left_mb
//// bit 13 -- top_mb
//// bit 12 -- reserved
//// bit 11:8 -- deblk_cbpc_bottom
//// bit 7:4 -- deblk_cbpc_left
//// bit 3:0 -- deblk_cbpc_top
//`define HCODEC_DBLK_CBPC_ADJ           8'h73
//// bit 15:8 -- deblk_hmvd   -- {left_1, left_0, below_1, below_0, block3-0} 
//// bit 7:0 -- deblk_vmvd    -- {top_1, top_0, below_1, below_0, block3-0} 
//`define HCODEC_DBLK_VHMVD              8'h74
//// bit 13:12 -- right_vmvd
//// bit 11 -- right_above_vmvd
//// bit 10 -- left_below_hmvd
//// bit 9 -- disable_dblk_luma  
//// bit 8 -- disable_dblk_chroma
//// bit 7 -- bBelowRefDiff
//// bit 6 -- bLeftRefDiff
//// bit 5 -- bAboveRefDiff
//// bit 4 -- reserved
//// bit 3 -- s_below
//// bit 2 -- s_left
//// bit 1 -- s_above
//// bit 0 -- s 
//`define HCODEC_DBLK_STRONG             8'h75
//// bit 14:10 -- PQUANT 
//// bit 9:5 -- left_PQUANT 
//// bit 4:0 -- top_PQUANT 
//`define HCODEC_DBLK_RV8_QUANT          8'h76
//
//`define HCODEC_DBLK_CBUS_HCMD2         8'h77
//`define HCODEC_DBLK_CBUS_HCMD1         8'h78
//`define HCODEC_DBLK_CBUS_HCMD0         8'h79
//`define HCODEC_DBLK_VLD_HCMD2          8'h7a
//`define HCODEC_DBLK_VLD_HCMD1          8'h7b
//`define HCODEC_DBLK_VLD_HCMD0          8'h7c
//
//`define HCODEC_DBLK_OST_YBASE          8'h7d
//`define HCODEC_DBLK_OST_CBCRDIFF       8'h7e
//
////13:8 dblk thread ID and token 
////5:0  dblk prearbitor burst num
//`define HCODEC_DBLK_CTRL1              8'h7f
//
////DBLK last address 12'h97f
//
// Closing file:  hcodec_mdec_regs.h
//
//------------------------------------------------------------------------------
// HCODEC VLD module level register offset
//------------------------------------------------------------------------------
//
// Reading file:  hcodec_vld_regs.h
//
//========================================================================
//  VLD module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_HCODEC_VLD_CBUS_BASE = 0x0c
// -----------------------------------------------
//
//`define HCODEC_VLD_STATUS_CTRL     8'h00
////
//// bit 10 -- use_old_shift_en
//// bit 9 -- output_mv_not_pmv
//// bit 8:5 -- force_zigzag
//// bit 4 -- force_zigzag_en
//// bit 3 -- disable_viff_anempty_int
//// bit 2 -- disable_m2_ac_coeff_one_cycle
//// bit 1 -- forced_reset  force reset pmv
//// bit 0 -- mpeg_type  0:mpeg1 1: mpeg2
//`define HCODEC_MPEG1_2_REG         8'h01
//`define HCODEC_F_CODE_REG          8'h02
//`define HCODEC_PIC_HEAD_INFO       8'h03
//`define HCODEC_SLICE_VER_POS_PIC_TYPE  8'h04
//`define HCODEC_QP_VALUE_REG        8'h05
//`define HCODEC_MBA_INC             8'h06
//`define HCODEC_MB_MOTION_MODE      8'h07
////`define HCODEC_PACKET_BYTE_COUNT   8'h08
//// bit 15 -- force_search_startcode_en
//// bit 14 -- int_cpu_when_error (before do anything)
//// bit 13 -- vld_error_reset
//// bit 12 -- return_on_slice_header
//// bit 6 -- jpeg_ff00_en 
//// bit 5:0 -- vld_power_ctl
//`define HCODEC_POWER_CTL_VLD       8'h08
//
//`define HCODEC_MB_WIDTH	    8'h09
//`define HCODEC_SLICE_QP            8'h0a
//// `define HCODEC_MB_X_MB_Y           8'h0b   // current MBX and MBY                  
//`define HCODEC_PRE_START_CODE      8'h0b  // ONLY for $ucode/real/amrisc/rv.s, reg value from apollo
//`define HCODEC_SLICE_START_BYTE_01 8'h0c  // ONLY for $ucode/real/amrisc/rv.s, reg value from apollo
//`define HCODEC_SLICE_START_BYTE_23 8'h0d  // ONLY for $ucode/real/amrisc/rv.s, reg value from apollo
//`define HCODEC_RESYNC_MARKER_LENGTH 8'h0e  // Does this exist in HW ? used in $ucode/mpeg4
//
//// bit[6:5] - frame/field info, 01 - top, 10 - bottom, 11 - frame
//// bit[4:0] - buffer ID
//// L0_BUFF_ID_0, L0_BUFF_ID_1, L1_BUFF_ID_0, L1_BUFF_ID_1
//`define HCODEC_DECODER_BUFFER_INFO  8'h0f  // Current Only Used for VC1 Interlace Field
//
//`define HCODEC_FST_FOR_MV_X        8'h10
//`define HCODEC_FST_FOR_MV_Y        8'h11
//`define HCODEC_SCD_FOR_MV_X        8'h12
//`define HCODEC_SCD_FOR_MV_Y        8'h13
//`define HCODEC_FST_BAK_MV_X        8'h14
//`define HCODEC_FST_BAK_MV_Y        8'h15
//`define HCODEC_SCD_BAK_MV_X        8'h16
//`define HCODEC_SCD_BAK_MV_Y        8'h17
//
//// Bit 7:4 -- read_buffer_interlace  0-progressive, 1-interlace, used in VC1
//// bit 3 -- reserved
//// bit 2 -- weighting_prediction
//// bit 1 -- mb_weighting_flag
//// bit 0 -- slice_weighting_flag 
//`define HCODEC_VLD_DECODE_CONTROL  8'h18
//`define HCODEC_VLD_REVERVED_19     8'h19
//
//`define HCODEC_VIFF_BIT_CNT        8'h1a
//`define HCODEC_BYTE_ALIGN_PEAK_HI  8'h1b 
//`define HCODEC_BYTE_ALIGN_PEAK_LO  8'h1c
//`define HCODEC_NEXT_ALIGN_PEAK     8'h1d  // Does this exist in HW ? used in $ucode/mpeg4
//
//// bit 19    : vc1_inv_intra_co_mb_ref_rd
//// bit 18    : vc1_inv_co_mb_ref_rd
//// bit 17    : vc1_inv_intra_co_mb_ref_wr
//// bit 16    : vc1_inv_co_mb_ref_wr
//// bit 15    : reserved
//// bit 14    : avs_drop_enable
//// bit 13:12 : avs_drop_ptr
//// bit 11:8  : avs_demu_ctl_reg
//// bit 7 : avs_enable
//// bit 6 : disable_dblk_hcmd
//// bit 5 : disable_mc_hcmd
//// bit 4 : first_mode3_set enable
//// bit 3 : first_mode3
//// bit 2:1 : vc1_profile  0-SP, 1-MP, 2-reserved, 3-AP
//// bit 0   : vc1_enable
//`define HCODEC_VC1_CONTROL_REG     8'h1e
//
//`define HCODEC_PMV1_X              8'h20
//`define HCODEC_PMV1_Y              8'h21
//`define HCODEC_PMV2_X              8'h22
//`define HCODEC_PMV2_Y              8'h23
//`define HCODEC_PMV3_X              8'h24
//`define HCODEC_PMV3_Y              8'h25
//`define HCODEC_PMV4_X              8'h26
//`define HCODEC_PMV4_Y              8'h27
//// Can't use the same address for different defines
//// Therefore, create a single define HCODEC_that covers both
//// Only appears to be used in micro-code since the VLD hardware is 
//// hard coded.
//// `define HCODEC_M4_TABLE_SELECT     8'h28  // Does this exist in HW ? Added from register_mp2.h
//// `define HCODEC_M4_TABLE_OUTPUT     8'h28  // Does this exist in HW ? Added from register_mp2.h
//`define HCODEC_M4_TABLE_SELECT     8'h28  
//`define HCODEC_M4_CONTROL_REG      8'h29
//`define HCODEC_BLOCK_NUM           8'h2a  // Does this exist in HW ? Added from register_mp2.h
//`define HCODEC_PATTERN_CODE        8'h2b  // Does this exist in HW ? Added from register_mp2.h
//`define HCODEC_MB_INFO             8'h2c  // Does this exist in HW ? Added from register_mp2.h
//`define HCODEC_VLD_DC_PRED         8'h2d  // Does this exist in HW ? Added from register_mp4.h
//`define HCODEC_VLD_ERROR_MASK      8'h2e
//`define HCODEC_VLD_DC_PRED_C       8'h2f  // Does this exist in HW ? Added from register_mp4.h
//
//`define HCODEC_LAST_SLICE_MV_ADDR  8'h30
//`define HCODEC_LAST_MVX            8'h31
//`define HCODEC_LAST_MVY            8'h32
//
//`define HCODEC_VLD_C38             8'h38
//`define HCODEC_VLD_C39             8'h39
//
//`define HCODEC_VLD_STATUS          8'h3a  // Does this exist in HW ? used in $ucode/real/amrisc/rv.s
//`define HCODEC_VLD_SHIFT_STATUS    8'h3b  // Does this exist in HW ? used in $ucode/real/amrisc/rv.s
//// `define HCODEC_VLD_SHIFT_INFO      8'h3b  // Does this exist in HW ? used in $ucode/mpeg4
//`define HCODEC_VOFF_STATUS         8'h3c  // Does this exist in HW ? used in $ucode/mpeg4
//
//`define HCODEC_VLD_C3D             8'h3d
//
//`define HCODEC_VLD_DBG_INDEX       8'h3e
//
//
//// vld_buff_info -- (index == 0) 
//// Bit[7:6]  mv_UR_ready_cnt;
//// Bit[5]  vld_wr_idx
//// Bit[4]  iq_rd_idx
//// Bit[3]  vld_vi_block_rdy_1
//// Bit[2]  vld_vi_block_rdy_2
//// Bit[1]  voff_empty_1
//// Bit[0]  voff_empty_2
//
//// cabac_buff_info_0 -- (index == 1) 
//// Bit[31] shift_data_ready
//// Bit[30:29] Reserved
//// Bit[28:24] cabac_buffer_ptr
//// Bit[23:0] cabac_buffer
//
//// cabac_buff_info_1 -- (index == 2) 
//// Bit[31:29] Reserved
//// Bit[28:20] Drange
//// Bit[19:16] bin_count_4
//// Bit[15:13] Reserved
//// Bit[12:6] context_mem_do
//// Bit[5:3] coeff_state
//// Bit[2:0] mvd_state
//
//// h264_mv_present -- (index == 3) 
//// Bit[31:16] mv_present_l0
//// Bit[15:0] mv_present_l1
//
//// h264_mv_cal_info_0 -- (index == 4) 
//// [31:28] mv_cal_state
//// [27:24] direct_spatial_cnt
//// Bit[23:21] Reserved
//// Bit[20] mv_UR_ready_for_mv_cal
//// Bit[19] co_mb_mem_ready_for_mv_cal
//// Bit[18] mc_dblk_cmd_if_busy
//// Bit[17] h264_co_mb_wr_busy
//// Bit[16] H264_cbp_blk_ready
//// Bit[15] mc_hcmd_rrdy
//// Bit[14] mc_hcmd_srdy
//// Bit[13] mc_cmd_if_ready
//// Bit[12] mc_hcmd_mv_available
//// Bit[11:8] mc_cmd_if_state
//// Bit[7] dblk_hcmd_rrdy
//// Bit[6] dblk_hcmd_srdy
//// Bit[5] dblk_cmd_if_ready
//// Bit[4] dblk_hcmd_mv_available
//// Bit[3:0] dblk_cmd_if_state
//
//// h264_mv_cal_info_1 -- (index == 5) 
////  Bit[31:29] Reserved
////  Bit[28:24] total_mvd_num_l0
////  Bit[23:21] Reserved
////  Bit[20:16] mv_cal_ptr_l0
////  Bit[15:13] Reserved
////  Bit[12:8] mc_hcmd_ptr_l0
////  Bit[7:5] Reserved
////  Bit[4:0] dblk_hcmd_ptr_l0
//
//// h264_mv_cal_info_2 -- (index == 6) 
////  Bit[31:29] Reserved
////  Bit[28:24] total_mvd_num_l1
////  Bit[23:21] Reserved
////  Bit[20:16] mv_cal_ptr_l1
////  Bit[15:13] Reserved
////  Bit[12:8] mc_hcmd_ptr_l1
////  Bit[7:5] Reserved
////  Bit[4:0] dblk_hcmd_ptr_l1
//
//// h264_co_mb_info -- (index == 7)
//// Bit[31:26] Reserved
//// Bit[25] mv_scale_cal_busy
//// Bit[24:20] co_mv_count
//// Bit[19:16] co_mv_process_state
//// Bit[15] h264_co_mb_rd_busy
//// Bit[15] h264_co_mb_rd_ready
//// Bit[13:12] co_mv_transfer_block_cnt
//// Bit[11:8] co_mv_transfer_ptr
//// Bit[7] co_mv_POC_l1_busy
//// Bit[6] h264_weight_scale_cal_en
//// Bit[5] weight_cal_busy
//// Bit[4] weight_cal_not_finished
//// Bit[3:0] weight_process_state
//
//`define HCODEC_VLD_DBG_DATA        8'h3f
//// --------------------------------------------
//// VIFIFO DDR Interface
//// --------------------------------------------
//// The VIFIFO start pointer into DDR memory is a 32-bit number
//// The Start pointer will automatically be truncated to land on 
//// an 8-byte boundary.  That is, bits [2:0] = 0;
//`define HCODEC_VLD_MEM_VIFIFO_START_PTR        8'h40
//// The current pointer points so some location between the START and END 
//// pointers.  The current pointer is a BYTE pointer.  That is, you can 
//// point to any BYTE address within the START/END range
//`define HCODEC_VLD_MEM_VIFIFO_CURR_PTR         8'h41
//`define HCODEC_VLD_MEM_VIFIFO_END_PTR          8'h42
//`define HCODEC_VLD_MEM_VIFIFO_BYTES_AVAIL      8'h43
//// VIFIFO FIFO Control
//// bit  [31:24] viff_empty_int_enable_cpu[7:0] 
//// bit  [23:16] viff_empty_int_enable_amrisc[7:0] 
////   -bit 23 Video BUFFER < 0x400 Bytes
////   -bit 22 Video BUFFER < 0x200 Bytes
////   -bit 21 Video BUFFER < 0x100 Bytes
////   -bit 20 Video BUFFER < 0x80 Bytes
////   -bit 19 Video BUFFER < 0x40 Bytes
////   -bit 18 Video BUFFER < 0x20 Bytes
////   -bit 17 vififo  < 16 double words
////   -bit 16 vififo  < 8 double words
//// bit  [15:13] unused
//// bit  [12]    A_urgent
//// bit  [11]    transfer_length 0 - 32x64 Bits per request, 1 - 16x64 Bits per request
//// bit  [10]    use_level       Set this bit to 1 to enable filling of the FIFO controlled by the buffer
////                              level control.  If this bit is 0, then use bit[1] to control the enabling of filling
//// bit  [9]     Data Ready.     This bit is set when data can be popped
//// bit  [8]     fill busy       This bit will be high when we're fetching data from the DDR memory
////                              To reset this module, set cntl_enable = 0, and then wait for busy = 0. 
////                              After that you can pulse cntl_init to start over
//// bit  [7]     init_with_cntl_init
//// bit  [6]     reserved
//// bits [5:3]   endian:         see $lib/rtl/ddr_endian.v
//// bit  [2]     cntl_empty_en   Set to 1 to enable reading the DDR memory FIFO
////                              Set cntl_empty_en = cntl_fill_en = 0 when pulsing cntl_init
//// bit  [1]     cntl_fill_en    Set to 1 to enable reading data from DDR memory
//// bit  [0]     cntl_init:      After setting the read pointers, sizes, channel masks
////                              and read masks, set this bit to 1 and then to 0
////                              NOTE:  You don't need to pulse cntl_init if only the start address is
////                              being changed
//`define HCODEC_VLD_MEM_VIFIFO_CONTROL         8'h44
//// --------------------------------------------
//// VIFIFO Buffer Level Manager
//// --------------------------------------------
//`define HCODEC_VLD_MEM_VIFIFO_WP              8'h45 // Manual or Parser write pointer
//`define HCODEC_VLD_MEM_VIFIFO_RP              8'h46
//`define HCODEC_VLD_MEM_VIFIFO_LEVEL           8'h47 // must be low first to shadow low/high 16-bit words
////
//// bit  [8]     use_parser_video2_wp
//// bit  [7]     vbuf2_out_manual
//// bit  [6]     vbuf_out_manual
//// bit  [5]     empty (ReadOnly)
//// bit  [4]     full (ReadOnly)
//// bit  [3:2]   reserved
//// bit  [1]     manual mode     Set to 1 for manual write pointer mode
//// bit  [0]     Init            Set high then low after everything has been initialized
//`define HCODEC_VLD_MEM_VIFIFO_BUF_CNTL        8'h48
//
//// bit 31:16 -- drop_bytes
//// bit 15:14 -- drop_status (Read-Only)
//// bit 13:12 -- sync_match_position (Read-Only)
//// bit 11:6 -- reserved
//// bit 5:4 -- TIME_STAMP_NUMBER, 0-32bits, 1-64bits, 2-96bits, 3-128bits 
//// bit 3 -- stamp_soft_reset
//// bit 2 -- TIME_STAMP_length_enable
//// bit 1 -- TIME_STAMP_sync64_enable
//// bit 0 -- TIME_STAMP_enable
//`define HCODEC_VLD_TIME_STAMP_CNTL            8'h49
//// bit 31:0 -- TIME_STAMP_SYNC_CODE_0
//`define HCODEC_VLD_TIME_STAMP_SYNC_0          8'h4a
//// bit 31:0 -- TIME_STAMP_SYNC_CODE_1 
//`define HCODEC_VLD_TIME_STAMP_SYNC_1          8'h4b
//// bit 31:0 TIME_STAMP_0
//`define HCODEC_VLD_TIME_STAMP_0               8'h4c
//// bit 31:0 TIME_STAMP_1
//`define HCODEC_VLD_TIME_STAMP_1               8'h4d
//// bit 31:0 TIME_STAMP_2
//`define HCODEC_VLD_TIME_STAMP_2               8'h4e
//// bit 31:0 TIME_STAMP_3
//`define HCODEC_VLD_TIME_STAMP_3               8'h4f
//// bit 31:0 TIME_STAMP_LENGTH
//`define HCODEC_VLD_TIME_STAMP_LENGTH          8'h50
//
//// bit 15:0 vififo_rd_count
//`define HCODEC_VLD_MEM_VIFIFO_WRAP_COUNT      8'h51
//
//// bit 29:24 A_brst_num
//// bit 21:16 A_id
//// bit 15:0 level_hold 
//`define HCODEC_VLD_MEM_VIFIFO_MEM_CTL         8'h52
//
//`define HCODEC_VLD_MEM_VBUF_RD_PTR            8'h53 // manual read address for VBUF1
//`define HCODEC_VLD_MEM_VBUF2_RD_PTR           8'h54 // manual read address for VBUF2
//
//`define HCODEC_VLD_MEM_SWAP_ADDR              8'h55
//// bit[23:16] - swap_d_count (Read Only)
//// bit[15:8]  - swap_a_count (Read Only)
//// bit [7] - swap busy (Read Only)
//// bit [6:2] - reserved
//// bit [1] - 1 - STORE to Memory, 0 - LOAD from Memory
//// bit [0] - swap active
//`define HCODEC_VLD_MEM_SWAP_CTL               8'h56
//
// Closing file:  hcodec_vld_regs.h
//
//------------------------------------------------------------------------------
// HCODEC IQIDCT module level register offset
//------------------------------------------------------------------------------
//
// Reading file:  hcodec_iqidct_regs.h
//
//========================================================================
//  IQ/IDCT module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_HCODEC_IQIDCT_CBUS_BASE = 0x0e
// -----------------------------------------------
//
//`define HCODEC_VCOP_CTRL_REG       8'h00
//`define HCODEC_QP_CTRL_REG         8'h01
//`define HCODEC_INTRA_QUANT_MATRIX  8'h02
//`define HCODEC_NON_I_QUANT_MATRIX  8'h03
//`define HCODEC_DC_SCALER           8'h04
//`define HCODEC_DC_AC_CTRL          8'h05
//// `define HCODEC_RV_AI_CTRL          8'h05  // ONLY for $ucode/real/amrisc/rv.s reg value from apollo
//`define HCODEC_DC_AC_SCALE_MUL     8'h06
//`define HCODEC_DC_AC_SCALE_DIV     8'h07
//// `define HCODEC_DC_AC_SCALE_RESULT  8'h06
//// `define HCODEC_RESERVED_E07        8'h07
//`define HCODEC_POWER_CTL_IQIDCT    8'h08
//`define HCODEC_RV_AI_Y_X           8'h09
//`define HCODEC_RV_AI_U_X           8'h0a
//`define HCODEC_RV_AI_V_X           8'h0b
//// bit 15:0 will count up when rv_ai_mb finished when non zero
//// and rv_ai_mb_finished_int will be generate when this is not zero
//`define HCODEC_RV_AI_MB_COUNT      8'h0c
//// For H264 I in PB picture Use -- dma type : h264_next_intra_dma
//`define HCODEC_NEXT_INTRA_DMA_ADDRESS 8'h0d
//// Bit 0 -- constrained_intra_pred_flag for H264
//`define HCODEC_IQIDCT_CONTROL         8'h0e
//
//
//// Bit[31:19] Reserved
//// Bit[18] iq_waiting
//// Bit[17] iq_om_wr_idx
//// Bit[16] iq_om_rd_idx
//// Bit[15] iq_om_busy
//// Bit[14] iq_om_2_busy 
//// Bit[13] idx_fifo_0
//// Bit[12] idx_fifo_1
//// Bit[11] idx_fifo_2
//// Bit[10] idx_fifo_3
//// Bit[9] idx_fifo_4
//// Bit[8] idx_fifo_5
//// Bit[7] idx_fifo_6
//// Bit[6] idx_fifo_7
//// Bit[5:3] idx_fifo_wp
//// Bit[2:0] idx_fifo_rp
//
//`define HCODEC_IQIDCT_DEBUG_INFO_0    8'h0f
//
//// For RTL Simulation Only
//`define HCODEC_DEBLK_CMD              8'h10
//
//// Bit[15+16] ds_mc_valid_2
//// Bit[14+16] new_idct1_rd_idx_2
//// Bit[13+16] new_idct1_wr_idx_2
//// Bit[12+16] idct1_buff0_busy_2
//// Bit[11+16] idct1_buff1_busy_2
//// Bit[10+16] new_idct1_busy_2
//// Bit[9+16] iq_om_8val_2
//// Bit[8+16] idct1_pipe_busy_2
//
//// Bit[7+16] wait_mb_left_finish_hold_2
//// Bit[6+16] new_idct2_rd_idx_2
//// Bit[5+16] new_idct2_wr_idx_2
//// Bit[4+16] idct2_buff0_busy_2
//// Bit[3+16] idct2_buff1_busy_2
//// Bit[2+16] idct2_en_2
//// Bit[1+16] new_idct2_busy_2
//// Bit[0+16] new_idct1_ready_2
//
//// Bit[15] ds_mc_valid_1
//// Bit[14] new_idct1_rd_idx_1
//// Bit[13] new_idct1_wr_idx_1
//// Bit[12] idct1_buff0_busy_1
//// Bit[11] idct1_buff1_busy_1
//// Bit[10] new_idct1_busy_1
//// Bit[9] iq_om_8val_1
//// Bit[8] idct1_pipe_busy_1
//
//// Bit[7] wait_mb_left_finish_hold_1
//// Bit[6] new_idct2_rd_idx_1
//// Bit[5] new_idct2_wr_idx_1
//// Bit[4] idct2_buff0_busy_1
//// Bit[3] idct2_buff1_busy_1
//// Bit[2] idct2_en_1
//// Bit[1] new_idct2_busy_1
//// Bit[0] new_idct1_ready_1
//
//`define HCODEC_IQIDCT_DEBUG_IDCT      8'h11
//
//
//
//// bit 31 -- convas_enable
//// bit 30:24 -- convas_x_count ( 8 pixels / 64 bits )
//// bit 23:16 -- convas_y_count
//// bit 15   -- dcac_dma_busy
//// bit 14   -- dcac_dma_urgent
//// bit 13:8 -- dcac_dma_count
//// bit 7    -- dcac_dma_rw
//// bit 6    -- dcac_skip_read_mode
//// bit 5:0  -- dcac_dma_offset
//`define HCODEC_DCAC_DMA_CTRL        8'h12
//// when (convas_enable == 0 )
////   bit 31:0 dcac_dma_addr
//// when (convas_enable == 1 )
////   bit 31:25 canvas_addr (7 bits)
////   bit 24:12 convas_y_start ( 13 btis )
////   bit 11:0  convas_x_start ( 12 btis )
//`define HCODEC_DCAC_DMA_ADDRESS     8'h13
//// bit 7:0 -- dcac_cpu_addr
//`define HCODEC_DCAC_CPU_ADDRESS     8'h14
//// bit 31:0 -- dcac_cpu_data
//`define HCODEC_DCAC_CPU_DATA        8'h15
//
//// bit 31:19 -- reserved
//// bit 18:16 -- block_num_reg -- Read-Only 
//// bit 15:0 -- dcac_mb_count
//`define HCODEC_DCAC_MB_COUNT        8'h16
//
//// bit 31:18 -- reserved
//// For H264 :
////   bit 17:2 -- h264_quant 
////   bit 11:6 -- h264_quant_c 
////   bit  5:0 -- h264_quant_c 
//// For VC1 :
////   bit    17 -- qindex_GT_8
////   bit    16 -- HalfQPStep
////   bit 15:12 -- eQuantMode 
////   bit 11:6  -- AltPQuant 
////   bit  5:0  -- PQuant 
////             
//`define HCODEC_IQ_QUANT             8'h17
//
//// bit 31:24  -- bitplane_width 
//// bit 23:16  -- bitplane_height 
//// bit 15:14  -- bitplane_start_x 
//// bit 13:12  -- bitplane_start_y 
//// bit 11:4   -- reserved
//// bit 3:1    -- bitplane_type
//// bit 0      -- bitplane_busy
//`define HCODEC_VC1_BITPLANE_CTL     8'h18
//
//
//
//    `define HCODEC_RAM_TEST_CMD        12'h002
//    `define HCODEC_RAM_TEST_ADDR       12'h003
//    `define HCODEC_RAM_TEST_DATAH      12'h004
//    `define HCODEC_RAM_TEST_DATAL      12'h005
//
//    `define HCODEC_RAM_TEST_RD_CMD	    16'h0000
//    `define HCODEC_RAM_TEST_WR_CMD	    16'h8000
//    `define HCODEC_IDCT_TM2_PT0	    16'h0001
//    `define HCODEC_IDCT_TM2_PT1	    16'h0002
//    `define HCODEC_IDCT_TM1_PT0	    16'h0004
//    `define HCODEC_IDCT_TM1_PT1	    16'h0008
//    `define HCODEC_IQ_OMEM_PT0	        16'h0010
//    `define HCODEC_IQ_OMEM_PT1	        16'h0020
//    `define HCODEC_MC_IMEM_PT0	        16'h0040
//    `define HCODEC_ALL_RAM_PTS	        16'h007f
//
////======================================
////  VCOP Control Register Bits
////
////======================================
//    //`define HCODEC_IQIDCT_RESET	    16'h0001	    // Bit 0
//    `define HCODEC_QM_WEN		    16'h0002	    // Bit 1
//    `define HCODEC_IQIDCT_ENABLE	    16'h0004	    // Bit 2
//    `define HCODEC_INTRA_QM	    16'h0008	    // Bit 3	0 = Use default; 1 = use loaded
//    `define HCODEC_NINTRA_QM	    16'h0010	    // Bit 4	0 = Use default; 1 = use loaded
//
////======================================
////  QP Control Register Bits
////
////======================================
//    `define HCODEC_INTRA_MODE	    16'h0080	    // Bit 7
//// Duplicate Address:  When actually used
//// please move to a different address
//// `define HCODEC_FLD_DCT_TYPE	    16'h0100	    // Bit 8	0 = Frame DCT; 1 = field DCT
//
//
// Closing file:  hcodec_iqidct_regs.h
//
//------------------------------------------------------------------------------
// HCODEC IQIDCT module level register offset
//------------------------------------------------------------------------------
//
// Reading file:  hcodec_vcpu_regs.h
//
//========================================================================
//  VCPU module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_HCODEC_VCPU_CBUS_BASE = 0x03
// -----------------------------------------------
//`define HCODEC_MSP                 8'h00
//`define HCODEC_MPSR                8'h01
//`define HCODEC_MINT_VEC_BASE       8'h02
//`define HCODEC_MCPU_INTR_GRP       8'h03
//`define HCODEC_MCPU_INTR_MSK       8'h04
//`define HCODEC_MCPU_INTR_REQ       8'h05
//`define HCODEC_MPC_P               8'h06
//`define HCODEC_MPC_D               8'h07
//`define HCODEC_MPC_E			    8'h08
//`define HCODEC_MPC_W			    8'h09
//`define HCODEC_MINDEX0_REG			8'h0a
//`define HCODEC_MINDEX1_REG			8'h0b
//`define HCODEC_MINDEX2_REG			8'h0c
//`define HCODEC_MINDEX3_REG			8'h0d
//`define HCODEC_MINDEX4_REG			8'h0e
//`define HCODEC_MINDEX5_REG			8'h0f
//`define HCODEC_MINDEX6_REG			8'h10
//`define HCODEC_MINDEX7_REG			8'h11
//`define HCODEC_MMIN_REG			8'h12
//`define HCODEC_MMAX_REG			8'h13
//`define HCODEC_MBREAK0_REG			8'h14
//`define HCODEC_MBREAK1_REG			8'h15
//`define HCODEC_MBREAK2_REG			8'h16
//`define HCODEC_MBREAK3_REG			8'h17
//`define HCODEC_MBREAK_TYPE			8'h18
//`define HCODEC_MBREAK_CTRL			8'h19
//`define HCODEC_MBREAK_STAUTS		8'h1a
//`define HCODEC_MDB_ADDR_REG		8'h1b
//`define HCODEC_MDB_DATA_REG		8'h1c
//`define HCODEC_MDB_CTRL			8'h1d
//`define HCODEC_MSFTINT0            8'h1e
//`define HCODEC_MSFTINT1            8'h1f
//
//`define HCODEC_CSP                 8'h20
//`define HCODEC_CPSR                8'h21
//`define HCODEC_CINT_VEC_BASE       8'h22
//`define HCODEC_CCPU_INTR_GRP       8'h23
//`define HCODEC_CCPU_INTR_MSK       8'h24
//`define HCODEC_CCPU_INTR_REQ       8'h25
//`define HCODEC_CPC_P               8'h26
//`define HCODEC_CPC_D               8'h27
//`define HCODEC_CPC_E			    8'h28
//`define HCODEC_CPC_W			    8'h29
//`define HCODEC_CINDEX0_REG			8'h2a
//`define HCODEC_CINDEX1_REG			8'h2b
//`define HCODEC_CINDEX2_REG			8'h2c
//`define HCODEC_CINDEX3_REG			8'h2d
//`define HCODEC_CINDEX4_REG			8'h2e
//`define HCODEC_CINDEX5_REG			8'h2f
//`define HCODEC_CINDEX6_REG			8'h30
//`define HCODEC_CINDEX7_REG			8'h31
//`define HCODEC_CMIN_REG			8'h32
//`define HCODEC_CMAX_REG			8'h33
//`define HCODEC_CBREAK0_REG			8'h34
//`define HCODEC_CBREAK1_REG			8'h35
//`define HCODEC_CBREAK2_REG			8'h36
//`define HCODEC_CBREAK3_REG			8'h37
//`define HCODEC_CBREAK_TYPE			8'h38
//`define HCODEC_CBREAK_CTRL			8'h39
//`define HCODEC_CBREAK_STAUTS		8'h3a
//`define HCODEC_CDB_ADDR_REG		8'h3b
//`define HCODEC_CDB_DATA_REG		8'h3c
//`define HCODEC_CDB_CTRL			8'h3d
//`define HCODEC_CSFTINT0            8'h3e
//`define HCODEC_CSFTINT1            8'h3f
//
//`define HCODEC_IMEM_DMA_CTRL       8'h40
//`define HCODEC_IMEM_DMA_ADR        8'h41
//`define HCODEC_IMEM_DMA_COUNT      8'h42
//// bit[29:24] A_brst_num_imem
//// bit[21:16] A_id_imem
//// bit[11:0] wrrsp_count_imem (reserved)
//`define HCODEC_WRRSP_IMEM          8'h43
//
//`define HCODEC_LMEM_DMA_CTRL       8'h50
//`define HCODEC_LMEM_DMA_ADR        8'h51
//`define HCODEC_LMEM_DMA_COUNT      8'h52
//// bit[29:24] A_brst_num_lmem
//// bit[21:16] A_id_lmem
//// bit[11:0] wrrsp_count_lmem 
//`define HCODEC_WRRSP_LMEM          8'h53
//
//`define HCODEC_MAC_CTRL1			8'h60
//`define HCODEC_ACC0REG1			8'h61
//`define HCODEC_ACC1REG1			8'h62
//
//`define HCODEC_MAC_CTRL2			8'h70
//`define HCODEC_ACC0REG2			8'h71
//`define HCODEC_ACC1REG2			8'h72
//`define HCODEC_CPU_TRACE			8'h80
//
//
// Closing file:  hcodec_vcpu_regs.h
//
//------------------------------------------------------------------------------
//  DOS top-level register offset
//------------------------------------------------------------------------------
// -----------------------------------------------
// CBUS_BASE:  DOS_TOP_CBUS_BASE = 0x3f
// -----------------------------------------------
#define P_DOS_SW_RESET0                            (volatile unsigned long *)0xd005fc00
#define P_DOS_GCLK_EN0                             (volatile unsigned long *)0xd005fc04
#define P_DOS_GEN_CTRL0                            (volatile unsigned long *)0xd005fc08
#define P_DOS_APB_ERR_CTRL                         (volatile unsigned long *)0xd005fc0c
#define P_DOS_APB_ERR_STAT                         (volatile unsigned long *)0xd005fc10
#define P_DOS_VDEC_INT_EN                          (volatile unsigned long *)0xd005fc14
#define P_DOS_HCODEC_INT_EN                        (volatile unsigned long *)0xd005fc18
#define P_HCODEC_DOS_HCODEC_INT_EN                 (volatile unsigned long *)0xd005fc18
#define P_DOS_SW_RESET1                            (volatile unsigned long *)0xd005fc1c
#define P_DOS_SW_RESET2                            (volatile unsigned long *)0xd005fc20
#define P_DOS_GCLK_EN1                             (volatile unsigned long *)0xd005fc24
#define P_DOS_VDEC2_INT_EN                         (volatile unsigned long *)0xd005fc28
#define P_DOS_VDIN_LCNT                            (volatile unsigned long *)0xd005fc2c
#define P_DOS_VDIN_FCNT                            (volatile unsigned long *)0xd005fc30
#define P_DOS_VDIN_CCTL                            (volatile unsigned long *)0xd005fc34
#define P_DOS_SCRATCH0                             (volatile unsigned long *)0xd005fc40
#define P_DOS_SCRATCH1                             (volatile unsigned long *)0xd005fc44
#define P_DOS_SCRATCH2                             (volatile unsigned long *)0xd005fc48
#define P_DOS_SCRATCH3                             (volatile unsigned long *)0xd005fc4c
#define P_DOS_SCRATCH4                             (volatile unsigned long *)0xd005fc50
#define P_DOS_SCRATCH5                             (volatile unsigned long *)0xd005fc54
#define P_DOS_SCRATCH6                             (volatile unsigned long *)0xd005fc58
#define P_DOS_SCRATCH7                             (volatile unsigned long *)0xd005fc5c
#define P_DOS_SCRATCH8                             (volatile unsigned long *)0xd005fc60
#define P_DOS_SCRATCH9                             (volatile unsigned long *)0xd005fc64
#define P_DOS_SCRATCH10                            (volatile unsigned long *)0xd005fc68
#define P_DOS_SCRATCH11                            (volatile unsigned long *)0xd005fc6c
#define P_DOS_SCRATCH12                            (volatile unsigned long *)0xd005fc70
#define P_DOS_SCRATCH13                            (volatile unsigned long *)0xd005fc74
#define P_DOS_SCRATCH14                            (volatile unsigned long *)0xd005fc78
#define P_DOS_SCRATCH15                            (volatile unsigned long *)0xd005fc7c
#define P_DOS_SCRATCH16                            (volatile unsigned long *)0xd005fc80
#define P_DOS_SCRATCH17                            (volatile unsigned long *)0xd005fc84
#define P_DOS_SCRATCH18                            (volatile unsigned long *)0xd005fc88
#define P_DOS_SCRATCH19                            (volatile unsigned long *)0xd005fc8c
#define P_DOS_SCRATCH20                            (volatile unsigned long *)0xd005fc90
#define P_DOS_SCRATCH21                            (volatile unsigned long *)0xd005fc94
#define P_DOS_SCRATCH22                            (volatile unsigned long *)0xd005fc98
#define P_DOS_SCRATCH23                            (volatile unsigned long *)0xd005fc9c
#define P_DOS_SCRATCH24                            (volatile unsigned long *)0xd005fca0
#define P_DOS_SCRATCH25                            (volatile unsigned long *)0xd005fca4
#define P_DOS_SCRATCH26                            (volatile unsigned long *)0xd005fca8
#define P_DOS_SCRATCH27                            (volatile unsigned long *)0xd005fcac
#define P_DOS_SCRATCH28                            (volatile unsigned long *)0xd005fcb0
#define P_DOS_SCRATCH29                            (volatile unsigned long *)0xd005fcb4
#define P_DOS_SCRATCH30                            (volatile unsigned long *)0xd005fcb8
#define P_DOS_SCRATCH31                            (volatile unsigned long *)0xd005fcbc
#define P_DOS_MEM_PD_VDEC                          (volatile unsigned long *)0xd005fcc0
#define P_DOS_MEM_PD_VDEC2                         (volatile unsigned long *)0xd005fcc4
#define P_DOS_MEM_PD_HCODEC                        (volatile unsigned long *)0xd005fcc8
#define P_HCODEC_DOS_MEM_PD_HCODEC                 (volatile unsigned long *)0xd005fcc8
// bit[31]    mcrcc_stall_en
// bit[30:28] Reserved
// bit[27:20] target_canvas
// bit[19:10] target_mby
// bit[ 9: 0] target_mbx
#define P_DOS_VDEC_MCRCC_STALL_CTRL                (volatile unsigned long *)0xd005fd00
#define P_DOS_VDEC_MCRCC_STALL2_CTRL               (volatile unsigned long *)0xd005fd08
#define P_DOS_VDEC2_MCRCC_STALL_CTRL               (volatile unsigned long *)0xd005fd04
#define P_DOS_VDEC2_MCRCC_STALL2_CTRL              (volatile unsigned long *)0xd005fd0c
//
// Closing file:  ./dos_param.h
//
//
// Reading file:  mdec_regs.h
//
//========================================================================
//  MDEC module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_VDEC_MDEC_CBUS_BASE = 0x09
// -----------------------------------------------
#define P_HCODEC_MC_CTRL_REG                       (volatile unsigned long *)0xd0056400
#define P_HCODEC_MC_MB_INFO                        (volatile unsigned long *)0xd0056404
#define P_HCODEC_MC_PIC_INFO                       (volatile unsigned long *)0xd0056408
#define P_HCODEC_MC_HALF_PEL_ONE                   (volatile unsigned long *)0xd005640c
#define P_HCODEC_MC_HALF_PEL_TWO                   (volatile unsigned long *)0xd0056410
#define P_HCODEC_POWER_CTL_MC                      (volatile unsigned long *)0xd0056414
#define P_HCODEC_MC_CMD                            (volatile unsigned long *)0xd0056418
#define P_HCODEC_MC_CTRL0                          (volatile unsigned long *)0xd005641c
#define P_HCODEC_MC_PIC_W_H                        (volatile unsigned long *)0xd0056420
#define P_HCODEC_MC_STATUS0                        (volatile unsigned long *)0xd0056424
#define P_HCODEC_MC_STATUS1                        (volatile unsigned long *)0xd0056428
#define P_HCODEC_MC_CTRL1                          (volatile unsigned long *)0xd005642c
#define P_HCODEC_MC_MIX_RATIO0                     (volatile unsigned long *)0xd0056430
#define P_HCODEC_MC_MIX_RATIO1                     (volatile unsigned long *)0xd0056434
#define P_HCODEC_MC_DP_MB_XY                       (volatile unsigned long *)0xd0056438
#define P_HCODEC_MC_OM_MB_XY                       (volatile unsigned long *)0xd005643c
#define P_HCODEC_PSCALE_RST                        (volatile unsigned long *)0xd0056440
#define P_HCODEC_PSCALE_CTRL                       (volatile unsigned long *)0xd0056444
#define P_HCODEC_PSCALE_PICI_W                     (volatile unsigned long *)0xd0056448
#define P_HCODEC_PSCALE_PICI_H                     (volatile unsigned long *)0xd005644c
#define P_HCODEC_PSCALE_PICO_W                     (volatile unsigned long *)0xd0056450
#define P_HCODEC_PSCALE_PICO_H                     (volatile unsigned long *)0xd0056454
#define P_HCODEC_PSCALE_PICO_START_X               (volatile unsigned long *)0xd0056458
#define P_HCODEC_PSCALE_PICO_START_Y               (volatile unsigned long *)0xd005645c
#define P_HCODEC_PSCALE_DUMMY                      (volatile unsigned long *)0xd0056460
#define P_HCODEC_PSCALE_FILT0_COEF0                (volatile unsigned long *)0xd0056464
#define P_HCODEC_PSCALE_FILT0_COEF1                (volatile unsigned long *)0xd0056468
#define P_HCODEC_PSCALE_CMD_CTRL                   (volatile unsigned long *)0xd005646c
#define P_HCODEC_PSCALE_CMD_BLK_X                  (volatile unsigned long *)0xd0056470
#define P_HCODEC_PSCALE_CMD_BLK_Y                  (volatile unsigned long *)0xd0056474
#define P_HCODEC_PSCALE_STATUS                     (volatile unsigned long *)0xd0056478
#define P_HCODEC_PSCALE_BMEM_ADDR                  (volatile unsigned long *)0xd005647c
#define P_HCODEC_PSCALE_BMEM_DAT                   (volatile unsigned long *)0xd0056480
#define P_HCODEC_PSCALE_DRAM_BUF_CTRL              (volatile unsigned long *)0xd0056484
#define P_HCODEC_PSCALE_MCMD_CTRL                  (volatile unsigned long *)0xd0056488
#define P_HCODEC_PSCALE_MCMD_XSIZE                 (volatile unsigned long *)0xd005648c
#define P_HCODEC_PSCALE_MCMD_YSIZE                 (volatile unsigned long *)0xd0056490
#define P_HCODEC_PSCALE_RBUF_START_BLKX            (volatile unsigned long *)0xd0056494
#define P_HCODEC_PSCALE_RBUF_START_BLKY            (volatile unsigned long *)0xd0056498
//`define PSCALE_RBUF_MB_WIDTH   8'h27
#define P_HCODEC_PSCALE_PICO_SHIFT_XY              (volatile unsigned long *)0xd00564a0
#define P_HCODEC_PSCALE_CTRL1                      (volatile unsigned long *)0xd00564a4
//Bit 15, wmask enable
//Bit 14:13, filt0 srckey_less, 
//Bit 12:11, filt1 srckey_less, in the case of the interpolated data is equal distance to 
//key data and normal data, 00: select normal data, 01: select right data, 10: select key data
//Bit 10:9, srckey mode, 00: equal, 01: less than or equal, 10: great than or equal
//Bit 8, src key enable
//Bit 7:0, y src key
#define P_HCODEC_PSCALE_SRCKEY_CTRL0               (volatile unsigned long *)0xd00564a8
//Bit 15:8, cb src key
//Bit 7:0, cr src key
#define P_HCODEC_PSCALE_SRCKEY_CTRL1               (volatile unsigned long *)0xd00564ac
//Bit 22:16 canvas_rd_addr2
//Bit 14:8 canvas_rd_addr1
//Bit 6:0 canvas_rd_addr1
#define P_HCODEC_PSCALE_CANVAS_RD_ADDR             (volatile unsigned long *)0xd00564b0
//Bit 22:16 canvas_wr_addr2
//Bit 14:8 canvas_wr_addr1
//Bit 6:0 canvas_wr_addr1
#define P_HCODEC_PSCALE_CANVAS_WR_ADDR             (volatile unsigned long *)0xd00564b4
//bit 13:8 pscale thread ID and token 
//bit 7 disable write response count adding to busy bit 
//bit 5:0  pscale prearbitor burst num
#define P_HCODEC_PSCALE_CTRL2                      (volatile unsigned long *)0xd00564b8
#define P_HCODEC_MC_MPORT_CTRL                     (volatile unsigned long *)0xd0056500
#define P_HCODEC_MC_MPORT_DAT                      (volatile unsigned long *)0xd0056504
#define P_HCODEC_MC_WT_PRED_CTRL                   (volatile unsigned long *)0xd0056508
#define P_HCODEC_MC_MBBOT_ST_EVEN_ADDR             (volatile unsigned long *)0xd0056510
#define P_HCODEC_MC_MBBOT_ST_ODD_ADDR              (volatile unsigned long *)0xd0056514
#define P_HCODEC_MC_DPDN_MB_XY                     (volatile unsigned long *)0xd0056518
#define P_HCODEC_MC_OMDN_MB_XY                     (volatile unsigned long *)0xd005651c
#define P_HCODEC_MC_HCMDBUF_H                      (volatile unsigned long *)0xd0056520
#define P_HCODEC_MC_HCMDBUF_L                      (volatile unsigned long *)0xd0056524
#define P_HCODEC_MC_HCMD_H                         (volatile unsigned long *)0xd0056528
#define P_HCODEC_MC_HCMD_L                         (volatile unsigned long *)0xd005652c
#define P_HCODEC_MC_IDCT_DAT                       (volatile unsigned long *)0xd0056530
#define P_HCODEC_MC_CTRL_GCLK_CTRL                 (volatile unsigned long *)0xd0056534
#define P_HCODEC_MC_OTHER_GCLK_CTRL                (volatile unsigned long *)0xd0056538
//Bit 29:24, mbbot thread ID and token 
//Bit 21:16, mc read/write thread ID and token 
//Bit 13:8,  mbbot pre-arbitor burst number 
//Bit 5:0,   mc pre-arbitor burst number 
#define P_HCODEC_MC_CTRL2                          (volatile unsigned long *)0xd005653c
// `define DBLK_QUANT            8'h76 // ONLY for $ucode/real/amrisc/rv.s, reg value from apollo
//`define ANC1_CANVAS_ADDR      8'h80
//`define ANC2_CANVAS_ADDR      8'h81
//`define REC_CANVAS_ADDR       8'h89
//`define MDEC_PIC_W          8'h8c
//`define MDEC_PIC_H          8'h8d
#define P_HCODEC_MDEC_PIC_DC_CTRL                  (volatile unsigned long *)0xd0056638
#define P_HCODEC_MDEC_PIC_DC_STATUS                (volatile unsigned long *)0xd005663c
#define P_HCODEC_ANC0_CANVAS_ADDR                  (volatile unsigned long *)0xd0056640
#define P_HCODEC_ANC1_CANVAS_ADDR                  (volatile unsigned long *)0xd0056644
#define P_HCODEC_ANC2_CANVAS_ADDR                  (volatile unsigned long *)0xd0056648
#define P_HCODEC_ANC3_CANVAS_ADDR                  (volatile unsigned long *)0xd005664c
#define P_HCODEC_ANC4_CANVAS_ADDR                  (volatile unsigned long *)0xd0056650
#define P_HCODEC_ANC5_CANVAS_ADDR                  (volatile unsigned long *)0xd0056654
#define P_HCODEC_ANC6_CANVAS_ADDR                  (volatile unsigned long *)0xd0056658
#define P_HCODEC_ANC7_CANVAS_ADDR                  (volatile unsigned long *)0xd005665c
#define P_HCODEC_ANC8_CANVAS_ADDR                  (volatile unsigned long *)0xd0056660
#define P_HCODEC_ANC9_CANVAS_ADDR                  (volatile unsigned long *)0xd0056664
#define P_HCODEC_ANC10_CANVAS_ADDR                 (volatile unsigned long *)0xd0056668
#define P_HCODEC_ANC11_CANVAS_ADDR                 (volatile unsigned long *)0xd005666c
#define P_HCODEC_ANC12_CANVAS_ADDR                 (volatile unsigned long *)0xd0056670
#define P_HCODEC_ANC13_CANVAS_ADDR                 (volatile unsigned long *)0xd0056674
#define P_HCODEC_ANC14_CANVAS_ADDR                 (volatile unsigned long *)0xd0056678
#define P_HCODEC_ANC15_CANVAS_ADDR                 (volatile unsigned long *)0xd005667c
#define P_HCODEC_ANC16_CANVAS_ADDR                 (volatile unsigned long *)0xd0056680
#define P_HCODEC_ANC17_CANVAS_ADDR                 (volatile unsigned long *)0xd0056684
#define P_HCODEC_ANC18_CANVAS_ADDR                 (volatile unsigned long *)0xd0056688
#define P_HCODEC_ANC19_CANVAS_ADDR                 (volatile unsigned long *)0xd005668c
#define P_HCODEC_ANC20_CANVAS_ADDR                 (volatile unsigned long *)0xd0056690
#define P_HCODEC_ANC21_CANVAS_ADDR                 (volatile unsigned long *)0xd0056694
#define P_HCODEC_ANC22_CANVAS_ADDR                 (volatile unsigned long *)0xd0056698
#define P_HCODEC_ANC23_CANVAS_ADDR                 (volatile unsigned long *)0xd005669c
#define P_HCODEC_ANC24_CANVAS_ADDR                 (volatile unsigned long *)0xd00566a0
#define P_HCODEC_ANC25_CANVAS_ADDR                 (volatile unsigned long *)0xd00566a4
#define P_HCODEC_ANC26_CANVAS_ADDR                 (volatile unsigned long *)0xd00566a8
#define P_HCODEC_ANC27_CANVAS_ADDR                 (volatile unsigned long *)0xd00566ac
#define P_HCODEC_ANC28_CANVAS_ADDR                 (volatile unsigned long *)0xd00566b0
#define P_HCODEC_ANC29_CANVAS_ADDR                 (volatile unsigned long *)0xd00566b4
#define P_HCODEC_ANC30_CANVAS_ADDR                 (volatile unsigned long *)0xd00566b8
#define P_HCODEC_ANC31_CANVAS_ADDR                 (volatile unsigned long *)0xd00566bc
#define P_HCODEC_DBKR_CANVAS_ADDR                  (volatile unsigned long *)0xd00566c0
#define P_HCODEC_DBKW_CANVAS_ADDR                  (volatile unsigned long *)0xd00566c4
#define P_HCODEC_REC_CANVAS_ADDR                   (volatile unsigned long *)0xd00566c8
//28:24, read/write, current canvas idx, used in h264 only now
//23:0, read only, current canvas address, 23:16, Cr canvas addr, 15:8, Cb canvas addr, 7:0, Y  canvas addr
#define P_HCODEC_CURR_CANVAS_CTRL                  (volatile unsigned long *)0xd00566cc
#define P_HCODEC_MDEC_PIC_DC_THRESH                (volatile unsigned long *)0xd00566e0
#define P_HCODEC_MDEC_PICR_BUF_STATUS              (volatile unsigned long *)0xd00566e4
#define P_HCODEC_MDEC_PICW_BUF_STATUS              (volatile unsigned long *)0xd00566e8
#define P_HCODEC_MCW_DBLK_WRRSP_CNT                (volatile unsigned long *)0xd00566ec
#define P_HCODEC_MC_MBBOT_WRRSP_CNT                (volatile unsigned long *)0xd00566f0
#define P_HCODEC_MDEC_PICW_BUF2_STATUS             (volatile unsigned long *)0xd00566f4
#define P_HCODEC_WRRSP_FIFO_PICW_DBK               (volatile unsigned long *)0xd00566f8
#define P_HCODEC_WRRSP_FIFO_PICW_MC                (volatile unsigned long *)0xd00566fc
#define P_HCODEC_AV_SCRATCH_0                      (volatile unsigned long *)0xd0056700
#define P_HCODEC_AV_SCRATCH_1                      (volatile unsigned long *)0xd0056704
#define P_HCODEC_AV_SCRATCH_2                      (volatile unsigned long *)0xd0056708
#define P_HCODEC_AV_SCRATCH_3                      (volatile unsigned long *)0xd005670c
#define P_HCODEC_AV_SCRATCH_4                      (volatile unsigned long *)0xd0056710
#define P_HCODEC_AV_SCRATCH_5                      (volatile unsigned long *)0xd0056714
#define P_HCODEC_AV_SCRATCH_6                      (volatile unsigned long *)0xd0056718
#define P_HCODEC_AV_SCRATCH_7                      (volatile unsigned long *)0xd005671c
#define P_HCODEC_AV_SCRATCH_8                      (volatile unsigned long *)0xd0056720
#define P_HCODEC_AV_SCRATCH_9                      (volatile unsigned long *)0xd0056724
#define P_HCODEC_AV_SCRATCH_A                      (volatile unsigned long *)0xd0056728
#define P_HCODEC_AV_SCRATCH_B                      (volatile unsigned long *)0xd005672c
#define P_HCODEC_AV_SCRATCH_C                      (volatile unsigned long *)0xd0056730
#define P_HCODEC_AV_SCRATCH_D                      (volatile unsigned long *)0xd0056734
#define P_HCODEC_AV_SCRATCH_E                      (volatile unsigned long *)0xd0056738
#define P_HCODEC_AV_SCRATCH_F                      (volatile unsigned long *)0xd005673c
#define P_HCODEC_AV_SCRATCH_G                      (volatile unsigned long *)0xd0056740
#define P_HCODEC_AV_SCRATCH_H                      (volatile unsigned long *)0xd0056744
#define P_HCODEC_AV_SCRATCH_I                      (volatile unsigned long *)0xd0056748
#define P_HCODEC_AV_SCRATCH_J                      (volatile unsigned long *)0xd005674c
#define P_HCODEC_AV_SCRATCH_K                      (volatile unsigned long *)0xd0056750
#define P_HCODEC_AV_SCRATCH_L                      (volatile unsigned long *)0xd0056754
#define P_HCODEC_AV_SCRATCH_M                      (volatile unsigned long *)0xd0056758
#define P_HCODEC_AV_SCRATCH_N                      (volatile unsigned long *)0xd005675c
// bit[29:24] A_brst_num_co_mb
// bit[21:16] A_id_co_mb
// bit[11:0] wrrsp_count_co_mb
#define P_HCODEC_WRRSP_CO_MB                       (volatile unsigned long *)0xd0056760
// bit[29:24] A_brst_num_dcac
// bit[21:16] A_id_dcac
// bit[11:0] wrrsp_count_dcac
#define P_HCODEC_WRRSP_DCAC                        (volatile unsigned long *)0xd0056764
//======================================
//  MC Control Register Bits
//
//======================================
// For bits, just copy the defines...don't translate to addresses
    //`define MC_RESET	    16'h0002
//======================================
//  MB Info Register Bits
//
//======================================
//======================================
//  MB Info Register Bits
//
//======================================
//========================================================================
// DBLK Register:  12'h950 - 12'h97f 
//========================================================================
#define P_HCODEC_DBLK_RST                          (volatile unsigned long *)0xd0056540
#define P_HCODEC_DBLK_CTRL                         (volatile unsigned long *)0xd0056544
#define P_HCODEC_DBLK_MB_WID_HEIGHT                (volatile unsigned long *)0xd0056548
#define P_HCODEC_DBLK_STATUS                       (volatile unsigned long *)0xd005654c
#define P_HCODEC_DBLK_CMD_CTRL                     (volatile unsigned long *)0xd0056550
#define P_HCODEC_DBLK_MB_XY                        (volatile unsigned long *)0xd0056554
#define P_HCODEC_DBLK_QP                           (volatile unsigned long *)0xd0056558
#define P_HCODEC_DBLK_Y_BHFILT                     (volatile unsigned long *)0xd005655c
#define P_HCODEC_DBLK_Y_BHFILT_HIGH                (volatile unsigned long *)0xd0056560
#define P_HCODEC_DBLK_Y_BVFILT                     (volatile unsigned long *)0xd0056564
#define P_HCODEC_DBLK_CB_BFILT                     (volatile unsigned long *)0xd0056568
#define P_HCODEC_DBLK_CR_BFILT                     (volatile unsigned long *)0xd005656c
#define P_HCODEC_DBLK_Y_HFILT                      (volatile unsigned long *)0xd0056570
#define P_HCODEC_DBLK_Y_HFILT_HIGH                 (volatile unsigned long *)0xd0056574
#define P_HCODEC_DBLK_Y_VFILT                      (volatile unsigned long *)0xd0056578
#define P_HCODEC_DBLK_CB_FILT                      (volatile unsigned long *)0xd005657c
#define P_HCODEC_DBLK_CR_FILT                      (volatile unsigned long *)0xd0056580
#define P_HCODEC_DBLK_BETAX_QP_SEL                 (volatile unsigned long *)0xd0056584
#define P_HCODEC_DBLK_CLIP_CTRL0                   (volatile unsigned long *)0xd0056588
#define P_HCODEC_DBLK_CLIP_CTRL1                   (volatile unsigned long *)0xd005658c
#define P_HCODEC_DBLK_CLIP_CTRL2                   (volatile unsigned long *)0xd0056590
#define P_HCODEC_DBLK_CLIP_CTRL3                   (volatile unsigned long *)0xd0056594
#define P_HCODEC_DBLK_CLIP_CTRL4                   (volatile unsigned long *)0xd0056598
#define P_HCODEC_DBLK_CLIP_CTRL5                   (volatile unsigned long *)0xd005659c
#define P_HCODEC_DBLK_CLIP_CTRL6                   (volatile unsigned long *)0xd00565a0
#define P_HCODEC_DBLK_CLIP_CTRL7                   (volatile unsigned long *)0xd00565a4
#define P_HCODEC_DBLK_CLIP_CTRL8                   (volatile unsigned long *)0xd00565a8
#define P_HCODEC_DBLK_STATUS1                      (volatile unsigned long *)0xd00565ac
#define P_HCODEC_DBLK_GCLK_FREE                    (volatile unsigned long *)0xd00565b0
#define P_HCODEC_DBLK_GCLK_OFF                     (volatile unsigned long *)0xd00565b4
#define P_HCODEC_DBLK_AVSFLAGS                     (volatile unsigned long *)0xd00565b8
// bit 15:0
#define P_HCODEC_DBLK_CBPY                         (volatile unsigned long *)0xd00565c0
// bit 11:8 -- deblk_cbpy_bottom
// bit 7:4 -- deblk_cbpy_left
// bit 3:0 -- deblk_cbpy_top
#define P_HCODEC_DBLK_CBPY_ADJ                     (volatile unsigned long *)0xd00565c4
// bit 7:0 -- deblk_cbpc
#define P_HCODEC_DBLK_CBPC                         (volatile unsigned long *)0xd00565c8
// bit 15 -- bottom_mb
// bit 14 -- left_mb
// bit 13 -- top_mb
// bit 12 -- reserved
// bit 11:8 -- deblk_cbpc_bottom
// bit 7:4 -- deblk_cbpc_left
// bit 3:0 -- deblk_cbpc_top
#define P_HCODEC_DBLK_CBPC_ADJ                     (volatile unsigned long *)0xd00565cc
// bit 15:8 -- deblk_hmvd   -- {left_1, left_0, below_1, below_0, block3-0} 
// bit 7:0 -- deblk_vmvd    -- {top_1, top_0, below_1, below_0, block3-0} 
#define P_HCODEC_DBLK_VHMVD                        (volatile unsigned long *)0xd00565d0
// bit 13:12 -- right_vmvd
// bit 11 -- right_above_vmvd
// bit 10 -- left_below_hmvd
// bit 9 -- disable_dblk_luma  
// bit 8 -- disable_dblk_chroma
// bit 7 -- bBelowRefDiff
// bit 6 -- bLeftRefDiff
// bit 5 -- bAboveRefDiff
// bit 4 -- reserved
// bit 3 -- s_below
// bit 2 -- s_left
// bit 1 -- s_above
// bit 0 -- s 
#define P_HCODEC_DBLK_STRONG                       (volatile unsigned long *)0xd00565d4
// bit 14:10 -- PQUANT 
// bit 9:5 -- left_PQUANT 
// bit 4:0 -- top_PQUANT 
#define P_HCODEC_DBLK_RV8_QUANT                    (volatile unsigned long *)0xd00565d8
#define P_HCODEC_DBLK_CBUS_HCMD2                   (volatile unsigned long *)0xd00565dc
#define P_HCODEC_DBLK_CBUS_HCMD1                   (volatile unsigned long *)0xd00565e0
#define P_HCODEC_DBLK_CBUS_HCMD0                   (volatile unsigned long *)0xd00565e4
#define P_HCODEC_DBLK_VLD_HCMD2                    (volatile unsigned long *)0xd00565e8
#define P_HCODEC_DBLK_VLD_HCMD1                    (volatile unsigned long *)0xd00565ec
#define P_HCODEC_DBLK_VLD_HCMD0                    (volatile unsigned long *)0xd00565f0
#define P_HCODEC_DBLK_OST_YBASE                    (volatile unsigned long *)0xd00565f4
#define P_HCODEC_DBLK_OST_CBCRDIFF                 (volatile unsigned long *)0xd00565f8
//13:8 dblk thread ID and token 
//5:0  dblk prearbitor burst num
#define P_HCODEC_DBLK_CTRL1                        (volatile unsigned long *)0xd00565fc
// MCRCC_CTL1
// 31:3  <reserved[23:0]>
// 2     <cfg_field_pic>
// 1     <sw_rst>
// 0     <bypass_en>
#define P_HCODEC_MCRCC_CTL1                        (volatile unsigned long *)0xd0056600
// MCRCC_CTL2
// 31:24    <cfg_cache_anc01_c[7:0]>
// 23:16    <cfg_cache_anc01_y[7:0]>
// 15:8     <cfg_cache_anc00_c[7:0]>
// 7:0      <cfg_cache_anc00_y[7:0]>
#define P_HCODEC_MCRCC_CTL2                        (volatile unsigned long *)0xd0056604
// MCRCC_CTL3
// 31:24    <cfg_cache_anc11_c[7:0]>
// 23:16    <cfg_cache_anc11_y[7:0]>
// 15:8     <cfg_cache_anc10_c[7:0]>
// 7:0      <cfg_cache_anc10_y[7:0]>
#define P_HCODEC_MCRCC_CTL3                        (volatile unsigned long *)0xd0056608
// bit[31:10] reserved
// bit[9:0] sw_clock_gating control 
// [9] vdec clk_en for assist and cbus.
// [8] vdec clk_en for ddr
// [7] vdec clk_en for vcpu
// [6] vdec clk_en for assist
// [5] vdec clk_en for dblk
// [4] vdec clk_en for iqidct
// [3] vdec clk_en for mc
// [2] vdec clk_en for pic_dc
// [1] vdec clk_en for psc
// [0] vdec clk_en for vld
#define P_HCODEC_GCLK_EN                           (volatile unsigned long *)0xd005660c
// [0]  Reserved 
// [1]  Reserved
// [2]  Reset assist, mdec's CBUS
// [3]  Reset mdec's VLD
// [4]  Reset mdec's VLD
// [5]  Reset mdec's VLD
// [6]  Reset mdec's IQIDCT
// [7]  Reset mdec's MC
// [8]  Reset mdec's DBLK
// [9]  Reset mdec's PIC_DC
// [10] Reset mdec's Pscale
// [11] Reset vcpu's MCPU
// [12] Reset vcpu's CCPU
// [13] Reset mmc_pre_arb
#define P_HCODEC_MDEC_SW_RESET                     (volatile unsigned long *)0xd0056610
//DBLK last address 12'h97f
//
// Closing file:  mdec_regs.h
//
//
// Reading file:  mdec_regs.h
//
//========================================================================
//  MDEC module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_VDEC_MDEC_CBUS_BASE = 0x09
// -----------------------------------------------
#define P_VDEC2_MC_CTRL_REG                        (volatile unsigned long *)0xd005a400
#define P_VDEC2_MC_MB_INFO                         (volatile unsigned long *)0xd005a404
#define P_VDEC2_MC_PIC_INFO                        (volatile unsigned long *)0xd005a408
#define P_VDEC2_MC_HALF_PEL_ONE                    (volatile unsigned long *)0xd005a40c
#define P_VDEC2_MC_HALF_PEL_TWO                    (volatile unsigned long *)0xd005a410
#define P_VDEC2_POWER_CTL_MC                       (volatile unsigned long *)0xd005a414
#define P_VDEC2_MC_CMD                             (volatile unsigned long *)0xd005a418
#define P_VDEC2_MC_CTRL0                           (volatile unsigned long *)0xd005a41c
#define P_VDEC2_MC_PIC_W_H                         (volatile unsigned long *)0xd005a420
#define P_VDEC2_MC_STATUS0                         (volatile unsigned long *)0xd005a424
#define P_VDEC2_MC_STATUS1                         (volatile unsigned long *)0xd005a428
#define P_VDEC2_MC_CTRL1                           (volatile unsigned long *)0xd005a42c
#define P_VDEC2_MC_MIX_RATIO0                      (volatile unsigned long *)0xd005a430
#define P_VDEC2_MC_MIX_RATIO1                      (volatile unsigned long *)0xd005a434
#define P_VDEC2_MC_DP_MB_XY                        (volatile unsigned long *)0xd005a438
#define P_VDEC2_MC_OM_MB_XY                        (volatile unsigned long *)0xd005a43c
#define P_VDEC2_PSCALE_RST                         (volatile unsigned long *)0xd005a440
#define P_VDEC2_PSCALE_CTRL                        (volatile unsigned long *)0xd005a444
#define P_VDEC2_PSCALE_PICI_W                      (volatile unsigned long *)0xd005a448
#define P_VDEC2_PSCALE_PICI_H                      (volatile unsigned long *)0xd005a44c
#define P_VDEC2_PSCALE_PICO_W                      (volatile unsigned long *)0xd005a450
#define P_VDEC2_PSCALE_PICO_H                      (volatile unsigned long *)0xd005a454
#define P_VDEC2_PSCALE_PICO_START_X                (volatile unsigned long *)0xd005a458
#define P_VDEC2_PSCALE_PICO_START_Y                (volatile unsigned long *)0xd005a45c
#define P_VDEC2_PSCALE_DUMMY                       (volatile unsigned long *)0xd005a460
#define P_VDEC2_PSCALE_FILT0_COEF0                 (volatile unsigned long *)0xd005a464
#define P_VDEC2_PSCALE_FILT0_COEF1                 (volatile unsigned long *)0xd005a468
#define P_VDEC2_PSCALE_CMD_CTRL                    (volatile unsigned long *)0xd005a46c
#define P_VDEC2_PSCALE_CMD_BLK_X                   (volatile unsigned long *)0xd005a470
#define P_VDEC2_PSCALE_CMD_BLK_Y                   (volatile unsigned long *)0xd005a474
#define P_VDEC2_PSCALE_STATUS                      (volatile unsigned long *)0xd005a478
#define P_VDEC2_PSCALE_BMEM_ADDR                   (volatile unsigned long *)0xd005a47c
#define P_VDEC2_PSCALE_BMEM_DAT                    (volatile unsigned long *)0xd005a480
#define P_VDEC2_PSCALE_DRAM_BUF_CTRL               (volatile unsigned long *)0xd005a484
#define P_VDEC2_PSCALE_MCMD_CTRL                   (volatile unsigned long *)0xd005a488
#define P_VDEC2_PSCALE_MCMD_XSIZE                  (volatile unsigned long *)0xd005a48c
#define P_VDEC2_PSCALE_MCMD_YSIZE                  (volatile unsigned long *)0xd005a490
#define P_VDEC2_PSCALE_RBUF_START_BLKX             (volatile unsigned long *)0xd005a494
#define P_VDEC2_PSCALE_RBUF_START_BLKY             (volatile unsigned long *)0xd005a498
//`define PSCALE_RBUF_MB_WIDTH   8'h27
#define P_VDEC2_PSCALE_PICO_SHIFT_XY               (volatile unsigned long *)0xd005a4a0
#define P_VDEC2_PSCALE_CTRL1                       (volatile unsigned long *)0xd005a4a4
//Bit 15, wmask enable
//Bit 14:13, filt0 srckey_less, 
//Bit 12:11, filt1 srckey_less, in the case of the interpolated data is equal distance to 
//key data and normal data, 00: select normal data, 01: select right data, 10: select key data
//Bit 10:9, srckey mode, 00: equal, 01: less than or equal, 10: great than or equal
//Bit 8, src key enable
//Bit 7:0, y src key
#define P_VDEC2_PSCALE_SRCKEY_CTRL0                (volatile unsigned long *)0xd005a4a8
//Bit 15:8, cb src key
//Bit 7:0, cr src key
#define P_VDEC2_PSCALE_SRCKEY_CTRL1                (volatile unsigned long *)0xd005a4ac
//Bit 22:16 canvas_rd_addr2
//Bit 14:8 canvas_rd_addr1
//Bit 6:0 canvas_rd_addr1
#define P_VDEC2_PSCALE_CANVAS_RD_ADDR              (volatile unsigned long *)0xd005a4b0
//Bit 22:16 canvas_wr_addr2
//Bit 14:8 canvas_wr_addr1
//Bit 6:0 canvas_wr_addr1
#define P_VDEC2_PSCALE_CANVAS_WR_ADDR              (volatile unsigned long *)0xd005a4b4
//bit 13:8 pscale thread ID and token 
//bit 7 disable write response count adding to busy bit 
//bit 5:0  pscale prearbitor burst num
#define P_VDEC2_PSCALE_CTRL2                       (volatile unsigned long *)0xd005a4b8
#define P_VDEC2_MC_MPORT_CTRL                      (volatile unsigned long *)0xd005a500
#define P_VDEC2_MC_MPORT_DAT                       (volatile unsigned long *)0xd005a504
#define P_VDEC2_MC_WT_PRED_CTRL                    (volatile unsigned long *)0xd005a508
#define P_VDEC2_MC_MBBOT_ST_EVEN_ADDR              (volatile unsigned long *)0xd005a510
#define P_VDEC2_MC_MBBOT_ST_ODD_ADDR               (volatile unsigned long *)0xd005a514
#define P_VDEC2_MC_DPDN_MB_XY                      (volatile unsigned long *)0xd005a518
#define P_VDEC2_MC_OMDN_MB_XY                      (volatile unsigned long *)0xd005a51c
#define P_VDEC2_MC_HCMDBUF_H                       (volatile unsigned long *)0xd005a520
#define P_VDEC2_MC_HCMDBUF_L                       (volatile unsigned long *)0xd005a524
#define P_VDEC2_MC_HCMD_H                          (volatile unsigned long *)0xd005a528
#define P_VDEC2_MC_HCMD_L                          (volatile unsigned long *)0xd005a52c
#define P_VDEC2_MC_IDCT_DAT                        (volatile unsigned long *)0xd005a530
#define P_VDEC2_MC_CTRL_GCLK_CTRL                  (volatile unsigned long *)0xd005a534
#define P_VDEC2_MC_OTHER_GCLK_CTRL                 (volatile unsigned long *)0xd005a538
//Bit 29:24, mbbot thread ID and token 
//Bit 21:16, mc read/write thread ID and token 
//Bit 13:8,  mbbot pre-arbitor burst number 
//Bit 5:0,   mc pre-arbitor burst number 
#define P_VDEC2_MC_CTRL2                           (volatile unsigned long *)0xd005a53c
// `define DBLK_QUANT            8'h76 // ONLY for $ucode/real/amrisc/rv.s, reg value from apollo
//`define ANC1_CANVAS_ADDR      8'h80
//`define ANC2_CANVAS_ADDR      8'h81
//`define REC_CANVAS_ADDR       8'h89
//`define MDEC_PIC_W          8'h8c
//`define MDEC_PIC_H          8'h8d
#define P_VDEC2_MDEC_PIC_DC_CTRL                   (volatile unsigned long *)0xd005a638
#define P_VDEC2_MDEC_PIC_DC_STATUS                 (volatile unsigned long *)0xd005a63c
#define P_VDEC2_ANC0_CANVAS_ADDR                   (volatile unsigned long *)0xd005a640
#define P_VDEC2_ANC1_CANVAS_ADDR                   (volatile unsigned long *)0xd005a644
#define P_VDEC2_ANC2_CANVAS_ADDR                   (volatile unsigned long *)0xd005a648
#define P_VDEC2_ANC3_CANVAS_ADDR                   (volatile unsigned long *)0xd005a64c
#define P_VDEC2_ANC4_CANVAS_ADDR                   (volatile unsigned long *)0xd005a650
#define P_VDEC2_ANC5_CANVAS_ADDR                   (volatile unsigned long *)0xd005a654
#define P_VDEC2_ANC6_CANVAS_ADDR                   (volatile unsigned long *)0xd005a658
#define P_VDEC2_ANC7_CANVAS_ADDR                   (volatile unsigned long *)0xd005a65c
#define P_VDEC2_ANC8_CANVAS_ADDR                   (volatile unsigned long *)0xd005a660
#define P_VDEC2_ANC9_CANVAS_ADDR                   (volatile unsigned long *)0xd005a664
#define P_VDEC2_ANC10_CANVAS_ADDR                  (volatile unsigned long *)0xd005a668
#define P_VDEC2_ANC11_CANVAS_ADDR                  (volatile unsigned long *)0xd005a66c
#define P_VDEC2_ANC12_CANVAS_ADDR                  (volatile unsigned long *)0xd005a670
#define P_VDEC2_ANC13_CANVAS_ADDR                  (volatile unsigned long *)0xd005a674
#define P_VDEC2_ANC14_CANVAS_ADDR                  (volatile unsigned long *)0xd005a678
#define P_VDEC2_ANC15_CANVAS_ADDR                  (volatile unsigned long *)0xd005a67c
#define P_VDEC2_ANC16_CANVAS_ADDR                  (volatile unsigned long *)0xd005a680
#define P_VDEC2_ANC17_CANVAS_ADDR                  (volatile unsigned long *)0xd005a684
#define P_VDEC2_ANC18_CANVAS_ADDR                  (volatile unsigned long *)0xd005a688
#define P_VDEC2_ANC19_CANVAS_ADDR                  (volatile unsigned long *)0xd005a68c
#define P_VDEC2_ANC20_CANVAS_ADDR                  (volatile unsigned long *)0xd005a690
#define P_VDEC2_ANC21_CANVAS_ADDR                  (volatile unsigned long *)0xd005a694
#define P_VDEC2_ANC22_CANVAS_ADDR                  (volatile unsigned long *)0xd005a698
#define P_VDEC2_ANC23_CANVAS_ADDR                  (volatile unsigned long *)0xd005a69c
#define P_VDEC2_ANC24_CANVAS_ADDR                  (volatile unsigned long *)0xd005a6a0
#define P_VDEC2_ANC25_CANVAS_ADDR                  (volatile unsigned long *)0xd005a6a4
#define P_VDEC2_ANC26_CANVAS_ADDR                  (volatile unsigned long *)0xd005a6a8
#define P_VDEC2_ANC27_CANVAS_ADDR                  (volatile unsigned long *)0xd005a6ac
#define P_VDEC2_ANC28_CANVAS_ADDR                  (volatile unsigned long *)0xd005a6b0
#define P_VDEC2_ANC29_CANVAS_ADDR                  (volatile unsigned long *)0xd005a6b4
#define P_VDEC2_ANC30_CANVAS_ADDR                  (volatile unsigned long *)0xd005a6b8
#define P_VDEC2_ANC31_CANVAS_ADDR                  (volatile unsigned long *)0xd005a6bc
#define P_VDEC2_DBKR_CANVAS_ADDR                   (volatile unsigned long *)0xd005a6c0
#define P_VDEC2_DBKW_CANVAS_ADDR                   (volatile unsigned long *)0xd005a6c4
#define P_VDEC2_REC_CANVAS_ADDR                    (volatile unsigned long *)0xd005a6c8
//28:24, read/write, current canvas idx, used in h264 only now
//23:0, read only, current canvas address, 23:16, Cr canvas addr, 15:8, Cb canvas addr, 7:0, Y  canvas addr
#define P_VDEC2_CURR_CANVAS_CTRL                   (volatile unsigned long *)0xd005a6cc
#define P_VDEC2_MDEC_PIC_DC_THRESH                 (volatile unsigned long *)0xd005a6e0
#define P_VDEC2_MDEC_PICR_BUF_STATUS               (volatile unsigned long *)0xd005a6e4
#define P_VDEC2_MDEC_PICW_BUF_STATUS               (volatile unsigned long *)0xd005a6e8
#define P_VDEC2_MCW_DBLK_WRRSP_CNT                 (volatile unsigned long *)0xd005a6ec
#define P_VDEC2_MC_MBBOT_WRRSP_CNT                 (volatile unsigned long *)0xd005a6f0
#define P_VDEC2_MDEC_PICW_BUF2_STATUS              (volatile unsigned long *)0xd005a6f4
#define P_VDEC2_WRRSP_FIFO_PICW_DBK                (volatile unsigned long *)0xd005a6f8
#define P_VDEC2_WRRSP_FIFO_PICW_MC                 (volatile unsigned long *)0xd005a6fc
#define P_VDEC2_AV_SCRATCH_0                       (volatile unsigned long *)0xd005a700
#define P_VDEC2_AV_SCRATCH_1                       (volatile unsigned long *)0xd005a704
#define P_VDEC2_AV_SCRATCH_2                       (volatile unsigned long *)0xd005a708
#define P_VDEC2_AV_SCRATCH_3                       (volatile unsigned long *)0xd005a70c
#define P_VDEC2_AV_SCRATCH_4                       (volatile unsigned long *)0xd005a710
#define P_VDEC2_AV_SCRATCH_5                       (volatile unsigned long *)0xd005a714
#define P_VDEC2_AV_SCRATCH_6                       (volatile unsigned long *)0xd005a718
#define P_VDEC2_AV_SCRATCH_7                       (volatile unsigned long *)0xd005a71c
#define P_VDEC2_AV_SCRATCH_8                       (volatile unsigned long *)0xd005a720
#define P_VDEC2_AV_SCRATCH_9                       (volatile unsigned long *)0xd005a724
#define P_VDEC2_AV_SCRATCH_A                       (volatile unsigned long *)0xd005a728
#define P_VDEC2_AV_SCRATCH_B                       (volatile unsigned long *)0xd005a72c
#define P_VDEC2_AV_SCRATCH_C                       (volatile unsigned long *)0xd005a730
#define P_VDEC2_AV_SCRATCH_D                       (volatile unsigned long *)0xd005a734
#define P_VDEC2_AV_SCRATCH_E                       (volatile unsigned long *)0xd005a738
#define P_VDEC2_AV_SCRATCH_F                       (volatile unsigned long *)0xd005a73c
#define P_VDEC2_AV_SCRATCH_G                       (volatile unsigned long *)0xd005a740
#define P_VDEC2_AV_SCRATCH_H                       (volatile unsigned long *)0xd005a744
#define P_VDEC2_AV_SCRATCH_I                       (volatile unsigned long *)0xd005a748
#define P_VDEC2_AV_SCRATCH_J                       (volatile unsigned long *)0xd005a74c
#define P_VDEC2_AV_SCRATCH_K                       (volatile unsigned long *)0xd005a750
#define P_VDEC2_AV_SCRATCH_L                       (volatile unsigned long *)0xd005a754
#define P_VDEC2_AV_SCRATCH_M                       (volatile unsigned long *)0xd005a758
#define P_VDEC2_AV_SCRATCH_N                       (volatile unsigned long *)0xd005a75c
// bit[29:24] A_brst_num_co_mb
// bit[21:16] A_id_co_mb
// bit[11:0] wrrsp_count_co_mb
#define P_VDEC2_WRRSP_CO_MB                        (volatile unsigned long *)0xd005a760
// bit[29:24] A_brst_num_dcac
// bit[21:16] A_id_dcac
// bit[11:0] wrrsp_count_dcac
#define P_VDEC2_WRRSP_DCAC                         (volatile unsigned long *)0xd005a764
//======================================
//  MC Control Register Bits
//
//======================================
// For bits, just copy the defines...don't translate to addresses
    //`define MC_RESET	    16'h0002
//======================================
//  MB Info Register Bits
//
//======================================
//======================================
//  MB Info Register Bits
//
//======================================
//========================================================================
// DBLK Register:  12'h950 - 12'h97f 
//========================================================================
#define P_VDEC2_DBLK_RST                           (volatile unsigned long *)0xd005a540
#define P_VDEC2_DBLK_CTRL                          (volatile unsigned long *)0xd005a544
#define P_VDEC2_DBLK_MB_WID_HEIGHT                 (volatile unsigned long *)0xd005a548
#define P_VDEC2_DBLK_STATUS                        (volatile unsigned long *)0xd005a54c
#define P_VDEC2_DBLK_CMD_CTRL                      (volatile unsigned long *)0xd005a550
#define P_VDEC2_DBLK_MB_XY                         (volatile unsigned long *)0xd005a554
#define P_VDEC2_DBLK_QP                            (volatile unsigned long *)0xd005a558
#define P_VDEC2_DBLK_Y_BHFILT                      (volatile unsigned long *)0xd005a55c
#define P_VDEC2_DBLK_Y_BHFILT_HIGH                 (volatile unsigned long *)0xd005a560
#define P_VDEC2_DBLK_Y_BVFILT                      (volatile unsigned long *)0xd005a564
#define P_VDEC2_DBLK_CB_BFILT                      (volatile unsigned long *)0xd005a568
#define P_VDEC2_DBLK_CR_BFILT                      (volatile unsigned long *)0xd005a56c
#define P_VDEC2_DBLK_Y_HFILT                       (volatile unsigned long *)0xd005a570
#define P_VDEC2_DBLK_Y_HFILT_HIGH                  (volatile unsigned long *)0xd005a574
#define P_VDEC2_DBLK_Y_VFILT                       (volatile unsigned long *)0xd005a578
#define P_VDEC2_DBLK_CB_FILT                       (volatile unsigned long *)0xd005a57c
#define P_VDEC2_DBLK_CR_FILT                       (volatile unsigned long *)0xd005a580
#define P_VDEC2_DBLK_BETAX_QP_SEL                  (volatile unsigned long *)0xd005a584
#define P_VDEC2_DBLK_CLIP_CTRL0                    (volatile unsigned long *)0xd005a588
#define P_VDEC2_DBLK_CLIP_CTRL1                    (volatile unsigned long *)0xd005a58c
#define P_VDEC2_DBLK_CLIP_CTRL2                    (volatile unsigned long *)0xd005a590
#define P_VDEC2_DBLK_CLIP_CTRL3                    (volatile unsigned long *)0xd005a594
#define P_VDEC2_DBLK_CLIP_CTRL4                    (volatile unsigned long *)0xd005a598
#define P_VDEC2_DBLK_CLIP_CTRL5                    (volatile unsigned long *)0xd005a59c
#define P_VDEC2_DBLK_CLIP_CTRL6                    (volatile unsigned long *)0xd005a5a0
#define P_VDEC2_DBLK_CLIP_CTRL7                    (volatile unsigned long *)0xd005a5a4
#define P_VDEC2_DBLK_CLIP_CTRL8                    (volatile unsigned long *)0xd005a5a8
#define P_VDEC2_DBLK_STATUS1                       (volatile unsigned long *)0xd005a5ac
#define P_VDEC2_DBLK_GCLK_FREE                     (volatile unsigned long *)0xd005a5b0
#define P_VDEC2_DBLK_GCLK_OFF                      (volatile unsigned long *)0xd005a5b4
#define P_VDEC2_DBLK_AVSFLAGS                      (volatile unsigned long *)0xd005a5b8
// bit 15:0
#define P_VDEC2_DBLK_CBPY                          (volatile unsigned long *)0xd005a5c0
// bit 11:8 -- deblk_cbpy_bottom
// bit 7:4 -- deblk_cbpy_left
// bit 3:0 -- deblk_cbpy_top
#define P_VDEC2_DBLK_CBPY_ADJ                      (volatile unsigned long *)0xd005a5c4
// bit 7:0 -- deblk_cbpc
#define P_VDEC2_DBLK_CBPC                          (volatile unsigned long *)0xd005a5c8
// bit 15 -- bottom_mb
// bit 14 -- left_mb
// bit 13 -- top_mb
// bit 12 -- reserved
// bit 11:8 -- deblk_cbpc_bottom
// bit 7:4 -- deblk_cbpc_left
// bit 3:0 -- deblk_cbpc_top
#define P_VDEC2_DBLK_CBPC_ADJ                      (volatile unsigned long *)0xd005a5cc
// bit 15:8 -- deblk_hmvd   -- {left_1, left_0, below_1, below_0, block3-0} 
// bit 7:0 -- deblk_vmvd    -- {top_1, top_0, below_1, below_0, block3-0} 
#define P_VDEC2_DBLK_VHMVD                         (volatile unsigned long *)0xd005a5d0
// bit 13:12 -- right_vmvd
// bit 11 -- right_above_vmvd
// bit 10 -- left_below_hmvd
// bit 9 -- disable_dblk_luma  
// bit 8 -- disable_dblk_chroma
// bit 7 -- bBelowRefDiff
// bit 6 -- bLeftRefDiff
// bit 5 -- bAboveRefDiff
// bit 4 -- reserved
// bit 3 -- s_below
// bit 2 -- s_left
// bit 1 -- s_above
// bit 0 -- s 
#define P_VDEC2_DBLK_STRONG                        (volatile unsigned long *)0xd005a5d4
// bit 14:10 -- PQUANT 
// bit 9:5 -- left_PQUANT 
// bit 4:0 -- top_PQUANT 
#define P_VDEC2_DBLK_RV8_QUANT                     (volatile unsigned long *)0xd005a5d8
#define P_VDEC2_DBLK_CBUS_HCMD2                    (volatile unsigned long *)0xd005a5dc
#define P_VDEC2_DBLK_CBUS_HCMD1                    (volatile unsigned long *)0xd005a5e0
#define P_VDEC2_DBLK_CBUS_HCMD0                    (volatile unsigned long *)0xd005a5e4
#define P_VDEC2_DBLK_VLD_HCMD2                     (volatile unsigned long *)0xd005a5e8
#define P_VDEC2_DBLK_VLD_HCMD1                     (volatile unsigned long *)0xd005a5ec
#define P_VDEC2_DBLK_VLD_HCMD0                     (volatile unsigned long *)0xd005a5f0
#define P_VDEC2_DBLK_OST_YBASE                     (volatile unsigned long *)0xd005a5f4
#define P_VDEC2_DBLK_OST_CBCRDIFF                  (volatile unsigned long *)0xd005a5f8
//13:8 dblk thread ID and token 
//5:0  dblk prearbitor burst num
#define P_VDEC2_DBLK_CTRL1                         (volatile unsigned long *)0xd005a5fc
// MCRCC_CTL1
// 31:3  <reserved[23:0]>
// 2     <cfg_field_pic>
// 1     <sw_rst>
// 0     <bypass_en>
#define P_VDEC2_MCRCC_CTL1                         (volatile unsigned long *)0xd005a600
// MCRCC_CTL2
// 31:24    <cfg_cache_anc01_c[7:0]>
// 23:16    <cfg_cache_anc01_y[7:0]>
// 15:8     <cfg_cache_anc00_c[7:0]>
// 7:0      <cfg_cache_anc00_y[7:0]>
#define P_VDEC2_MCRCC_CTL2                         (volatile unsigned long *)0xd005a604
// MCRCC_CTL3
// 31:24    <cfg_cache_anc11_c[7:0]>
// 23:16    <cfg_cache_anc11_y[7:0]>
// 15:8     <cfg_cache_anc10_c[7:0]>
// 7:0      <cfg_cache_anc10_y[7:0]>
#define P_VDEC2_MCRCC_CTL3                         (volatile unsigned long *)0xd005a608
// bit[31:10] reserved
// bit[9:0] sw_clock_gating control 
// [9] vdec clk_en for assist and cbus.
// [8] vdec clk_en for ddr
// [7] vdec clk_en for vcpu
// [6] vdec clk_en for assist
// [5] vdec clk_en for dblk
// [4] vdec clk_en for iqidct
// [3] vdec clk_en for mc
// [2] vdec clk_en for pic_dc
// [1] vdec clk_en for psc
// [0] vdec clk_en for vld
#define P_VDEC2_GCLK_EN                            (volatile unsigned long *)0xd005a60c
// [0]  Reserved 
// [1]  Reserved
// [2]  Reset assist, mdec's CBUS
// [3]  Reset mdec's VLD
// [4]  Reset mdec's VLD
// [5]  Reset mdec's VLD
// [6]  Reset mdec's IQIDCT
// [7]  Reset mdec's MC
// [8]  Reset mdec's DBLK
// [9]  Reset mdec's PIC_DC
// [10] Reset mdec's Pscale
// [11] Reset vcpu's MCPU
// [12] Reset vcpu's CCPU
// [13] Reset mmc_pre_arb
#define P_VDEC2_MDEC_SW_RESET                      (volatile unsigned long *)0xd005a610
//DBLK last address 12'h97f
//
// Closing file:  mdec_regs.h
//
//
// Reading file:  vld_regs.h
//
//========================================================================
//  VLD module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_VDEC_VLD_CBUS_BASE = 0x0c
// -----------------------------------------------
#define P_HCODEC_VLD_STATUS_CTRL                   (volatile unsigned long *)0xd0057000
//
// bit 10 -- use_old_shift_en
// bit 9 -- output_mv_not_pmv
// bit 8:5 -- force_zigzag
// bit 4 -- force_zigzag_en
// bit 3 -- disable_viff_anempty_int
// bit 2 -- disable_m2_ac_coeff_one_cycle
// bit 1 -- forced_reset  force reset pmv
// bit 0 -- mpeg_type  0:mpeg1 1: mpeg2
#define P_HCODEC_MPEG1_2_REG                       (volatile unsigned long *)0xd0057004
#define P_HCODEC_F_CODE_REG                        (volatile unsigned long *)0xd0057008
#define P_HCODEC_PIC_HEAD_INFO                     (volatile unsigned long *)0xd005700c
#define P_HCODEC_SLICE_VER_POS_PIC_TYPE            (volatile unsigned long *)0xd0057010
#define P_HCODEC_QP_VALUE_REG                      (volatile unsigned long *)0xd0057014
#define P_HCODEC_MBA_INC                           (volatile unsigned long *)0xd0057018
#define P_HCODEC_MB_MOTION_MODE                    (volatile unsigned long *)0xd005701c
//`define PACKET_BYTE_COUNT   8'h08
// bit 15 -- force_search_startcode_en
// bit 14 -- int_cpu_when_error (before do anything)
// bit 13 -- vld_error_reset
// bit 12 -- return_on_slice_header
// bit 6 -- jpeg_ff00_en 
// bit 5:0 -- vld_power_ctl
#define P_HCODEC_POWER_CTL_VLD                     (volatile unsigned long *)0xd0057020
#define P_HCODEC_MB_WIDTH                          (volatile unsigned long *)0xd0057024
#define P_HCODEC_SLICE_QP                          (volatile unsigned long *)0xd0057028
// `define MB_X_MB_Y           8'h0b   /* current MBX and MBY                  */
#define P_HCODEC_PRE_START_CODE                    (volatile unsigned long *)0xd005702c
#define P_HCODEC_SLICE_START_BYTE_01               (volatile unsigned long *)0xd0057030
#define P_HCODEC_SLICE_START_BYTE_23               (volatile unsigned long *)0xd0057034
#define P_HCODEC_RESYNC_MARKER_LENGTH              (volatile unsigned long *)0xd0057038
// bit[6:5] - frame/field info, 01 - top, 10 - bottom, 11 - frame
// bit[4:0] - buffer ID
// L0_BUFF_ID_0, L0_BUFF_ID_1, L1_BUFF_ID_0, L1_BUFF_ID_1
#define P_HCODEC_DECODER_BUFFER_INFO               (volatile unsigned long *)0xd005703c
#define P_HCODEC_FST_FOR_MV_X                      (volatile unsigned long *)0xd0057040
#define P_HCODEC_FST_FOR_MV_Y                      (volatile unsigned long *)0xd0057044
#define P_HCODEC_SCD_FOR_MV_X                      (volatile unsigned long *)0xd0057048
#define P_HCODEC_SCD_FOR_MV_Y                      (volatile unsigned long *)0xd005704c
#define P_HCODEC_FST_BAK_MV_X                      (volatile unsigned long *)0xd0057050
#define P_HCODEC_FST_BAK_MV_Y                      (volatile unsigned long *)0xd0057054
#define P_HCODEC_SCD_BAK_MV_X                      (volatile unsigned long *)0xd0057058
#define P_HCODEC_SCD_BAK_MV_Y                      (volatile unsigned long *)0xd005705c
// Bit 7:4 -- read_buffer_interlace  0-progressive, 1-interlace, used in VC1
// bit 3 -- reserved
// bit 2 -- weighting_prediction
// bit 1 -- mb_weighting_flag
// bit 0 -- slice_weighting_flag 
#define P_HCODEC_VLD_DECODE_CONTROL                (volatile unsigned long *)0xd0057060
#define P_HCODEC_VLD_REVERVED_19                   (volatile unsigned long *)0xd0057064
#define P_HCODEC_VIFF_BIT_CNT                      (volatile unsigned long *)0xd0057068
#define P_HCODEC_BYTE_ALIGN_PEAK_HI                (volatile unsigned long *)0xd005706c
#define P_HCODEC_BYTE_ALIGN_PEAK_LO                (volatile unsigned long *)0xd0057070
#define P_HCODEC_NEXT_ALIGN_PEAK                   (volatile unsigned long *)0xd0057074
// bit 19    : vc1_inv_intra_co_mb_ref_rd
// bit 18    : vc1_inv_co_mb_ref_rd
// bit 17    : vc1_inv_intra_co_mb_ref_wr
// bit 16    : vc1_inv_co_mb_ref_wr
// bit 15    : reserved
// bit 14    : avs_drop_enable
// bit 13:12 : avs_drop_ptr
// bit 11:8  : avs_demu_ctl_reg
// bit 7 : avs_enable
// bit 6 : disable_dblk_hcmd
// bit 5 : disable_mc_hcmd
// bit 4 : first_mode3_set enable
// bit 3 : first_mode3
// bit 2:1 : vc1_profile  0-SP, 1-MP, 2-reserved, 3-AP
// bit 0   : vc1_enable
#define P_HCODEC_VC1_CONTROL_REG                   (volatile unsigned long *)0xd0057078
#define P_HCODEC_PMV1_X                            (volatile unsigned long *)0xd0057080
#define P_HCODEC_PMV1_Y                            (volatile unsigned long *)0xd0057084
#define P_HCODEC_PMV2_X                            (volatile unsigned long *)0xd0057088
#define P_HCODEC_PMV2_Y                            (volatile unsigned long *)0xd005708c
#define P_HCODEC_PMV3_X                            (volatile unsigned long *)0xd0057090
#define P_HCODEC_PMV3_Y                            (volatile unsigned long *)0xd0057094
#define P_HCODEC_PMV4_X                            (volatile unsigned long *)0xd0057098
#define P_HCODEC_PMV4_Y                            (volatile unsigned long *)0xd005709c
// Can't use the same address for different defines
// Therefore, create a single define that covers both
// Only appears to be used in micro-code since the VLD hardware is 
// hard coded.
// `define M4_TABLE_SELECT     8'h28  // Does this exist in HW ? Added from register_mp2.h
// `define M4_TABLE_OUTPUT     8'h28  // Does this exist in HW ? Added from register_mp2.h
#define P_HCODEC_M4_TABLE_SELECT                   (volatile unsigned long *)0xd00570a0
#define P_HCODEC_M4_CONTROL_REG                    (volatile unsigned long *)0xd00570a4
#define P_HCODEC_BLOCK_NUM                         (volatile unsigned long *)0xd00570a8
#define P_HCODEC_PATTERN_CODE                      (volatile unsigned long *)0xd00570ac
#define P_HCODEC_MB_INFO                           (volatile unsigned long *)0xd00570b0
#define P_HCODEC_VLD_DC_PRED                       (volatile unsigned long *)0xd00570b4
#define P_HCODEC_VLD_ERROR_MASK                    (volatile unsigned long *)0xd00570b8
#define P_HCODEC_VLD_DC_PRED_C                     (volatile unsigned long *)0xd00570bc
#define P_HCODEC_LAST_SLICE_MV_ADDR                (volatile unsigned long *)0xd00570c0
#define P_HCODEC_LAST_MVX                          (volatile unsigned long *)0xd00570c4
#define P_HCODEC_LAST_MVY                          (volatile unsigned long *)0xd00570c8
#define P_HCODEC_VLD_C38                           (volatile unsigned long *)0xd00570e0
#define P_HCODEC_VLD_C39                           (volatile unsigned long *)0xd00570e4
#define P_HCODEC_VLD_STATUS                        (volatile unsigned long *)0xd00570e8
#define P_HCODEC_VLD_SHIFT_STATUS                  (volatile unsigned long *)0xd00570ec
// `define VLD_SHIFT_INFO      8'h3b  // Does this exist in HW ? used in $ucode/mpeg4
#define P_HCODEC_VOFF_STATUS                       (volatile unsigned long *)0xd00570f0
#define P_HCODEC_VLD_C3D                           (volatile unsigned long *)0xd00570f4
#define P_HCODEC_VLD_DBG_INDEX                     (volatile unsigned long *)0xd00570f8
// vld_buff_info -- (index == 0) 
// Bit[7:6]  mv_UR_ready_cnt;
// Bit[5]  vld_wr_idx
// Bit[4]  iq_rd_idx
// Bit[3]  vld_vi_block_rdy_1
// Bit[2]  vld_vi_block_rdy_2
// Bit[1]  voff_empty_1
// Bit[0]  voff_empty_2
// cabac_buff_info_0 -- (index == 1) 
// Bit[31] shift_data_ready
// Bit[30:29] Reserved
// Bit[28:24] cabac_buffer_ptr
// Bit[23:0] cabac_buffer
// cabac_buff_info_1 -- (index == 2) 
// Bit[31:29] Reserved
// Bit[28:20] Drange
// Bit[19:16] bin_count_4
// Bit[15:13] Reserved
// Bit[12:6] context_mem_do
// Bit[5:3] coeff_state
// Bit[2:0] mvd_state
// h264_mv_present -- (index == 3) 
// Bit[31:16] mv_present_l0
// Bit[15:0] mv_present_l1
// h264_mv_cal_info_0 -- (index == 4) 
// [31:28] mv_cal_state
// [27:24] direct_spatial_cnt
// Bit[23:21] Reserved
// Bit[20] mv_UR_ready_for_mv_cal
// Bit[19] co_mb_mem_ready_for_mv_cal
// Bit[18] mc_dblk_cmd_if_busy
// Bit[17] h264_co_mb_wr_busy
// Bit[16] H264_cbp_blk_ready
// Bit[15] mc_hcmd_rrdy
// Bit[14] mc_hcmd_srdy
// Bit[13] mc_cmd_if_ready
// Bit[12] mc_hcmd_mv_available
// Bit[11:8] mc_cmd_if_state
// Bit[7] dblk_hcmd_rrdy
// Bit[6] dblk_hcmd_srdy
// Bit[5] dblk_cmd_if_ready
// Bit[4] dblk_hcmd_mv_available
// Bit[3:0] dblk_cmd_if_state
// h264_mv_cal_info_1 -- (index == 5) 
//  Bit[31:29] Reserved
//  Bit[28:24] total_mvd_num_l0
//  Bit[23:21] Reserved
//  Bit[20:16] mv_cal_ptr_l0
//  Bit[15:13] Reserved
//  Bit[12:8] mc_hcmd_ptr_l0
//  Bit[7:5] Reserved
//  Bit[4:0] dblk_hcmd_ptr_l0
// h264_mv_cal_info_2 -- (index == 6) 
//  Bit[31:29] Reserved
//  Bit[28:24] total_mvd_num_l1
//  Bit[23:21] Reserved
//  Bit[20:16] mv_cal_ptr_l1
//  Bit[15:13] Reserved
//  Bit[12:8] mc_hcmd_ptr_l1
//  Bit[7:5] Reserved
//  Bit[4:0] dblk_hcmd_ptr_l1
// h264_co_mb_info -- (index == 7)
// Bit[31:26] Reserved
// Bit[25] mv_scale_cal_busy
// Bit[24:20] co_mv_count
// Bit[19:16] co_mv_process_state
// Bit[15] h264_co_mb_rd_busy
// Bit[15] h264_co_mb_rd_ready
// Bit[13:12] co_mv_transfer_block_cnt
// Bit[11:8] co_mv_transfer_ptr
// Bit[7] co_mv_POC_l1_busy
// Bit[6] h264_weight_scale_cal_en
// Bit[5] weight_cal_busy
// Bit[4] weight_cal_not_finished
// Bit[3:0] weight_process_state
#define P_HCODEC_VLD_DBG_DATA                      (volatile unsigned long *)0xd00570fc
// --------------------------------------------
// VIFIFO DDR Interface
// --------------------------------------------
// The VIFIFO start pointer into DDR memory is a 32-bit number
// The Start pointer will automatically be truncated to land on 
// an 8-byte boundary.  That is, bits [2:0] = 0;
#define P_HCODEC_VLD_MEM_VIFIFO_START_PTR          (volatile unsigned long *)0xd0057100
// The current pointer points so some location between the START and END 
// pointers.  The current pointer is a BYTE pointer.  That is, you can 
// point to any BYTE address within the START/END range
#define P_HCODEC_VLD_MEM_VIFIFO_CURR_PTR           (volatile unsigned long *)0xd0057104
#define P_HCODEC_VLD_MEM_VIFIFO_END_PTR            (volatile unsigned long *)0xd0057108
#define P_HCODEC_VLD_MEM_VIFIFO_BYTES_AVAIL        (volatile unsigned long *)0xd005710c
// VIFIFO FIFO Control
// bit  [31:24] viff_empty_int_enable_cpu[7:0] 
// bit  [23:16] viff_empty_int_enable_amrisc[7:0] 
//   -bit 23 Video BUFFER < 0x400 Bytes
//   -bit 22 Video BUFFER < 0x200 Bytes
//   -bit 21 Video BUFFER < 0x100 Bytes
//   -bit 20 Video BUFFER < 0x80 Bytes
//   -bit 19 Video BUFFER < 0x40 Bytes
//   -bit 18 Video BUFFER < 0x20 Bytes
//   -bit 17 vififo  < 16 double words
//   -bit 16 vififo  < 8 double words
// bit  [15:13] unused
// bit  [12]    A_urgent
// bit  [11]    transfer_length 0 - 32x64 Bits per request, 1 - 16x64 Bits per request
// bit  [10]    use_level       Set this bit to 1 to enable filling of the FIFO controlled by the buffer
//                              level control.  If this bit is 0, then use bit[1] to control the enabling of filling
// bit  [9]     Data Ready.     This bit is set when data can be popped
// bit  [8]     fill busy       This bit will be high when we're fetching data from the DDR memory
//                              To reset this module, set cntl_enable = 0, and then wait for busy = 0. 
//                              After that you can pulse cntl_init to start over
// bit  [7]     init_with_cntl_init
// bit  [6]     reserved
// bits [5:3]   endian:         see $lib/rtl/ddr_endian.v
// bit  [2]     cntl_empty_en   Set to 1 to enable reading the DDR memory FIFO
//                              Set cntl_empty_en = cntl_fill_en = 0 when pulsing cntl_init
// bit  [1]     cntl_fill_en    Set to 1 to enable reading data from DDR memory
// bit  [0]     cntl_init:      After setting the read pointers, sizes, channel masks
//                              and read masks, set this bit to 1 and then to 0
//                              NOTE:  You don't need to pulse cntl_init if only the start address is
//                              being changed
#define P_HCODEC_VLD_MEM_VIFIFO_CONTROL            (volatile unsigned long *)0xd0057110
// --------------------------------------------
// VIFIFO Buffer Level Manager
// --------------------------------------------
#define P_HCODEC_VLD_MEM_VIFIFO_WP                 (volatile unsigned long *)0xd0057114
#define P_HCODEC_VLD_MEM_VIFIFO_RP                 (volatile unsigned long *)0xd0057118
#define P_HCODEC_VLD_MEM_VIFIFO_LEVEL              (volatile unsigned long *)0xd005711c
//
// bit  [8]     use_parser_video2_wp
// bit  [7]     vbuf2_out_manual
// bit  [6]     vbuf_out_manual
// bit  [5]     empty (ReadOnly)
// bit  [4]     full (ReadOnly)
// bit  [3:2]   reserved
// bit  [1]     manual mode     Set to 1 for manual write pointer mode
// bit  [0]     Init            Set high then low after everything has been initialized
#define P_HCODEC_VLD_MEM_VIFIFO_BUF_CNTL           (volatile unsigned long *)0xd0057120
// bit 31:16 -- drop_bytes
// bit 15:14 -- drop_status (Read-Only)
// bit 13:12 -- sync_match_position (Read-Only)
// bit 11:6 -- reserved
// bit 5:4 -- TIME_STAMP_NUMBER, 0-32bits, 1-64bits, 2-96bits, 3-128bits 
// bit 3 -- stamp_soft_reset
// bit 2 -- TIME_STAMP_length_enable
// bit 1 -- TIME_STAMP_sync64_enable
// bit 0 -- TIME_STAMP_enable
#define P_HCODEC_VLD_TIME_STAMP_CNTL               (volatile unsigned long *)0xd0057124
// bit 31:0 -- TIME_STAMP_SYNC_CODE_0
#define P_HCODEC_VLD_TIME_STAMP_SYNC_0             (volatile unsigned long *)0xd0057128
// bit 31:0 -- TIME_STAMP_SYNC_CODE_1 
#define P_HCODEC_VLD_TIME_STAMP_SYNC_1             (volatile unsigned long *)0xd005712c
// bit 31:0 TIME_STAMP_0
#define P_HCODEC_VLD_TIME_STAMP_0                  (volatile unsigned long *)0xd0057130
// bit 31:0 TIME_STAMP_1
#define P_HCODEC_VLD_TIME_STAMP_1                  (volatile unsigned long *)0xd0057134
// bit 31:0 TIME_STAMP_2
#define P_HCODEC_VLD_TIME_STAMP_2                  (volatile unsigned long *)0xd0057138
// bit 31:0 TIME_STAMP_3
#define P_HCODEC_VLD_TIME_STAMP_3                  (volatile unsigned long *)0xd005713c
// bit 31:0 TIME_STAMP_LENGTH
#define P_HCODEC_VLD_TIME_STAMP_LENGTH             (volatile unsigned long *)0xd0057140
// bit 15:0 vififo_rd_count
#define P_HCODEC_VLD_MEM_VIFIFO_WRAP_COUNT         (volatile unsigned long *)0xd0057144
// bit 29:24 A_brst_num
// bit 21:16 A_id
// bit 15:0 level_hold 
#define P_HCODEC_VLD_MEM_VIFIFO_MEM_CTL            (volatile unsigned long *)0xd0057148
#define P_HCODEC_VLD_MEM_VBUF_RD_PTR               (volatile unsigned long *)0xd005714c
#define P_HCODEC_VLD_MEM_VBUF2_RD_PTR              (volatile unsigned long *)0xd0057150
#define P_HCODEC_VLD_MEM_SWAP_ADDR                 (volatile unsigned long *)0xd0057154
// bit[23:16] - swap_d_count (Read Only)
// bit[15:8]  - swap_a_count (Read Only)
// bit [7] - swap busy (Read Only)
// bit [6:2] - reserved
// bit [1] - 1 - STORE to Memory, 0 - LOAD from Memory
// bit [0] - swap active
#define P_HCODEC_VLD_MEM_SWAP_CTL                  (volatile unsigned long *)0xd0057158
//
// Closing file:  vld_regs.h
//
//
// Reading file:  vld_regs.h
//
//========================================================================
//  VLD module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_VDEC_VLD_CBUS_BASE = 0x0c
// -----------------------------------------------
#define P_VDEC2_VLD_STATUS_CTRL                    (volatile unsigned long *)0xd005b000
//
// bit 10 -- use_old_shift_en
// bit 9 -- output_mv_not_pmv
// bit 8:5 -- force_zigzag
// bit 4 -- force_zigzag_en
// bit 3 -- disable_viff_anempty_int
// bit 2 -- disable_m2_ac_coeff_one_cycle
// bit 1 -- forced_reset  force reset pmv
// bit 0 -- mpeg_type  0:mpeg1 1: mpeg2
#define P_VDEC2_MPEG1_2_REG                        (volatile unsigned long *)0xd005b004
#define P_VDEC2_F_CODE_REG                         (volatile unsigned long *)0xd005b008
#define P_VDEC2_PIC_HEAD_INFO                      (volatile unsigned long *)0xd005b00c
#define P_VDEC2_SLICE_VER_POS_PIC_TYPE             (volatile unsigned long *)0xd005b010
#define P_VDEC2_QP_VALUE_REG                       (volatile unsigned long *)0xd005b014
#define P_VDEC2_MBA_INC                            (volatile unsigned long *)0xd005b018
#define P_VDEC2_MB_MOTION_MODE                     (volatile unsigned long *)0xd005b01c
//`define PACKET_BYTE_COUNT   8'h08
// bit 15 -- force_search_startcode_en
// bit 14 -- int_cpu_when_error (before do anything)
// bit 13 -- vld_error_reset
// bit 12 -- return_on_slice_header
// bit 6 -- jpeg_ff00_en 
// bit 5:0 -- vld_power_ctl
#define P_VDEC2_POWER_CTL_VLD                      (volatile unsigned long *)0xd005b020
#define P_VDEC2_MB_WIDTH                           (volatile unsigned long *)0xd005b024
#define P_VDEC2_SLICE_QP                           (volatile unsigned long *)0xd005b028
// `define MB_X_MB_Y           8'h0b   /* current MBX and MBY                  */
#define P_VDEC2_PRE_START_CODE                     (volatile unsigned long *)0xd005b02c
#define P_VDEC2_SLICE_START_BYTE_01                (volatile unsigned long *)0xd005b030
#define P_VDEC2_SLICE_START_BYTE_23                (volatile unsigned long *)0xd005b034
#define P_VDEC2_RESYNC_MARKER_LENGTH               (volatile unsigned long *)0xd005b038
// bit[6:5] - frame/field info, 01 - top, 10 - bottom, 11 - frame
// bit[4:0] - buffer ID
// L0_BUFF_ID_0, L0_BUFF_ID_1, L1_BUFF_ID_0, L1_BUFF_ID_1
#define P_VDEC2_DECODER_BUFFER_INFO                (volatile unsigned long *)0xd005b03c
#define P_VDEC2_FST_FOR_MV_X                       (volatile unsigned long *)0xd005b040
#define P_VDEC2_FST_FOR_MV_Y                       (volatile unsigned long *)0xd005b044
#define P_VDEC2_SCD_FOR_MV_X                       (volatile unsigned long *)0xd005b048
#define P_VDEC2_SCD_FOR_MV_Y                       (volatile unsigned long *)0xd005b04c
#define P_VDEC2_FST_BAK_MV_X                       (volatile unsigned long *)0xd005b050
#define P_VDEC2_FST_BAK_MV_Y                       (volatile unsigned long *)0xd005b054
#define P_VDEC2_SCD_BAK_MV_X                       (volatile unsigned long *)0xd005b058
#define P_VDEC2_SCD_BAK_MV_Y                       (volatile unsigned long *)0xd005b05c
// Bit 7:4 -- read_buffer_interlace  0-progressive, 1-interlace, used in VC1
// bit 3 -- reserved
// bit 2 -- weighting_prediction
// bit 1 -- mb_weighting_flag
// bit 0 -- slice_weighting_flag 
#define P_VDEC2_VLD_DECODE_CONTROL                 (volatile unsigned long *)0xd005b060
#define P_VDEC2_VLD_REVERVED_19                    (volatile unsigned long *)0xd005b064
#define P_VDEC2_VIFF_BIT_CNT                       (volatile unsigned long *)0xd005b068
#define P_VDEC2_BYTE_ALIGN_PEAK_HI                 (volatile unsigned long *)0xd005b06c
#define P_VDEC2_BYTE_ALIGN_PEAK_LO                 (volatile unsigned long *)0xd005b070
#define P_VDEC2_NEXT_ALIGN_PEAK                    (volatile unsigned long *)0xd005b074
// bit 19    : vc1_inv_intra_co_mb_ref_rd
// bit 18    : vc1_inv_co_mb_ref_rd
// bit 17    : vc1_inv_intra_co_mb_ref_wr
// bit 16    : vc1_inv_co_mb_ref_wr
// bit 15    : reserved
// bit 14    : avs_drop_enable
// bit 13:12 : avs_drop_ptr
// bit 11:8  : avs_demu_ctl_reg
// bit 7 : avs_enable
// bit 6 : disable_dblk_hcmd
// bit 5 : disable_mc_hcmd
// bit 4 : first_mode3_set enable
// bit 3 : first_mode3
// bit 2:1 : vc1_profile  0-SP, 1-MP, 2-reserved, 3-AP
// bit 0   : vc1_enable
#define P_VDEC2_VC1_CONTROL_REG                    (volatile unsigned long *)0xd005b078
#define P_VDEC2_PMV1_X                             (volatile unsigned long *)0xd005b080
#define P_VDEC2_PMV1_Y                             (volatile unsigned long *)0xd005b084
#define P_VDEC2_PMV2_X                             (volatile unsigned long *)0xd005b088
#define P_VDEC2_PMV2_Y                             (volatile unsigned long *)0xd005b08c
#define P_VDEC2_PMV3_X                             (volatile unsigned long *)0xd005b090
#define P_VDEC2_PMV3_Y                             (volatile unsigned long *)0xd005b094
#define P_VDEC2_PMV4_X                             (volatile unsigned long *)0xd005b098
#define P_VDEC2_PMV4_Y                             (volatile unsigned long *)0xd005b09c
// Can't use the same address for different defines
// Therefore, create a single define that covers both
// Only appears to be used in micro-code since the VLD hardware is 
// hard coded.
// `define M4_TABLE_SELECT     8'h28  // Does this exist in HW ? Added from register_mp2.h
// `define M4_TABLE_OUTPUT     8'h28  // Does this exist in HW ? Added from register_mp2.h
#define P_VDEC2_M4_TABLE_SELECT                    (volatile unsigned long *)0xd005b0a0
#define P_VDEC2_M4_CONTROL_REG                     (volatile unsigned long *)0xd005b0a4
#define P_VDEC2_BLOCK_NUM                          (volatile unsigned long *)0xd005b0a8
#define P_VDEC2_PATTERN_CODE                       (volatile unsigned long *)0xd005b0ac
#define P_VDEC2_MB_INFO                            (volatile unsigned long *)0xd005b0b0
#define P_VDEC2_VLD_DC_PRED                        (volatile unsigned long *)0xd005b0b4
#define P_VDEC2_VLD_ERROR_MASK                     (volatile unsigned long *)0xd005b0b8
#define P_VDEC2_VLD_DC_PRED_C                      (volatile unsigned long *)0xd005b0bc
#define P_VDEC2_LAST_SLICE_MV_ADDR                 (volatile unsigned long *)0xd005b0c0
#define P_VDEC2_LAST_MVX                           (volatile unsigned long *)0xd005b0c4
#define P_VDEC2_LAST_MVY                           (volatile unsigned long *)0xd005b0c8
#define P_VDEC2_VLD_C38                            (volatile unsigned long *)0xd005b0e0
#define P_VDEC2_VLD_C39                            (volatile unsigned long *)0xd005b0e4
#define P_VDEC2_VLD_STATUS                         (volatile unsigned long *)0xd005b0e8
#define P_VDEC2_VLD_SHIFT_STATUS                   (volatile unsigned long *)0xd005b0ec
// `define VLD_SHIFT_INFO      8'h3b  // Does this exist in HW ? used in $ucode/mpeg4
#define P_VDEC2_VOFF_STATUS                        (volatile unsigned long *)0xd005b0f0
#define P_VDEC2_VLD_C3D                            (volatile unsigned long *)0xd005b0f4
#define P_VDEC2_VLD_DBG_INDEX                      (volatile unsigned long *)0xd005b0f8
// vld_buff_info -- (index == 0) 
// Bit[7:6]  mv_UR_ready_cnt;
// Bit[5]  vld_wr_idx
// Bit[4]  iq_rd_idx
// Bit[3]  vld_vi_block_rdy_1
// Bit[2]  vld_vi_block_rdy_2
// Bit[1]  voff_empty_1
// Bit[0]  voff_empty_2
// cabac_buff_info_0 -- (index == 1) 
// Bit[31] shift_data_ready
// Bit[30:29] Reserved
// Bit[28:24] cabac_buffer_ptr
// Bit[23:0] cabac_buffer
// cabac_buff_info_1 -- (index == 2) 
// Bit[31:29] Reserved
// Bit[28:20] Drange
// Bit[19:16] bin_count_4
// Bit[15:13] Reserved
// Bit[12:6] context_mem_do
// Bit[5:3] coeff_state
// Bit[2:0] mvd_state
// h264_mv_present -- (index == 3) 
// Bit[31:16] mv_present_l0
// Bit[15:0] mv_present_l1
// h264_mv_cal_info_0 -- (index == 4) 
// [31:28] mv_cal_state
// [27:24] direct_spatial_cnt
// Bit[23:21] Reserved
// Bit[20] mv_UR_ready_for_mv_cal
// Bit[19] co_mb_mem_ready_for_mv_cal
// Bit[18] mc_dblk_cmd_if_busy
// Bit[17] h264_co_mb_wr_busy
// Bit[16] H264_cbp_blk_ready
// Bit[15] mc_hcmd_rrdy
// Bit[14] mc_hcmd_srdy
// Bit[13] mc_cmd_if_ready
// Bit[12] mc_hcmd_mv_available
// Bit[11:8] mc_cmd_if_state
// Bit[7] dblk_hcmd_rrdy
// Bit[6] dblk_hcmd_srdy
// Bit[5] dblk_cmd_if_ready
// Bit[4] dblk_hcmd_mv_available
// Bit[3:0] dblk_cmd_if_state
// h264_mv_cal_info_1 -- (index == 5) 
//  Bit[31:29] Reserved
//  Bit[28:24] total_mvd_num_l0
//  Bit[23:21] Reserved
//  Bit[20:16] mv_cal_ptr_l0
//  Bit[15:13] Reserved
//  Bit[12:8] mc_hcmd_ptr_l0
//  Bit[7:5] Reserved
//  Bit[4:0] dblk_hcmd_ptr_l0
// h264_mv_cal_info_2 -- (index == 6) 
//  Bit[31:29] Reserved
//  Bit[28:24] total_mvd_num_l1
//  Bit[23:21] Reserved
//  Bit[20:16] mv_cal_ptr_l1
//  Bit[15:13] Reserved
//  Bit[12:8] mc_hcmd_ptr_l1
//  Bit[7:5] Reserved
//  Bit[4:0] dblk_hcmd_ptr_l1
// h264_co_mb_info -- (index == 7)
// Bit[31:26] Reserved
// Bit[25] mv_scale_cal_busy
// Bit[24:20] co_mv_count
// Bit[19:16] co_mv_process_state
// Bit[15] h264_co_mb_rd_busy
// Bit[15] h264_co_mb_rd_ready
// Bit[13:12] co_mv_transfer_block_cnt
// Bit[11:8] co_mv_transfer_ptr
// Bit[7] co_mv_POC_l1_busy
// Bit[6] h264_weight_scale_cal_en
// Bit[5] weight_cal_busy
// Bit[4] weight_cal_not_finished
// Bit[3:0] weight_process_state
#define P_VDEC2_VLD_DBG_DATA                       (volatile unsigned long *)0xd005b0fc
// --------------------------------------------
// VIFIFO DDR Interface
// --------------------------------------------
// The VIFIFO start pointer into DDR memory is a 32-bit number
// The Start pointer will automatically be truncated to land on 
// an 8-byte boundary.  That is, bits [2:0] = 0;
#define P_VDEC2_VLD_MEM_VIFIFO_START_PTR           (volatile unsigned long *)0xd005b100
// The current pointer points so some location between the START and END 
// pointers.  The current pointer is a BYTE pointer.  That is, you can 
// point to any BYTE address within the START/END range
#define P_VDEC2_VLD_MEM_VIFIFO_CURR_PTR            (volatile unsigned long *)0xd005b104
#define P_VDEC2_VLD_MEM_VIFIFO_END_PTR             (volatile unsigned long *)0xd005b108
#define P_VDEC2_VLD_MEM_VIFIFO_BYTES_AVAIL         (volatile unsigned long *)0xd005b10c
// VIFIFO FIFO Control
// bit  [31:24] viff_empty_int_enable_cpu[7:0] 
// bit  [23:16] viff_empty_int_enable_amrisc[7:0] 
//   -bit 23 Video BUFFER < 0x400 Bytes
//   -bit 22 Video BUFFER < 0x200 Bytes
//   -bit 21 Video BUFFER < 0x100 Bytes
//   -bit 20 Video BUFFER < 0x80 Bytes
//   -bit 19 Video BUFFER < 0x40 Bytes
//   -bit 18 Video BUFFER < 0x20 Bytes
//   -bit 17 vififo  < 16 double words
//   -bit 16 vififo  < 8 double words
// bit  [15:13] unused
// bit  [12]    A_urgent
// bit  [11]    transfer_length 0 - 32x64 Bits per request, 1 - 16x64 Bits per request
// bit  [10]    use_level       Set this bit to 1 to enable filling of the FIFO controlled by the buffer
//                              level control.  If this bit is 0, then use bit[1] to control the enabling of filling
// bit  [9]     Data Ready.     This bit is set when data can be popped
// bit  [8]     fill busy       This bit will be high when we're fetching data from the DDR memory
//                              To reset this module, set cntl_enable = 0, and then wait for busy = 0. 
//                              After that you can pulse cntl_init to start over
// bit  [7]     init_with_cntl_init
// bit  [6]     reserved
// bits [5:3]   endian:         see $lib/rtl/ddr_endian.v
// bit  [2]     cntl_empty_en   Set to 1 to enable reading the DDR memory FIFO
//                              Set cntl_empty_en = cntl_fill_en = 0 when pulsing cntl_init
// bit  [1]     cntl_fill_en    Set to 1 to enable reading data from DDR memory
// bit  [0]     cntl_init:      After setting the read pointers, sizes, channel masks
//                              and read masks, set this bit to 1 and then to 0
//                              NOTE:  You don't need to pulse cntl_init if only the start address is
//                              being changed
#define P_VDEC2_VLD_MEM_VIFIFO_CONTROL             (volatile unsigned long *)0xd005b110
// --------------------------------------------
// VIFIFO Buffer Level Manager
// --------------------------------------------
#define P_VDEC2_VLD_MEM_VIFIFO_WP                  (volatile unsigned long *)0xd005b114
#define P_VDEC2_VLD_MEM_VIFIFO_RP                  (volatile unsigned long *)0xd005b118
#define P_VDEC2_VLD_MEM_VIFIFO_LEVEL               (volatile unsigned long *)0xd005b11c
//
// bit  [8]     use_parser_video2_wp
// bit  [7]     vbuf2_out_manual
// bit  [6]     vbuf_out_manual
// bit  [5]     empty (ReadOnly)
// bit  [4]     full (ReadOnly)
// bit  [3:2]   reserved
// bit  [1]     manual mode     Set to 1 for manual write pointer mode
// bit  [0]     Init            Set high then low after everything has been initialized
#define P_VDEC2_VLD_MEM_VIFIFO_BUF_CNTL            (volatile unsigned long *)0xd005b120
// bit 31:16 -- drop_bytes
// bit 15:14 -- drop_status (Read-Only)
// bit 13:12 -- sync_match_position (Read-Only)
// bit 11:6 -- reserved
// bit 5:4 -- TIME_STAMP_NUMBER, 0-32bits, 1-64bits, 2-96bits, 3-128bits 
// bit 3 -- stamp_soft_reset
// bit 2 -- TIME_STAMP_length_enable
// bit 1 -- TIME_STAMP_sync64_enable
// bit 0 -- TIME_STAMP_enable
#define P_VDEC2_VLD_TIME_STAMP_CNTL                (volatile unsigned long *)0xd005b124
// bit 31:0 -- TIME_STAMP_SYNC_CODE_0
#define P_VDEC2_VLD_TIME_STAMP_SYNC_0              (volatile unsigned long *)0xd005b128
// bit 31:0 -- TIME_STAMP_SYNC_CODE_1 
#define P_VDEC2_VLD_TIME_STAMP_SYNC_1              (volatile unsigned long *)0xd005b12c
// bit 31:0 TIME_STAMP_0
#define P_VDEC2_VLD_TIME_STAMP_0                   (volatile unsigned long *)0xd005b130
// bit 31:0 TIME_STAMP_1
#define P_VDEC2_VLD_TIME_STAMP_1                   (volatile unsigned long *)0xd005b134
// bit 31:0 TIME_STAMP_2
#define P_VDEC2_VLD_TIME_STAMP_2                   (volatile unsigned long *)0xd005b138
// bit 31:0 TIME_STAMP_3
#define P_VDEC2_VLD_TIME_STAMP_3                   (volatile unsigned long *)0xd005b13c
// bit 31:0 TIME_STAMP_LENGTH
#define P_VDEC2_VLD_TIME_STAMP_LENGTH              (volatile unsigned long *)0xd005b140
// bit 15:0 vififo_rd_count
#define P_VDEC2_VLD_MEM_VIFIFO_WRAP_COUNT          (volatile unsigned long *)0xd005b144
// bit 29:24 A_brst_num
// bit 21:16 A_id
// bit 15:0 level_hold 
#define P_VDEC2_VLD_MEM_VIFIFO_MEM_CTL             (volatile unsigned long *)0xd005b148
#define P_VDEC2_VLD_MEM_VBUF_RD_PTR                (volatile unsigned long *)0xd005b14c
#define P_VDEC2_VLD_MEM_VBUF2_RD_PTR               (volatile unsigned long *)0xd005b150
#define P_VDEC2_VLD_MEM_SWAP_ADDR                  (volatile unsigned long *)0xd005b154
// bit[23:16] - swap_d_count (Read Only)
// bit[15:8]  - swap_a_count (Read Only)
// bit [7] - swap busy (Read Only)
// bit [6:2] - reserved
// bit [1] - 1 - STORE to Memory, 0 - LOAD from Memory
// bit [0] - swap active
#define P_VDEC2_VLD_MEM_SWAP_CTL                   (volatile unsigned long *)0xd005b158
//
// Closing file:  vld_regs.h
//
//
// Reading file:  iqidct_regs.h
//
//========================================================================
//  IQ/IDCT module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_VDEC_IQIDCT_CBUS_BASE = 0x0e
// -----------------------------------------------
#define P_HCODEC_VCOP_CTRL_REG                     (volatile unsigned long *)0xd0057800
#define P_HCODEC_QP_CTRL_REG                       (volatile unsigned long *)0xd0057804
#define P_HCODEC_INTRA_QUANT_MATRIX                (volatile unsigned long *)0xd0057808
#define P_HCODEC_NON_I_QUANT_MATRIX                (volatile unsigned long *)0xd005780c
#define P_HCODEC_DC_SCALER                         (volatile unsigned long *)0xd0057810
#define P_HCODEC_DC_AC_CTRL                        (volatile unsigned long *)0xd0057814
// `define RV_AI_CTRL          8'h05  // ONLY for $ucode/real/amrisc/rv.s reg value from apollo
#define P_HCODEC_DC_AC_SCALE_MUL                   (volatile unsigned long *)0xd0057818
#define P_HCODEC_DC_AC_SCALE_DIV                   (volatile unsigned long *)0xd005781c
// `define DC_AC_SCALE_RESULT  8'h06
// `define RESERVED_E07        8'h07
#define P_HCODEC_POWER_CTL_IQIDCT                  (volatile unsigned long *)0xd0057820
#define P_HCODEC_RV_AI_Y_X                         (volatile unsigned long *)0xd0057824
#define P_HCODEC_RV_AI_U_X                         (volatile unsigned long *)0xd0057828
#define P_HCODEC_RV_AI_V_X                         (volatile unsigned long *)0xd005782c
// bit 15:0 will count up when rv_ai_mb finished when non zero
// and rv_ai_mb_finished_int will be generate when this is not zero
#define P_HCODEC_RV_AI_MB_COUNT                    (volatile unsigned long *)0xd0057830
// For H264 I in PB picture Use -- dma type : h264_next_intra_dma
#define P_HCODEC_NEXT_INTRA_DMA_ADDRESS            (volatile unsigned long *)0xd0057834
// Bit 0 -- constrained_intra_pred_flag for H264
#define P_HCODEC_IQIDCT_CONTROL                    (volatile unsigned long *)0xd0057838
// Bit[31:19] Reserved
// Bit[18] iq_waiting
// Bit[17] iq_om_wr_idx
// Bit[16] iq_om_rd_idx
// Bit[15] iq_om_busy
// Bit[14] iq_om_2_busy 
// Bit[13] idx_fifo_0
// Bit[12] idx_fifo_1
// Bit[11] idx_fifo_2
// Bit[10] idx_fifo_3
// Bit[9] idx_fifo_4
// Bit[8] idx_fifo_5
// Bit[7] idx_fifo_6
// Bit[6] idx_fifo_7
// Bit[5:3] idx_fifo_wp
// Bit[2:0] idx_fifo_rp
#define P_HCODEC_IQIDCT_DEBUG_INFO_0               (volatile unsigned long *)0xd005783c
// For RTL Simulation Only
#define P_HCODEC_DEBLK_CMD                         (volatile unsigned long *)0xd0057840
// Bit[15+16] ds_mc_valid_2
// Bit[14+16] new_idct1_rd_idx_2
// Bit[13+16] new_idct1_wr_idx_2
// Bit[12+16] idct1_buff0_busy_2
// Bit[11+16] idct1_buff1_busy_2
// Bit[10+16] new_idct1_busy_2
// Bit[9+16] iq_om_8val_2
// Bit[8+16] idct1_pipe_busy_2
// Bit[7+16] wait_mb_left_finish_hold_2
// Bit[6+16] new_idct2_rd_idx_2
// Bit[5+16] new_idct2_wr_idx_2
// Bit[4+16] idct2_buff0_busy_2
// Bit[3+16] idct2_buff1_busy_2
// Bit[2+16] idct2_en_2
// Bit[1+16] new_idct2_busy_2
// Bit[0+16] new_idct1_ready_2
// Bit[15] ds_mc_valid_1
// Bit[14] new_idct1_rd_idx_1
// Bit[13] new_idct1_wr_idx_1
// Bit[12] idct1_buff0_busy_1
// Bit[11] idct1_buff1_busy_1
// Bit[10] new_idct1_busy_1
// Bit[9] iq_om_8val_1
// Bit[8] idct1_pipe_busy_1
// Bit[7] wait_mb_left_finish_hold_1
// Bit[6] new_idct2_rd_idx_1
// Bit[5] new_idct2_wr_idx_1
// Bit[4] idct2_buff0_busy_1
// Bit[3] idct2_buff1_busy_1
// Bit[2] idct2_en_1
// Bit[1] new_idct2_busy_1
// Bit[0] new_idct1_ready_1
#define P_HCODEC_IQIDCT_DEBUG_IDCT                 (volatile unsigned long *)0xd0057844
// bit 31 -- convas_enable
// bit 30:24 -- convas_x_count ( 8 pixels / 64 bits )
// bit 23:16 -- convas_y_count
// bit 15   -- dcac_dma_busy
// bit 14   -- dcac_dma_urgent
// bit 13:8 -- dcac_dma_count
// bit 7    -- dcac_dma_rw
// bit 6    -- dcac_skip_read_mode
// bit 5:0  -- dcac_dma_offset
#define P_HCODEC_DCAC_DMA_CTRL                     (volatile unsigned long *)0xd0057848
// when (convas_enable == 0 )
//   bit 31:0 dcac_dma_addr
// when (convas_enable == 1 )
//   bit 31:25 canvas_addr (7 bits)
//   bit 24:12 convas_y_start ( 13 btis )
//   bit 11:0  convas_x_start ( 12 btis )
#define P_HCODEC_DCAC_DMA_ADDRESS                  (volatile unsigned long *)0xd005784c
// bit 7:0 -- dcac_cpu_addr
#define P_HCODEC_DCAC_CPU_ADDRESS                  (volatile unsigned long *)0xd0057850
// bit 31:0 -- dcac_cpu_data
#define P_HCODEC_DCAC_CPU_DATA                     (volatile unsigned long *)0xd0057854
// bit 31:19 -- reserved
// bit 18:16 -- block_num_reg -- Read-Only 
// bit 15:0 -- dcac_mb_count
#define P_HCODEC_DCAC_MB_COUNT                     (volatile unsigned long *)0xd0057858
// bit 31:18 -- reserved
// For H264 :
//   bit 17:2 -- h264_quant 
//   bit 11:6 -- h264_quant_c 
//   bit  5:0 -- h264_quant_c 
// For VC1 :
//   bit    17 -- qindex_GT_8
//   bit    16 -- HalfQPStep
//   bit 15:12 -- eQuantMode 
//   bit 11:6  -- AltPQuant 
//   bit  5:0  -- PQuant 
//             
#define P_HCODEC_IQ_QUANT                          (volatile unsigned long *)0xd005785c
// bit 31:24  -- bitplane_width 
// bit 23:16  -- bitplane_height 
// bit 15:14  -- bitplane_start_x 
// bit 13:12  -- bitplane_start_y 
// bit 11:4   -- reserved
// bit 3:1    -- bitplane_type
// bit 0      -- bitplane_busy
#define P_HCODEC_VC1_BITPLANE_CTL                  (volatile unsigned long *)0xd0057860
//======================================
//  VCOP Control Register Bits
//
//======================================
    //`define IQIDCT_RESET	    16'h0001	    // Bit 0
//======================================
//  QP Control Register Bits
//
//======================================
// Duplicate Address:  When actually used
// please move to a different address
// `define FLD_DCT_TYPE	    16'h0100	    // Bit 8	0 = Frame DCT; 1 = field DCT
//
// Closing file:  iqidct_regs.h
//
//
// Reading file:  iqidct_regs.h
//
//========================================================================
//  IQ/IDCT module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_VDEC_IQIDCT_CBUS_BASE = 0x0e
// -----------------------------------------------
#define P_VDEC2_VCOP_CTRL_REG                      (volatile unsigned long *)0xd005b800
#define P_VDEC2_QP_CTRL_REG                        (volatile unsigned long *)0xd005b804
#define P_VDEC2_INTRA_QUANT_MATRIX                 (volatile unsigned long *)0xd005b808
#define P_VDEC2_NON_I_QUANT_MATRIX                 (volatile unsigned long *)0xd005b80c
#define P_VDEC2_DC_SCALER                          (volatile unsigned long *)0xd005b810
#define P_VDEC2_DC_AC_CTRL                         (volatile unsigned long *)0xd005b814
// `define RV_AI_CTRL          8'h05  // ONLY for $ucode/real/amrisc/rv.s reg value from apollo
#define P_VDEC2_DC_AC_SCALE_MUL                    (volatile unsigned long *)0xd005b818
#define P_VDEC2_DC_AC_SCALE_DIV                    (volatile unsigned long *)0xd005b81c
// `define DC_AC_SCALE_RESULT  8'h06
// `define RESERVED_E07        8'h07
#define P_VDEC2_POWER_CTL_IQIDCT                   (volatile unsigned long *)0xd005b820
#define P_VDEC2_RV_AI_Y_X                          (volatile unsigned long *)0xd005b824
#define P_VDEC2_RV_AI_U_X                          (volatile unsigned long *)0xd005b828
#define P_VDEC2_RV_AI_V_X                          (volatile unsigned long *)0xd005b82c
// bit 15:0 will count up when rv_ai_mb finished when non zero
// and rv_ai_mb_finished_int will be generate when this is not zero
#define P_VDEC2_RV_AI_MB_COUNT                     (volatile unsigned long *)0xd005b830
// For H264 I in PB picture Use -- dma type : h264_next_intra_dma
#define P_VDEC2_NEXT_INTRA_DMA_ADDRESS             (volatile unsigned long *)0xd005b834
// Bit 0 -- constrained_intra_pred_flag for H264
#define P_VDEC2_IQIDCT_CONTROL                     (volatile unsigned long *)0xd005b838
// Bit[31:19] Reserved
// Bit[18] iq_waiting
// Bit[17] iq_om_wr_idx
// Bit[16] iq_om_rd_idx
// Bit[15] iq_om_busy
// Bit[14] iq_om_2_busy 
// Bit[13] idx_fifo_0
// Bit[12] idx_fifo_1
// Bit[11] idx_fifo_2
// Bit[10] idx_fifo_3
// Bit[9] idx_fifo_4
// Bit[8] idx_fifo_5
// Bit[7] idx_fifo_6
// Bit[6] idx_fifo_7
// Bit[5:3] idx_fifo_wp
// Bit[2:0] idx_fifo_rp
#define P_VDEC2_IQIDCT_DEBUG_INFO_0                (volatile unsigned long *)0xd005b83c
// For RTL Simulation Only
#define P_VDEC2_DEBLK_CMD                          (volatile unsigned long *)0xd005b840
// Bit[15+16] ds_mc_valid_2
// Bit[14+16] new_idct1_rd_idx_2
// Bit[13+16] new_idct1_wr_idx_2
// Bit[12+16] idct1_buff0_busy_2
// Bit[11+16] idct1_buff1_busy_2
// Bit[10+16] new_idct1_busy_2
// Bit[9+16] iq_om_8val_2
// Bit[8+16] idct1_pipe_busy_2
// Bit[7+16] wait_mb_left_finish_hold_2
// Bit[6+16] new_idct2_rd_idx_2
// Bit[5+16] new_idct2_wr_idx_2
// Bit[4+16] idct2_buff0_busy_2
// Bit[3+16] idct2_buff1_busy_2
// Bit[2+16] idct2_en_2
// Bit[1+16] new_idct2_busy_2
// Bit[0+16] new_idct1_ready_2
// Bit[15] ds_mc_valid_1
// Bit[14] new_idct1_rd_idx_1
// Bit[13] new_idct1_wr_idx_1
// Bit[12] idct1_buff0_busy_1
// Bit[11] idct1_buff1_busy_1
// Bit[10] new_idct1_busy_1
// Bit[9] iq_om_8val_1
// Bit[8] idct1_pipe_busy_1
// Bit[7] wait_mb_left_finish_hold_1
// Bit[6] new_idct2_rd_idx_1
// Bit[5] new_idct2_wr_idx_1
// Bit[4] idct2_buff0_busy_1
// Bit[3] idct2_buff1_busy_1
// Bit[2] idct2_en_1
// Bit[1] new_idct2_busy_1
// Bit[0] new_idct1_ready_1
#define P_VDEC2_IQIDCT_DEBUG_IDCT                  (volatile unsigned long *)0xd005b844
// bit 31 -- convas_enable
// bit 30:24 -- convas_x_count ( 8 pixels / 64 bits )
// bit 23:16 -- convas_y_count
// bit 15   -- dcac_dma_busy
// bit 14   -- dcac_dma_urgent
// bit 13:8 -- dcac_dma_count
// bit 7    -- dcac_dma_rw
// bit 6    -- dcac_skip_read_mode
// bit 5:0  -- dcac_dma_offset
#define P_VDEC2_DCAC_DMA_CTRL                      (volatile unsigned long *)0xd005b848
// when (convas_enable == 0 )
//   bit 31:0 dcac_dma_addr
// when (convas_enable == 1 )
//   bit 31:25 canvas_addr (7 bits)
//   bit 24:12 convas_y_start ( 13 btis )
//   bit 11:0  convas_x_start ( 12 btis )
#define P_VDEC2_DCAC_DMA_ADDRESS                   (volatile unsigned long *)0xd005b84c
// bit 7:0 -- dcac_cpu_addr
#define P_VDEC2_DCAC_CPU_ADDRESS                   (volatile unsigned long *)0xd005b850
// bit 31:0 -- dcac_cpu_data
#define P_VDEC2_DCAC_CPU_DATA                      (volatile unsigned long *)0xd005b854
// bit 31:19 -- reserved
// bit 18:16 -- block_num_reg -- Read-Only 
// bit 15:0 -- dcac_mb_count
#define P_VDEC2_DCAC_MB_COUNT                      (volatile unsigned long *)0xd005b858
// bit 31:18 -- reserved
// For H264 :
//   bit 17:2 -- h264_quant 
//   bit 11:6 -- h264_quant_c 
//   bit  5:0 -- h264_quant_c 
// For VC1 :
//   bit    17 -- qindex_GT_8
//   bit    16 -- HalfQPStep
//   bit 15:12 -- eQuantMode 
//   bit 11:6  -- AltPQuant 
//   bit  5:0  -- PQuant 
//             
#define P_VDEC2_IQ_QUANT                           (volatile unsigned long *)0xd005b85c
// bit 31:24  -- bitplane_width 
// bit 23:16  -- bitplane_height 
// bit 15:14  -- bitplane_start_x 
// bit 13:12  -- bitplane_start_y 
// bit 11:4   -- reserved
// bit 3:1    -- bitplane_type
// bit 0      -- bitplane_busy
#define P_VDEC2_VC1_BITPLANE_CTL                   (volatile unsigned long *)0xd005b860
//======================================
//  VCOP Control Register Bits
//
//======================================
    //`define IQIDCT_RESET	    16'h0001	    // Bit 0
//======================================
//  QP Control Register Bits
//
//======================================
// Duplicate Address:  When actually used
// please move to a different address
// `define FLD_DCT_TYPE	    16'h0100	    // Bit 8	0 = Frame DCT; 1 = field DCT
//
// Closing file:  iqidct_regs.h
//
//
// Reading file:  vcpu_regs.h
//
//========================================================================
//  VCPU module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_VDEC_VCPU_CBUS_BASE = 0x03
// -----------------------------------------------
#define P_HCODEC_MSP                               (volatile unsigned long *)0xd0054c00
#define P_HCODEC_MPSR                              (volatile unsigned long *)0xd0054c04
#define P_HCODEC_MINT_VEC_BASE                     (volatile unsigned long *)0xd0054c08
#define P_HCODEC_MCPU_INTR_GRP                     (volatile unsigned long *)0xd0054c0c
#define P_HCODEC_MCPU_INTR_MSK                     (volatile unsigned long *)0xd0054c10
#define P_HCODEC_MCPU_INTR_REQ                     (volatile unsigned long *)0xd0054c14
#define P_HCODEC_MPC_P                             (volatile unsigned long *)0xd0054c18
#define P_HCODEC_MPC_D                             (volatile unsigned long *)0xd0054c1c
#define P_HCODEC_MPC_E                             (volatile unsigned long *)0xd0054c20
#define P_HCODEC_MPC_W                             (volatile unsigned long *)0xd0054c24
#define P_HCODEC_MINDEX0_REG                       (volatile unsigned long *)0xd0054c28
#define P_HCODEC_MINDEX1_REG                       (volatile unsigned long *)0xd0054c2c
#define P_HCODEC_MINDEX2_REG                       (volatile unsigned long *)0xd0054c30
#define P_HCODEC_MINDEX3_REG                       (volatile unsigned long *)0xd0054c34
#define P_HCODEC_MINDEX4_REG                       (volatile unsigned long *)0xd0054c38
#define P_HCODEC_MINDEX5_REG                       (volatile unsigned long *)0xd0054c3c
#define P_HCODEC_MINDEX6_REG                       (volatile unsigned long *)0xd0054c40
#define P_HCODEC_MINDEX7_REG                       (volatile unsigned long *)0xd0054c44
#define P_HCODEC_MMIN_REG                          (volatile unsigned long *)0xd0054c48
#define P_HCODEC_MMAX_REG                          (volatile unsigned long *)0xd0054c4c
#define P_HCODEC_MBREAK0_REG                       (volatile unsigned long *)0xd0054c50
#define P_HCODEC_MBREAK1_REG                       (volatile unsigned long *)0xd0054c54
#define P_HCODEC_MBREAK2_REG                       (volatile unsigned long *)0xd0054c58
#define P_HCODEC_MBREAK3_REG                       (volatile unsigned long *)0xd0054c5c
#define P_HCODEC_MBREAK_TYPE                       (volatile unsigned long *)0xd0054c60
#define P_HCODEC_MBREAK_CTRL                       (volatile unsigned long *)0xd0054c64
#define P_HCODEC_MBREAK_STAUTS                     (volatile unsigned long *)0xd0054c68
#define P_HCODEC_MDB_ADDR_REG                      (volatile unsigned long *)0xd0054c6c
#define P_HCODEC_MDB_DATA_REG                      (volatile unsigned long *)0xd0054c70
#define P_HCODEC_MDB_CTRL                          (volatile unsigned long *)0xd0054c74
#define P_HCODEC_MSFTINT0                          (volatile unsigned long *)0xd0054c78
#define P_HCODEC_MSFTINT1                          (volatile unsigned long *)0xd0054c7c
#define P_HCODEC_CSP                               (volatile unsigned long *)0xd0054c80
#define P_HCODEC_CPSR                              (volatile unsigned long *)0xd0054c84
#define P_HCODEC_CINT_VEC_BASE                     (volatile unsigned long *)0xd0054c88
#define P_HCODEC_CCPU_INTR_GRP                     (volatile unsigned long *)0xd0054c8c
#define P_HCODEC_CCPU_INTR_MSK                     (volatile unsigned long *)0xd0054c90
#define P_HCODEC_CCPU_INTR_REQ                     (volatile unsigned long *)0xd0054c94
#define P_HCODEC_CPC_P                             (volatile unsigned long *)0xd0054c98
#define P_HCODEC_CPC_D                             (volatile unsigned long *)0xd0054c9c
#define P_HCODEC_CPC_E                             (volatile unsigned long *)0xd0054ca0
#define P_HCODEC_CPC_W                             (volatile unsigned long *)0xd0054ca4
#define P_HCODEC_CINDEX0_REG                       (volatile unsigned long *)0xd0054ca8
#define P_HCODEC_CINDEX1_REG                       (volatile unsigned long *)0xd0054cac
#define P_HCODEC_CINDEX2_REG                       (volatile unsigned long *)0xd0054cb0
#define P_HCODEC_CINDEX3_REG                       (volatile unsigned long *)0xd0054cb4
#define P_HCODEC_CINDEX4_REG                       (volatile unsigned long *)0xd0054cb8
#define P_HCODEC_CINDEX5_REG                       (volatile unsigned long *)0xd0054cbc
#define P_HCODEC_CINDEX6_REG                       (volatile unsigned long *)0xd0054cc0
#define P_HCODEC_CINDEX7_REG                       (volatile unsigned long *)0xd0054cc4
#define P_HCODEC_CMIN_REG                          (volatile unsigned long *)0xd0054cc8
#define P_HCODEC_CMAX_REG                          (volatile unsigned long *)0xd0054ccc
#define P_HCODEC_CBREAK0_REG                       (volatile unsigned long *)0xd0054cd0
#define P_HCODEC_CBREAK1_REG                       (volatile unsigned long *)0xd0054cd4
#define P_HCODEC_CBREAK2_REG                       (volatile unsigned long *)0xd0054cd8
#define P_HCODEC_CBREAK3_REG                       (volatile unsigned long *)0xd0054cdc
#define P_HCODEC_CBREAK_TYPE                       (volatile unsigned long *)0xd0054ce0
#define P_HCODEC_CBREAK_CTRL                       (volatile unsigned long *)0xd0054ce4
#define P_HCODEC_CBREAK_STAUTS                     (volatile unsigned long *)0xd0054ce8
#define P_HCODEC_CDB_ADDR_REG                      (volatile unsigned long *)0xd0054cec
#define P_HCODEC_CDB_DATA_REG                      (volatile unsigned long *)0xd0054cf0
#define P_HCODEC_CDB_CTRL                          (volatile unsigned long *)0xd0054cf4
#define P_HCODEC_CSFTINT0                          (volatile unsigned long *)0xd0054cf8
#define P_HCODEC_CSFTINT1                          (volatile unsigned long *)0xd0054cfc
#define P_HCODEC_IMEM_DMA_CTRL                     (volatile unsigned long *)0xd0054d00
#define P_HCODEC_IMEM_DMA_ADR                      (volatile unsigned long *)0xd0054d04
#define P_HCODEC_IMEM_DMA_COUNT                    (volatile unsigned long *)0xd0054d08
// bit[29:24] A_brst_num_imem
// bit[21:16] A_id_imem
// bit[11:0] wrrsp_count_imem (reserved)
#define P_HCODEC_WRRSP_IMEM                        (volatile unsigned long *)0xd0054d0c
#define P_HCODEC_LMEM_DMA_CTRL                     (volatile unsigned long *)0xd0054d40
#define P_HCODEC_LMEM_DMA_ADR                      (volatile unsigned long *)0xd0054d44
#define P_HCODEC_LMEM_DMA_COUNT                    (volatile unsigned long *)0xd0054d48
// bit[29:24] A_brst_num_lmem
// bit[21:16] A_id_lmem
// bit[11:0] wrrsp_count_lmem 
#define P_HCODEC_WRRSP_LMEM                        (volatile unsigned long *)0xd0054d4c
#define P_HCODEC_MAC_CTRL1                         (volatile unsigned long *)0xd0054d80
#define P_HCODEC_ACC0REG1                          (volatile unsigned long *)0xd0054d84
#define P_HCODEC_ACC1REG1                          (volatile unsigned long *)0xd0054d88
#define P_HCODEC_MAC_CTRL2                         (volatile unsigned long *)0xd0054dc0
#define P_HCODEC_ACC0REG2                          (volatile unsigned long *)0xd0054dc4
#define P_HCODEC_ACC1REG2                          (volatile unsigned long *)0xd0054dc8
#define P_HCODEC_CPU_TRACE                         (volatile unsigned long *)0xd0054e00
//
// Closing file:  vcpu_regs.h
//
//
// Reading file:  vcpu_regs.h
//
//========================================================================
//  VCPU module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_VDEC_VCPU_CBUS_BASE = 0x03
// -----------------------------------------------
#define P_VDEC2_MSP                                (volatile unsigned long *)0xd0058c00
#define P_VDEC2_MPSR                               (volatile unsigned long *)0xd0058c04
#define P_VDEC2_MINT_VEC_BASE                      (volatile unsigned long *)0xd0058c08
#define P_VDEC2_MCPU_INTR_GRP                      (volatile unsigned long *)0xd0058c0c
#define P_VDEC2_MCPU_INTR_MSK                      (volatile unsigned long *)0xd0058c10
#define P_VDEC2_MCPU_INTR_REQ                      (volatile unsigned long *)0xd0058c14
#define P_VDEC2_MPC_P                              (volatile unsigned long *)0xd0058c18
#define P_VDEC2_MPC_D                              (volatile unsigned long *)0xd0058c1c
#define P_VDEC2_MPC_E                              (volatile unsigned long *)0xd0058c20
#define P_VDEC2_MPC_W                              (volatile unsigned long *)0xd0058c24
#define P_VDEC2_MINDEX0_REG                        (volatile unsigned long *)0xd0058c28
#define P_VDEC2_MINDEX1_REG                        (volatile unsigned long *)0xd0058c2c
#define P_VDEC2_MINDEX2_REG                        (volatile unsigned long *)0xd0058c30
#define P_VDEC2_MINDEX3_REG                        (volatile unsigned long *)0xd0058c34
#define P_VDEC2_MINDEX4_REG                        (volatile unsigned long *)0xd0058c38
#define P_VDEC2_MINDEX5_REG                        (volatile unsigned long *)0xd0058c3c
#define P_VDEC2_MINDEX6_REG                        (volatile unsigned long *)0xd0058c40
#define P_VDEC2_MINDEX7_REG                        (volatile unsigned long *)0xd0058c44
#define P_VDEC2_MMIN_REG                           (volatile unsigned long *)0xd0058c48
#define P_VDEC2_MMAX_REG                           (volatile unsigned long *)0xd0058c4c
#define P_VDEC2_MBREAK0_REG                        (volatile unsigned long *)0xd0058c50
#define P_VDEC2_MBREAK1_REG                        (volatile unsigned long *)0xd0058c54
#define P_VDEC2_MBREAK2_REG                        (volatile unsigned long *)0xd0058c58
#define P_VDEC2_MBREAK3_REG                        (volatile unsigned long *)0xd0058c5c
#define P_VDEC2_MBREAK_TYPE                        (volatile unsigned long *)0xd0058c60
#define P_VDEC2_MBREAK_CTRL                        (volatile unsigned long *)0xd0058c64
#define P_VDEC2_MBREAK_STAUTS                      (volatile unsigned long *)0xd0058c68
#define P_VDEC2_MDB_ADDR_REG                       (volatile unsigned long *)0xd0058c6c
#define P_VDEC2_MDB_DATA_REG                       (volatile unsigned long *)0xd0058c70
#define P_VDEC2_MDB_CTRL                           (volatile unsigned long *)0xd0058c74
#define P_VDEC2_MSFTINT0                           (volatile unsigned long *)0xd0058c78
#define P_VDEC2_MSFTINT1                           (volatile unsigned long *)0xd0058c7c
#define P_VDEC2_CSP                                (volatile unsigned long *)0xd0058c80
#define P_VDEC2_CPSR                               (volatile unsigned long *)0xd0058c84
#define P_VDEC2_CINT_VEC_BASE                      (volatile unsigned long *)0xd0058c88
#define P_VDEC2_CCPU_INTR_GRP                      (volatile unsigned long *)0xd0058c8c
#define P_VDEC2_CCPU_INTR_MSK                      (volatile unsigned long *)0xd0058c90
#define P_VDEC2_CCPU_INTR_REQ                      (volatile unsigned long *)0xd0058c94
#define P_VDEC2_CPC_P                              (volatile unsigned long *)0xd0058c98
#define P_VDEC2_CPC_D                              (volatile unsigned long *)0xd0058c9c
#define P_VDEC2_CPC_E                              (volatile unsigned long *)0xd0058ca0
#define P_VDEC2_CPC_W                              (volatile unsigned long *)0xd0058ca4
#define P_VDEC2_CINDEX0_REG                        (volatile unsigned long *)0xd0058ca8
#define P_VDEC2_CINDEX1_REG                        (volatile unsigned long *)0xd0058cac
#define P_VDEC2_CINDEX2_REG                        (volatile unsigned long *)0xd0058cb0
#define P_VDEC2_CINDEX3_REG                        (volatile unsigned long *)0xd0058cb4
#define P_VDEC2_CINDEX4_REG                        (volatile unsigned long *)0xd0058cb8
#define P_VDEC2_CINDEX5_REG                        (volatile unsigned long *)0xd0058cbc
#define P_VDEC2_CINDEX6_REG                        (volatile unsigned long *)0xd0058cc0
#define P_VDEC2_CINDEX7_REG                        (volatile unsigned long *)0xd0058cc4
#define P_VDEC2_CMIN_REG                           (volatile unsigned long *)0xd0058cc8
#define P_VDEC2_CMAX_REG                           (volatile unsigned long *)0xd0058ccc
#define P_VDEC2_CBREAK0_REG                        (volatile unsigned long *)0xd0058cd0
#define P_VDEC2_CBREAK1_REG                        (volatile unsigned long *)0xd0058cd4
#define P_VDEC2_CBREAK2_REG                        (volatile unsigned long *)0xd0058cd8
#define P_VDEC2_CBREAK3_REG                        (volatile unsigned long *)0xd0058cdc
#define P_VDEC2_CBREAK_TYPE                        (volatile unsigned long *)0xd0058ce0
#define P_VDEC2_CBREAK_CTRL                        (volatile unsigned long *)0xd0058ce4
#define P_VDEC2_CBREAK_STAUTS                      (volatile unsigned long *)0xd0058ce8
#define P_VDEC2_CDB_ADDR_REG                       (volatile unsigned long *)0xd0058cec
#define P_VDEC2_CDB_DATA_REG                       (volatile unsigned long *)0xd0058cf0
#define P_VDEC2_CDB_CTRL                           (volatile unsigned long *)0xd0058cf4
#define P_VDEC2_CSFTINT0                           (volatile unsigned long *)0xd0058cf8
#define P_VDEC2_CSFTINT1                           (volatile unsigned long *)0xd0058cfc
#define P_VDEC2_IMEM_DMA_CTRL                      (volatile unsigned long *)0xd0058d00
#define P_VDEC2_IMEM_DMA_ADR                       (volatile unsigned long *)0xd0058d04
#define P_VDEC2_IMEM_DMA_COUNT                     (volatile unsigned long *)0xd0058d08
// bit[29:24] A_brst_num_imem
// bit[21:16] A_id_imem
// bit[11:0] wrrsp_count_imem (reserved)
#define P_VDEC2_WRRSP_IMEM                         (volatile unsigned long *)0xd0058d0c
#define P_VDEC2_LMEM_DMA_CTRL                      (volatile unsigned long *)0xd0058d40
#define P_VDEC2_LMEM_DMA_ADR                       (volatile unsigned long *)0xd0058d44
#define P_VDEC2_LMEM_DMA_COUNT                     (volatile unsigned long *)0xd0058d48
// bit[29:24] A_brst_num_lmem
// bit[21:16] A_id_lmem
// bit[11:0] wrrsp_count_lmem 
#define P_VDEC2_WRRSP_LMEM                         (volatile unsigned long *)0xd0058d4c
#define P_VDEC2_MAC_CTRL1                          (volatile unsigned long *)0xd0058d80
#define P_VDEC2_ACC0REG1                           (volatile unsigned long *)0xd0058d84
#define P_VDEC2_ACC1REG1                           (volatile unsigned long *)0xd0058d88
#define P_VDEC2_MAC_CTRL2                          (volatile unsigned long *)0xd0058dc0
#define P_VDEC2_ACC0REG2                           (volatile unsigned long *)0xd0058dc4
#define P_VDEC2_ACC1REG2                           (volatile unsigned long *)0xd0058dc8
#define P_VDEC2_CPU_TRACE                          (volatile unsigned long *)0xd0058e00
//
// Closing file:  vcpu_regs.h
//
//
// Reading file:  henc_regs.h
//
//========================================================================
//  MDEC module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_HCODEC_HENC_CBUS_BASE = 0x0a
// -----------------------------------------------
#define P_HCODEC_HENC_SCRATCH_0                    (volatile unsigned long *)0xd0056b00
#define P_HCODEC_HENC_SCRATCH_1                    (volatile unsigned long *)0xd0056b04
#define P_HCODEC_HENC_SCRATCH_2                    (volatile unsigned long *)0xd0056b08
#define P_HCODEC_HENC_SCRATCH_3                    (volatile unsigned long *)0xd0056b0c
#define P_HCODEC_HENC_SCRATCH_4                    (volatile unsigned long *)0xd0056b10
#define P_HCODEC_HENC_SCRATCH_5                    (volatile unsigned long *)0xd0056b14
#define P_HCODEC_HENC_SCRATCH_6                    (volatile unsigned long *)0xd0056b18
#define P_HCODEC_HENC_SCRATCH_7                    (volatile unsigned long *)0xd0056b1c
#define P_HCODEC_HENC_SCRATCH_8                    (volatile unsigned long *)0xd0056b20
#define P_HCODEC_HENC_SCRATCH_9                    (volatile unsigned long *)0xd0056b24
#define P_HCODEC_HENC_SCRATCH_A                    (volatile unsigned long *)0xd0056b28
#define P_HCODEC_HENC_SCRATCH_B                    (volatile unsigned long *)0xd0056b2c
#define P_HCODEC_HENC_SCRATCH_C                    (volatile unsigned long *)0xd0056b30
#define P_HCODEC_HENC_SCRATCH_D                    (volatile unsigned long *)0xd0056b34
#define P_HCODEC_HENC_SCRATCH_E                    (volatile unsigned long *)0xd0056b38
#define P_HCODEC_HENC_SCRATCH_F                    (volatile unsigned long *)0xd0056b3c
#define P_HCODEC_HENC_SCRATCH_G                    (volatile unsigned long *)0xd0056b40
#define P_HCODEC_HENC_SCRATCH_H                    (volatile unsigned long *)0xd0056b44
#define P_HCODEC_HENC_SCRATCH_I                    (volatile unsigned long *)0xd0056b48
#define P_HCODEC_HENC_SCRATCH_J                    (volatile unsigned long *)0xd0056b4c
#define P_HCODEC_HENC_SCRATCH_K                    (volatile unsigned long *)0xd0056b50
#define P_HCODEC_HENC_SCRATCH_L                    (volatile unsigned long *)0xd0056b54
#define P_HCODEC_HENC_SCRATCH_M                    (volatile unsigned long *)0xd0056b58
#define P_HCODEC_HENC_SCRATCH_N                    (volatile unsigned long *)0xd0056b5c
// bit [7:0] data_feed_buff_id
#define P_HCODEC_IE_DATA_FEED_BUFF_INFO            (volatile unsigned long *)0xd0056b60
//
// Closing file:  henc_regs.h
//
//
// Reading file:  vlc_regs.h
//
//========================================================================
//  VLC module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_HCODEC_VLC_CBUS_BASE = 0x0d
// -----------------------------------------------
// Bit[31:28] - henc_status
// Bit[27:8] - reserved
// Bit[7]    mc_hcmd_buff_enable
// Bit[6]    mc_hcmd_use_mc_hcmd_buff
// Bit[5]    mc_hcmd_use_mc_hcmd_hw_start
// Bit[4]    no_mc_out_null_non_skipped_mb
// Bit[3]    mc_out_even_skipped_mb
// Bit[2] - hcmd_enable
// Bit[1] - vlc_control_enable (0 will treat as soft_reset)
// Bit[0] - vlc_input_enable (enable input interface)
#define P_HCODEC_VLC_STATUS_CTRL                   (volatile unsigned long *)0xd0057400
// Bit[31:16] - Reserved
// Bit [15]  - enable_free_clk_mc_hcmd_buff
// Bit [14]  - enable_free_clk_reg
// Bit [13]  - enable_free_clk_stream
// Bit [12]  - enable_free_clk_pre_buff
// Bit [11]  - enable_free_clk_vb_buff
// Bit [10]  - enable_free_clk_dc_input
// Bit [9]   - enable_free_clk_input
// Bit [8]   - enable_free_clk_mv_cal
// Bit [7]   - enable_free_clk_status
// Bit [6]   - enable_free_clk_mc_dblk_cmd_if
// Bit [5]   - disable_mvd_enc_finished
// Bit [4]   - I16MB_share_ipred_mode_with_I4MB
// Bit [3]   - fixed_picture_qp
// Bit [2]   - use_set_b8_mode ( not used now)
// Bit [1]   - use_set_mb_skip_run
// Bit [0]   - pop_coeff_even_all_zero
#define P_HCODEC_VLC_CONFIG                        (volatile unsigned long *)0xd0057404
// --------------------------------------------
// Bitstream DDR Interface
// --------------------------------------------
#define P_HCODEC_VLC_VB_START_PTR                  (volatile unsigned long *)0xd0057440
#define P_HCODEC_VLC_VB_END_PTR                    (volatile unsigned long *)0xd0057444
#define P_HCODEC_VLC_VB_WR_PTR                     (volatile unsigned long *)0xd0057448
// Read Only, VLC_VB_SW_RD_PTR or VLC_VB_HW_RD_PTR
#define P_HCODEC_VLC_VB_RD_PTR                     (volatile unsigned long *)0xd005744c
#define P_HCODEC_VLC_VB_SW_RD_PTR                  (volatile unsigned long *)0xd0057450
// Read Only
#define P_HCODEC_VLC_VB_LEFT                       (volatile unsigned long *)0xd0057454
// VB FIFO Control
// bit  [31:24] vb_full_int_enable_cpu[7:0] 
// bit  [23:16] vb_full_int_enable_amrisc[7:0] 
//   -bit 23 Video BUFFER LEFT < 0x400 Bytes
//   -bit 22 Video BUFFER LEFT < 0x200 Bytes
//   -bit 21 Video BUFFER LEFT < 0x100 Bytes
//   -bit 20 Video BUFFER LEFT < 0x80 Bytes
//   -bit 19 Video BUFFER LEFT < 0x40 Bytes
//   -bit 18 Video BUFFER LEFT < 0x20 Bytes
//   -bit 17 vbfifo left  < 16 double words (8x64bits)
//   -bit 16 vbfifo left  < 8 double words (4x64bits)
// bit  [15]    wr_ptr_int_enable_cpu
// bit  [14]    wr_ptr_int_enable_amrisc
// bit  [13]    wr_ptr_int (Read Only, write 1 will clear)
// bit  [12]    vb_full_int_enable_cpu(Read Only)
// bit  [11]    vb_full_int_enable_amrisc(Read Only)
// bit  [10]    reserved
// bit  [9]     use_vb_hw_rd_ptr
// bit  [8]     vb_always_ready Set to 1 to ignore vb_level blocking DDR write
// bit  [7]     vb_ready_for_transfer (Read Only)
// bit  [6]     data_ready_for_transfer (Read Only)
// bits [5:3]   vb_endian       Set VB Endian inside DDR memory 
// bit  [2]     vb_write_busy   Read Only - indicate DDR write busy
// bit  [1]     vb_write_en     Set to 1 to enable writing data to DDR memory
// bit  [0]     vb_soft_reset   Soft reset  
#define P_HCODEC_VLC_VB_CONTROL                    (volatile unsigned long *)0xd0057458
// bit 31    transfer_length 0 - 32x64 Bits per request, 1 - 16x64 Bits per request  // default : 0
// bit 30    A_urgent  // default : 0
// bit 29:24 A_brst_num // default : 0x3f
// bit 23:22 reserved
// bit 21:16 A_id  // default : 0x20 
// bit 15:0  vb_left_hold // default : 0 
#define P_HCODEC_VLC_VB_MEM_CTL                    (volatile unsigned long *)0xd005745c
// vb_wr_ptr address to generate interrupt
#define P_HCODEC_VLC_VB_INT_PTR                    (volatile unsigned long *)0xd0057460
// bit[31:12] reserved
// bit[11:0] vlc_wrrsp_count
#define P_HCODEC_VLC_WRRSP                         (volatile unsigned long *)0xd0057464
#define P_HCODEC_VLC_TOTAL_BYTES                   (volatile unsigned long *)0xd0057468
// bit  [31:26] reserved
// bit  [25]    vb_flush
// bit  [24]    vb_reg_ready  
// bit  [23:16] vb_buff_left     -- Read only
// bit  [15:8]  vb_buff_wr_point -- RW
// bit  [7:0]   vb_buff_rd_point -- RW
#define P_HCODEC_VLC_VB_BUFF                       (volatile unsigned long *)0xd005746c
// bit[31]    flush_vlc_pre_buff
// bit[30:27] reserved
// bit[26:24] vb_pre_buff_level
// bit[23:0]  vb_pre_buff_data[55:32] 
#define P_HCODEC_VLC_VB_PRE_BUFF_HI                (volatile unsigned long *)0xd0057470
// bit[31:0] vb_pre_buff_data[31:0]
#define P_HCODEC_VLC_VB_PRE_BUFF_LOW               (volatile unsigned long *)0xd0057474
// bit[31]    stream_encap_enable  // 0x0000(00-03) will be changed to 0x000003(00-03) if enabled
// bit[30:29] stream_encap_delay   // delay bytes for encap used 
// bit[28:24] stream_buff_point
// bit[23:0]  stream_buff_data 
#define P_HCODEC_VLC_STREAM_BUFF                   (volatile unsigned long *)0xd0057478
// bit[31]    push_stream_block - Read Only (Will set if vb_buff full)
// bit[30]    push_stream_busy  - Read Only (busy when output one byte from stream_buf (max 2 clocks for 8 bits push)
// bit[29:28] stream_encap_status - Read Only
// bit[27:21] reserved
// Long Mode : (Amrisc need movilo and mvihi high to set stream_info)
//   bit[20:16] push_stream_long_length (0 or 31 : Mid or Short mode)
//   bit[15:0]  push_stream_data
// Mid Mode : (Amrisc need movi to set stream_info) 
//   bit[15:12]] push_stream_mid_length (1-12 : mid mode active, 0-short mode, 15 - byte align)
//   bit[11:0]  push_stream_data
// Short Mode : (Amrisc can use mtspi to push stream directely)
//   bit[7:5] push_stream_short_length (0-5 : short length, else - invalid)
//   bit[4:0]  push_stream_data
#define P_HCODEC_VLC_PUSH_STREAM                   (volatile unsigned long *)0xd005747c
// bit[15:8] ELEMENT_LENGTH
// bit[7:1]  reserved
// bit[0]  Write - push start, Read - Push Busy
#define P_HCODEC_VLC_PUSH_ELEMENT                  (volatile unsigned long *)0xd0057480
#define P_HCODEC_VLC_ELEMENT_DATA                  (volatile unsigned long *)0xd0057484
// --------------------------------------------
// Picture VLC 
// --------------------------------------------
// (&(int|(~AND_enable))|(|(int&OR_enable)))
// bit[31]    OR interrupt Enable Reserved
// bit[30]    OR interrupt Enable for mv_busy
// bit[29]    OR interrupt Enable for b8_mode_busy
// bit[28]    OR interrupt Enable for mb_skip_run_busy
// bit[27]    OR interrupt Enable for cbp_busy
// bit[26]    OR interrupt Enable for Reserved
// bit[25]    OR interrupt Enable for Reserved
// bit[24]    OR interrupt Enable for mb_info_busy
// bit[23]    AND interrupt Enable Reserved
// bit[22]    AND interrupt Enable for mv_busy
// bit[21]    AND interrupt Enable for b8_mode_busy
// bit[20]    AND interrupt Enable for mb_skip_run_busy
// bit[19]    AND interrupt Enable for cbp_busy 
// bit[18]    AND interrupt Enable for Reserved
// bit[17]    AND interrupt Enable for Reserved        
// bit[16]    AND interrupt Enable for mb_info_busy
// bit[15]    OR interrupt Enable Reserved
// bit[14]    OR interrupt Enable for mvd
// bit[13]    OR interrupt Enable for b8_mode
// bit[12]    OR interrupt Enable for mb_skip_run
// bit[11]    OR interrupt Enable for cbp_ready
// bit[10]    OR interrupt Enable for c_ipred_mode_ready
// bit[9]     OR interrupt Enable for ipred_mode_ready
// bit[8]     OR interrupt Enable for mb_info_ready
// bit[7]     AND interrupt Enable Reserved
// bit[6]     AND interrupt Enable for mvd
// bit[5]     AND interrupt Enable for b8_mode
// bit[4]     AND interrupt Enable for mb_skip_run
// bit[3]     AND interrupt Enable for cbp_ready
// bit[2]     AND interrupt Enable for c_ipred_mode_ready
// bit[1]     AND interrupt Enable for ipred_mode_ready
// bit[0]     AND interrupt Enable for mb_info_ready
#define P_HCODEC_VLC_INT_CONTROL                   (volatile unsigned long *)0xd00574c0
// Bit[31:16] picture_height
// Bit[15:0]  picture_width
#define P_HCODEC_VLC_PIC_SIZE                      (volatile unsigned long *)0xd00574c4
// [31:16] Reserved
// [15:3] pic_width_in_mbs_minus1
// [2:0]  picture_type 
#define P_HCODEC_VLC_PIC_INFO                      (volatile unsigned long *)0xd00574c8
// Bit[31:16] MB_NR
// Bit[15:8] MBY
// Bit[7:0] MBX
#define P_HCODEC_VLC_PIC_POSITION                  (volatile unsigned long *)0xd00574cc
// Bit[31] MV_busy
// Bit[30:6] Reserved
// Bit[15] Reserved
// Bit[14] vlc_input_MV_busy
// Bit[13] vlc_input_b8_mode_busy
// Bit[12] vlc_input_mb_skip_run_busy
// Bit[11] vlc_input_cbp_busy
// Bit[10] Reserved
// Bit[9]  Reserved
// Bit[8] vlc_input_mb_info_busy
// Bit[7] Reserved
// Bit[6] mvd
// Bit[5] b8_mode
// Bit[4] mb_skip_run
// Bit[3] cbp
// Bit[2] c_ipred_mode
// Bit[1] ipred_mode
// Bit[0] mb_info ( mb_type, mb_x, mb_y)
#define P_HCODEC_VLC_INPUT_STATUS                  (volatile unsigned long *)0xd00574d0
// Bit[31:28] detected_mb_type
// Bit[27:16] mb_y 
// Bit[15:4]  mb_x 
// Bit[3:0]   mb_type
#define P_HCODEC_VLC_MB_INFO                       (volatile unsigned long *)0xd00574d4
// commnad 0 -- no pending
// normal command + 1 is pending command
//
// bit 31:28 -- pending command 7
// bit 27:24 -- pending command 6
// bit 23:20 -- pending command 5
// bit 19:16 -- pending command 4
// bit 15:12 -- pending command 3
// bit 11:8  -- pending command 2
// bit  7:4  -- pending command 1
// bit  3:0  -- pending command 0
#define P_HCODEC_VLC_ENC_PEND_CMD                  (volatile unsigned long *)0xd00574d8
// For I Slice
// Bit[31:16] Reserved
// Bit[15:0] IntraType 
#define P_HCODEC_HENC_TOP_INFO_0                   (volatile unsigned long *)0xd00574dc
#define P_HCODEC_HENC_LEFT_INFO_0                  (volatile unsigned long *)0xd00574e0
// For I Slice
// Bit[31:24] V_nnz
// Bit[23:16] U_nnz
// Bit[15:0]  Y_nnz 
#define P_HCODEC_HENC_TOP_INFO_1                   (volatile unsigned long *)0xd00574e4
#define P_HCODEC_HENC_LEFT_INFO_1                  (volatile unsigned long *)0xd00574e8
// bit[63:0] ipred_mode
#define P_HCODEC_VLC_IPRED_MODE_HI                 (volatile unsigned long *)0xd00574ec
#define P_HCODEC_VLC_IPRED_MODE_LO                 (volatile unsigned long *)0xd00574f0
// bit[15:8] SE delta quant 
// bit[7:0]  UE delta quant
#define P_HCODEC_VLC_DELTA_QP                      (volatile unsigned long *)0xd00574f4
// bit[31:16] Reserved
// bit[15:12] Reserved
// bit[11:8] c_ipred_mode 
// bit[7:0] cbp
#define P_HCODEC_VLC_MB_HEADER_INFO                (volatile unsigned long *)0xd00574f8
// bit[31:16] mb_skip_run
// bit[15:0]  b8_mode
#define P_HCODEC_VLC_P_MB_HEADER_INFO              (volatile unsigned long *)0xd00574fc
// bit[31]    write_ptr_update
// bit[30]    read_ptr_update
// bit[29:20] coeff_buf_level
// bit[19:10] coeff_buf_write_ptr
// bit[9:0]   coeff_buf_read_ptr
#define P_HCODEC_VLC_COEFF_BUF_STATUS              (volatile unsigned long *)0xd0057500
// bit[31:10] Reserved
// bit[9:0] read_req_addr
#define P_HCODEC_VLC_COEFF_RD_REQ                  (volatile unsigned long *)0xd0057504
// bit[20]   - coeff_buf_read_finished
// bit[19]   - coeff_first
// bit[18:4] - coeff_level 
// bit[3:0]  - coeff_run 
#define P_HCODEC_VLC_COEFF                         (volatile unsigned long *)0xd0057508
// bit[31]    - coeff_info_ready
// bit[30:25] - Reserved
// bit[24:15] - block_begin_addr
// bit[14:11] - trailing_one_sign
// bit[10:6]  - total_coeff 
// bit[5:4]   - trailing_ones 
// bit[3:0]   - total_zeros
#define P_HCODEC_VLC_COEFF_INFO                    (volatile unsigned long *)0xd005750c
// bit[31]    write_ptr_update
// bit[30]    read_ptr_update
// bit[29:25] Reserved
// bit[24:20] dc_buf_level -- 0-16
// bit[19:15] Reserved
// bit[14:10] dc_buf_write_ptr
// bit[9:5]   Reserved
// bit[4:0]   dc_buf_read_ptr
#define P_HCODEC_VLC_DC_BUF_STATUS                 (volatile unsigned long *)0xd0057510
// bit[31:10] Reserved
// bit[9:4]   Reserved
// bit[3:0]   read_req_addr
#define P_HCODEC_VLC_DC_RD_REQ                     (volatile unsigned long *)0xd0057514
// bit[31:17] - Reserved
// bit[16]   - dc_first
// bit[15:1] - dc_level 
// bit[0]    - dc_type  0 - CDC, 1 - LDC
#define P_HCODEC_VLC_DC                            (volatile unsigned long *)0xd0057518
// bit[31]    - dc_info_ready
// bit[30:25] - Reserved
// bit[24:20] - Reserved
// bit[19:15] - dc_idx_begin_addr
// bit[14:11] - dc_trailing_one_sign
// bit[10:6]  - dc_total_coeff 
// bit[5:4]   - dc_trailing_ones 
// bit[3:0]   - dc_total_zeros
#define P_HCODEC_VLC_DC_INFO                       (volatile unsigned long *)0xd005751c
// bit[31:4]  - Reserved
// bit[3:0]   - mv_rw_idx  (auto increment when read/write VLC_MV) 
#define P_HCODEC_VLC_MV_INDEX                      (volatile unsigned long *)0xd0057520
// bit[31:16] - MVY
// bit[15:0]  - MVX
#define P_HCODEC_VLC_MV                            (volatile unsigned long *)0xd0057524
// bit[31:16] - MVY
// bitp15:0]  - MVX
// Write to HENC_TOP_MV_0 will cause previous U->UL, UR->U, and UR write
// Read will read U MV only 
#define P_HCODEC_HENC_TOP_MV_0                     (volatile unsigned long *)0xd0057528
#define P_HCODEC_HENC_TOP_MV_1                     (volatile unsigned long *)0xd005752c
#define P_HCODEC_HENC_TOP_MV_2                     (volatile unsigned long *)0xd0057530
#define P_HCODEC_HENC_TOP_MV_3                     (volatile unsigned long *)0xd0057534
#define P_HCODEC_HENC_LEFT_MV_0                    (volatile unsigned long *)0xd0057538
#define P_HCODEC_HENC_LEFT_MV_1                    (volatile unsigned long *)0xd005753c
#define P_HCODEC_HENC_LEFT_MV_2                    (volatile unsigned long *)0xd0057540
#define P_HCODEC_HENC_LEFT_MV_3                    (volatile unsigned long *)0xd0057544
// Bit[31:1] Reserved
// Bit[0] top_left_mv_ready
#define P_HCODEC_TOP_LEFT_READY                    (volatile unsigned long *)0xd0057548
// Bit[31:16] Reserved
// Bit[15:0] mb_skip_run
#define P_HCODEC_MB_SKIP_RUN                       (volatile unsigned long *)0xd005754c
// Bit[31:16] Reserved
// Bit[15]    Reserved
// Bit[14:13] rd_struct // 00 - frame, 10 - top field, 11 - bottom field
// Bit[12:11] wr_struct // 00 - frame, 10 - top field, 11 - bottom field
// Bit[10:5]  mv_buff_id
// Bit[4:0]   mv_ref
#define P_HCODEC_VLC_HCMD_CONFIG                   (volatile unsigned long *)0xd0057550
// Bit[9:0] h264_dblk_info
#define P_HCODEC_VLC_HCMD_DBLK_INFO                (volatile unsigned long *)0xd0057554
// Bit[3:0] vlc_dbg_idx
#define P_HCODEC_VLC_DBG_IDX                       (volatile unsigned long *)0xd0057558
// Read Only
#define P_HCODEC_VLC_DBG_READ                      (volatile unsigned long *)0xd005755c
#define P_HCODEC_VLC_JPEG_CTRL                     (volatile unsigned long *)0xd0057560
#define P_HCODEC_VLC_JPEG_COEFF_BUF_STAT           (volatile unsigned long *)0xd0057564
#define P_HCODEC_VLC_HUFFMAN_ADDR                  (volatile unsigned long *)0xd0057568
#define P_HCODEC_VLC_HUFFMAN_DATA                  (volatile unsigned long *)0xd005756c
// bit[31:0] enc_mv_bits - including b8_mode and mvd
#define P_HCODEC_VLC_ENC_MV_BITS                   (volatile unsigned long *)0xd0057570
// bit[31:0] enc_coeff_bits - including cbp, token, trailing_sign, coeff_enc, h264_totzeros, h264_run
#define P_HCODEC_VLC_ENC_COEFF_BITS                (volatile unsigned long *)0xd0057574
//
// Closing file:  vlc_regs.h
//
//
// Reading file:  qdct_regs.h
//
//========================================================================
//  QDCT module level register offset
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  DOS_HCODEC_QDCT_CBUS_BASE = 0x0f
// -----------------------------------------------
// bit[31:28] - mb_info_state
#define P_HCODEC_QDCT_STATUS_CTRL                  (volatile unsigned long *)0xd0057c00
// bit[18]    - enable_free_clk_sad_top
// bit[17]    - enable_free_clk_ie_top
// bit[16]    - enable_free_clk_ie_sub
// bit[15]    - enable_free_clk_mc_out
// bit[14]    - enable_free_clk_i_pred_top
// bit[13]    - enable_free_clk_idct_top
// bit[12]    - enable_free_clk_iq_top
// bit[11]    - enable_free_clk_q_top
// bit[10]    - enable_free_clk_dc_buff_8
// bit[9]     - enable_free_clk_dct_top
// bit[8]     - enable_free_clk_mb_info
// bit[7]     - enable_free_clk_mb_buff
// bit[6]     - enable_free_clk_reg
// bit[5]     - ignore_1_include_2nd_half_c
// bit[4]     - ignore_1_include_2nd_half
// bit[3]     - ignore_t_p8x8
// bit[2]     - not_ignore_dc
// bit[1]     - ignore_small_lac_intra
// bit[0]     - disable_fast_zero_block
#define P_HCODEC_QDCT_CONFIG                       (volatile unsigned long *)0xd0057c04
// bit[31]    - ignore_lac_coeff_en
// bit[30:26] - ignore_lac_coeff_else
// bit[25:21] - ignore_lac_coeff_2 
// bit[20:16] - ignore_lac_coeff_1 
// bit[15]    - ignore_cac_coeff_en
// bit[14:10] - ignore_cac_coeff_else
// bit[9:5]   - ignore_cac_coeff_2 
// bit[4:0]   - ignore_cac_coeff_1 
#define P_HCODEC_IGNORE_CONFIG                     (volatile unsigned long *)0xd0057c08
// bit[31]    - ignore_t_lac_coeff_en
// bit[30:26] - ignore_t_lac_coeff_else
// bit[25:21] - ignore_t_lac_coeff_2 
// bit[20:16] - ignore_t_lac_coeff_1 
// bit[15:0]  - Reserved
#define P_HCODEC_IGNORE_CONFIG_2                   (volatile unsigned long *)0xd0057c0c
// --------------------------------------------
// MB DATA DDR Interface
// --------------------------------------------
#define P_HCODEC_QDCT_MB_START_PTR                 (volatile unsigned long *)0xd0057c40
#define P_HCODEC_QDCT_MB_END_PTR                   (volatile unsigned long *)0xd0057c44
#define P_HCODEC_QDCT_MB_WR_PTR                    (volatile unsigned long *)0xd0057c48
#define P_HCODEC_QDCT_MB_RD_PTR                    (volatile unsigned long *)0xd0057c4c
#define P_HCODEC_QDCT_MB_LEVEL                     (volatile unsigned long *)0xd0057c50
// bit  [31]    reserved
// bit  [30]    no_wait_after_q_cdc
// bit  [29]    ie_start_int_enable
// bit  [28]    ignore_t_p8x8
// bit  [27]    zero_mc_out_null_non_skipped_mb
// bit  [26]    no_mc_out_null_non_skipped_mb
// bit  [25]    mc_out_even_skipped_mb
// bit  [24]    mc_out_wait_cbp_ready
// bit  [23]    mc_out_wait_mb_type_ready
// bit  [22]    i_pred_int_enable
// bit  [21]    intra_sat8_enable
// bit  [20]    ie_sub_enable
// bit  [19]    i_pred_enable
// bit  [18]    iq_enable
// bit  [17]    idct_enable
// bit  [16]    no_zero_coeff_mb
// bit  [15]    add_zero_coeff_block
// bit  [14]    mb_pause_enable
// bit  [13]    q_enable
// bit  [12]    dct_enable
// bit  [11]    ignore_magic_word
// bit  [10]    mb_info_en
// bit  [9]     mb_info_soft_reset
// bit  [8]     mb_always_ready Set to 1 to ignore mb_level blocking DDR read
// bit  [7]     mb_ready_for_transfer (Read Only)
// bit  [6]     data_ready_for_transfer (Read Only)
// bits [5:3]   mb_endian       Set MB Endian inside DDR memory 
// bit  [2]     mb_read_busy   Read Only - indicate DDR read busy
// bit  [1]     mb_read_en     Set to 1 to enable reading data from DDR memory
// bit  [0]     mb_soft_reset   Soft reset  
#define P_HCODEC_QDCT_MB_CONTROL                   (volatile unsigned long *)0xd0057c54
// bit 31    transfer_length 0 - 32x64 Bits per request, 1 - 16x64 Bits per request  // default : 0
// bit 30    A_urgent  // default : 0
// bit 29:24 A_brst_num // default : 0x3f
// bit 23    reserved
// bit 22    read_till_zero
// bit 21:16 A_id  // default : 0x21 
// bit 15:0  mb_level_hold // default : 0 
#define P_HCODEC_QDCT_MB_MEM_CTL                   (volatile unsigned long *)0xd0057c58
// bit  [31:24] reserved
// bit  [23:16] vb_buff_level     -- Read only
// bit  [15:8]  vb_buff_wr_point -- RW
// bit  [7:0]   vb_buff_rd_point -- RW
#define P_HCODEC_QDCT_MB_BUFF                      (volatile unsigned long *)0xd0057c5c
// bit [31:0] mb infor data begin magic word - default : 0xa55aaa55
#define P_HCODEC_QDCT_MB_MAGIC_WORD                (volatile unsigned long *)0xd0057c60
// Read Only Register
// bit[19]   dct_ready_1
// bit[18]   dct_ready_0
// bit[17]   dct_rd_idx
// bit[16]   dct_wr_idx
// bit[15]   dct_srdy
// bit[14]   dct_rrdy
// bit[13]   Reserved
// bit[12:8] dct_block_number 
// bit[7:4]  dct_rw_addr 
// bit[3:0]  dct_status
#define P_HCODEC_QDCT_DCT_STATUS                   (volatile unsigned long *)0xd0057c64
// bit[3:0]  q_status
#define P_HCODEC_QDCT_Q_STATUS                     (volatile unsigned long *)0xd0057c68
// bit[31:3] Reserved
// bit[2:0]  picture_type
#define P_HCODEC_QDCT_PIC_INFO                     (volatile unsigned long *)0xd0057c6c
// bit[31:28] Reserved
// bit[27:22] I_pic_quant_c
// bit[21:16] I_pic_quant
// bit[15]    reserved
// bit[14:12] quant_rem_c
// bit[11:8]  quant_per_c
// bit[7]     reserved
// bit[6:4]   quant_rem
// bit[3:0]   quant_per
#define P_HCODEC_QDCT_Q_QUANT_I                    (volatile unsigned long *)0xd0057c70
// bit[31:28] Reserved
// bit[27:22] P_pic_quant_c
// bit[21:16] P_pic_quant
// bit[15]    reserved
// bit[14:12] quant_rem_c
// bit[11:8]  quant_per_c
// bit[7]     reserved
// bit[6:4]   quant_rem
// bit[3:0]   quant_per
#define P_HCODEC_QDCT_Q_QUANT_P                    (volatile unsigned long *)0xd0057c74
// bit[31]    mb_info_pause
// bit[30:16] pause_mby
// bit[15:0]  pause_mbx
#define P_HCODEC_QDCT_MB_PAUSE_CTL                 (volatile unsigned long *)0xd0057c78
// bit[31]   top_control_ready_i_pred
// bit[30:28]top_dma_status   
// bit[27]   top_control_ready_ie
// bit[26:24]Reserved
// bit[23]   ul_mb
// bit[22]   right_mb
// bit[21]   top_mb
// bit[20]   left_mb
// bit[19:8] mb_x
// bit[7:6]  i_pred_ref_idx_L 
// bit[5:4]  i_pred_ref_idx_UL 
// bit[3:2]  i_pred_ref_idx_U
// bit[1:0]  i_pred_ref_idx_UR 
#define P_HCODEC_QDCT_TOP_CONTROL                  (volatile unsigned long *)0xd0057c7c
// bit[31:0] top_base_addr - DDR Memory start address for save top Pixel
#define P_HCODEC_QDCT_TOP_BASE_MEM                 (volatile unsigned long *)0xd0057c80
// bit 15:13 Reserved
// bit 12    A_urgent  // default : 0
// bit 11:6  A_brst_num // default : 0x3f
// bit 5:0   A_id  // default : 0x22
#define P_HCODEC_QDCT_TOP_MEM_CTL                  (volatile unsigned long *)0xd0057c84
// bit [11:0] top_wrrsp_count
#define P_HCODEC_QDCT_TOP_WRRSP                    (volatile unsigned long *)0xd0057c88
// Bit[3:0] qdct_dbg_idx
#define P_HCODEC_QDCT_DBG_IDX                      (volatile unsigned long *)0xd0057c8c
// Read Only
#define P_HCODEC_QDCT_DBG_READ                     (volatile unsigned long *)0xd0057c90
#define P_HCODEC_QDCT_JPEG_CTRL                    (volatile unsigned long *)0xd0057c94
#define P_HCODEC_QDCT_JPEG_X_START_END             (volatile unsigned long *)0xd0057c98
#define P_HCODEC_QDCT_JPEG_Y_START_END             (volatile unsigned long *)0xd0057c9c
#define P_HCODEC_QDCT_JPEG_QUANT_ADDR              (volatile unsigned long *)0xd0057ca0
#define P_HCODEC_QDCT_JPEG_QUANT_DATA              (volatile unsigned long *)0xd0057ca4
#define P_HCODEC_QDCT_JPEG_SOF_RESUME              (volatile unsigned long *)0xd0057ca8
#define P_HCODEC_QDCT_JPEG_DCT_STATUS0             (volatile unsigned long *)0xd0057cac
#define P_HCODEC_QDCT_JPEG_DCT_STATUS1             (volatile unsigned long *)0xd0057cb0
#define P_HCODEC_QDCT_JPEG_DCT_COEFF01             (volatile unsigned long *)0xd0057cb4
#define P_HCODEC_QDCT_JPEG_DCT_COEFF23             (volatile unsigned long *)0xd0057cb8
#define P_HCODEC_QDCT_JPEG_DCT_COEFF45             (volatile unsigned long *)0xd0057cbc
#define P_HCODEC_QDCT_JPEG_DCT_COEFF67             (volatile unsigned long *)0xd0057cc0
#define P_HCODEC_QDCT_JPEG_DCT_COEFF89             (volatile unsigned long *)0xd0057cc4
// IE/ME share same cbus_base as QDCT
// 
// bit[31]  active_ur_block
// bit[30]  active_ul_block
// bit[9]   ie_c_wait_ie_pause
// bit[8:4] max_ie_result_buff_count 
// bit[3]   ie_wait_for_ie_result  // use for (max_ie_result_buff_count == 0) to wait every block
// bit[2]   reserved
// bit[1]   ie_enable
// bit[0]   ie_soft_reset
#define P_HCODEC_IE_CONTROL                        (volatile unsigned long *)0xd0057d00
// bit[31:12] Reserved
// bit[11:0]  mb_y
#define P_HCODEC_IE_MB_POSITION                    (volatile unsigned long *)0xd0057d04
// bit[31:16] me_skip_run
// bit[15:8]  reserved
// bit [7:4]  me_b8_mode
// bit [3:0]  ie_me_mb_type
#define P_HCODEC_IE_ME_MB_INFO                     (volatile unsigned long *)0xd0057d08
// bit[3]   ie_result_buff_enable
// bit[2]   ie_result_buff_soft_reset
// bit[1]   sad_enable
// bit[0]   sad_soft_reset
#define P_HCODEC_SAD_CONTROL                       (volatile unsigned long *)0xd0057d0c
// bit[31:16] - ie_result_buff_count - read only
// bit[14:12] -current_ie_result (pred_mode) - read only
// bit[11]  top_control_data_buff_wr_ptr - rd/wr 
// bit[10]  top_control_data_buff_rd_ptr - rd/wr 
// bit[9:5] ie_result_buff_wr_ptr        - rd/wr
// bit[4:0] ie_result_buff_rd_ptr        - rd/wr
#define P_HCODEC_IE_RESULT_BUFFER                  (volatile unsigned long *)0xd0057d10
// bit[63:0] ie_i4_pred_mode
#define P_HCODEC_IE_I4_PRED_MODE_HI                (volatile unsigned long *)0xd0057d14
#define P_HCODEC_IE_I4_PRED_MODE_LO                (volatile unsigned long *)0xd0057d18
// bit [31:9] reserved
// bit [8:4] i_pred_block_number
// bit [3:0] ie_c_pred_mode
#define P_HCODEC_IE_C_PRED_MODE                    (volatile unsigned long *)0xd0057d1c
// 31:16 - Left, 0-select ie_pixel, 1-select mc_data_out
// 15:0  - Top,  0-select ie_pixel, 1-select mc_data_out
#define P_HCODEC_IE_CUR_REF_SEL                    (volatile unsigned long *)0xd0057d20
// bit[31]  enable_f_skip_1_step_3
// bit[30]  enable_f_skip_1_step_2
// bit[29]  enable_f_skip_1_step_1
// bit[28]  step_3_enable
// bit[27]  step_2_sub_pixel
// bit[26]  always_f_skip_step_3 
// bit[25]  always_f_skip_step_2 
// bit[24]  always_f_skip_step_1
// bit[23]  half_pixel_only
// bit[22:11] reserved
// bit[10:9] mv_flexable_ctl 00:0x40, 01:0x80, 10:0xc0, 11 : 0x100
// bit[8]   no_md_ab_rd
// bit[7]   use_dct_state
// bit[6]   enable_free_clk_me_ctl
// bit[5]   enable_free_clk_me_ab
// bit[4]   enable_free_clk_me_cb
// bit[3]   reserved
// bit[2]   me_done_int_enable
// bit[1]   me_enable
// bit[0]   me_soft_reset
#define P_HCODEC_ME_CONTROL                        (volatile unsigned long *)0xd0057d24
// bit[31:28] Reserved
// bit[27:16] me_start_mby
// bit[15:12] Reserved
// bit[11:0]  me_start_mbx
#define P_HCODEC_ME_START_POSITION                 (volatile unsigned long *)0xd0057d28
// bit [31:28] me_status - Read only
// bit [27:24] me_cb_status  // current buffer
// bit [23:20] me_ab_status  // anc buffer
// bit [19]    Reserved
// bit [18:16] me_ab_wr_ptr  // read only
// bit [15:4]  me_last_mbx 
// bit [3:1]   me_ab_rd_ptr  // read only
// bit [0]     me_action
#define P_HCODEC_ME_STATUS                         (volatile unsigned long *)0xd0057d2c
// all Read-only
// bit [31:28] Reserved
// bit [27:16] me_ab_mbx
// bit [15:14] me_cb_wr_ptr
// bit [13:12] me_cb_rd_ptr
// bit [11:0]  me_cb_mbx
#define P_HCODEC_ME_DEBUG                          (volatile unsigned long *)0xd0057d30
// bit[29:24] step_3_skip_line 
// bit[23:18] step_2_skip_line 
// bit[17:12] step_1_skip_line 
// bit[11:6]  step_0_skip_line 
// bit[5:0]   read_skip_line 
#define P_HCODEC_ME_SKIP_LINE                      (volatile unsigned long *)0xd0057d34
// bit 15:13 Reserved
// bit 12    A_urgent  // default : 0
// bit 11:6  A_brst_num // default : 0x3f
// bit 5:0   A_id  // default : 0x23
#define P_HCODEC_ME_AB_MEM_CTL                     (volatile unsigned long *)0xd0057d38
// bit[31:24] anc_pic_canvas
// bit[23:12] max_me_mby_num
// bit[11:0]  max_me_mbx_num 
#define P_HCODEC_ME_PIC_INFO                       (volatile unsigned long *)0xd0057d3c
// bit [23:12] me_sad_enough_1
// bit [11:0]  me_sad_enough_0
#define P_HCODEC_ME_SAD_ENOUGH_01                  (volatile unsigned long *)0xd0057d40
// bit [23:12] me_sad_enough_3
// bit [11:0]  me_sad_enough_2
#define P_HCODEC_ME_SAD_ENOUGH_23                  (volatile unsigned long *)0xd0057d44
// bit [21:10] me_step0_big_sad
// bit [9:5] me_step0_close_mv_y 
// bit [4:0] me_step0_close_mv_x 
#define P_HCODEC_ME_STEP0_CLOSE_MV                 (volatile unsigned long *)0xd0057d48
// bit[31:24] force_skip_sad_3
// bit[23:16] force_skip_sad_2
// bit[15:08] force_skip_sad_1
// bit[07:00] force_skip_sad_0
#define P_HCODEC_ME_F_SKIP_SAD                     (volatile unsigned long *)0xd0057d4c
// bit[31:24] force_skip_weight_3
// bit[23:16] force_skip_weight_2
// bit[15:08] force_skip_weight_1
// bit[07:00] force_skip_weight_0
#define P_HCODEC_ME_F_SKIP_WEIGHT                  (volatile unsigned long *)0xd0057d50
// Merge when (
//              (flex & me_merge_flex_en) | 
//              (big_sad & me_merge_sad_en)|
//              ((~me_merge_flex_en)&(~me_merge_sad_en))
//            ) & 
//            ( small_mv_diff |(~me_merge_small_mv_en))
//            & (me_merge_flex_en | me_merge_sad_en | me_merge_small_mv_en)
// bit[31]   me_merge_mv_en_16
// bit[30]   me_merge_small_mv_en_16
// bit[29]   me_merge_flex_en_16
// bit[28]   me_merge_sad_en_16
// bit[27]   me_merge_mv_en_8
// bit[26]   me_merge_small_mv_en_8
// bit[25]   me_merge_flex_en_8
// bit[24]   me_merge_sad_en_8
// bit[23:18] me_merge_mv_diff_16
// bit[17:12] me_merge_mv_diff_8
// bit[11:0] me_merge_min_sad
#define P_HCODEC_ME_MV_MERGE_CTL                   (volatile unsigned long *)0xd0057d54
// bit[31:24] mv_step_weight_1 
// bit[23:16] mv_pre_weight_1 
// bit [15:0] mv_step_weight_0
// bit[7:0]   mv_pre_weight_0 
#define P_HCODEC_ME_MV_WEIGHT_01                   (volatile unsigned long *)0xd0057d58
// bit[31:24] mv_step_weight_3 
// bit[23:16] mv_pre_weight_3
// bit[15:8]  mv_step_weight_2 
// bit[7:0]   mv_pre_weight_2
#define P_HCODEC_ME_MV_WEIGHT_23                   (volatile unsigned long *)0xd0057d5c
// bit[31:24] me_sad_range_inc_3
// bit[23:16] me_sad_range_inc_2
// bit[15:8] me_sad_range_inc_1
// bit[7:0] me_sad_range_inc_0
#define P_HCODEC_ME_SAD_RANGE_INC                  (volatile unsigned long *)0xd0057d60
// bit[31:19]  reserved
// bit[18]     sub_relative_any_1_en
// bit[17]     sub_relative_any_2_en
// bit[16]     sub_relative_any_3_en
// bit[15]     sub_relative_any_4_en
// bit[14]     sub_relative_any_h_en
// bit[13]     sub_make_non_flex_fix
// bit[12]     sub_make_big_non_flex_fix
// bit[11:8]   sub_normal_mv_diff_16
// bit[7:4]    sub_normal_mv_diff_8
// bit[3:2]    Reserved
// bit[1]      sub_merge_enable_16
// bit[0]      sub_merge_enable_8
#define P_HCODEC_ME_SUB_MERGE_CTL                  (volatile unsigned long *)0xd0057d64
// bit[31:28]  sub_ref_mv_diff_near
// bit[27:24]  sub_ref_mv_diff_near_flex
// bit[23:20]  sub_ref_mv_diff
// bit[19:16]  sub_ref_mv_diff_flex
// bit[15:8]   sub_ref_mv_near_weight
// bit[7:0]    sub_ref_mv_weight
#define P_HCODEC_ME_SUB_REF_MV_CTL                 (volatile unsigned long *)0xd0057d68
// bit[31:24]  sub_weight_max_sad
// bit[23:16]  sub_any_range_sad
// bit[15:8]   sub_any_min_sad
// bit[7:0]    sub_any_max_sad
#define P_HCODEC_ME_SUB_ANY_WEIGHT_SAD             (volatile unsigned long *)0xd0057d6c
// bit[31:24]  sub_fix_sad
// bit[23:16]  sub_fix_diff_sad
// bit[15:8]   sub_sad_flex_adj
// bit[7:0]    sub_big_non_flex_fix_sad
#define P_HCODEC_ME_SUB_FIX_SAD                    (volatile unsigned long *)0xd0057d70
// bit[31:24]  sub_fix_min_sad
// bit[23:16]  sub_fix_min_diff_sad
// bit[15:8]   sub_fix_min_sad_2
// bit[7:0]    sub_fix_min_diff_sad_2
#define P_HCODEC_ME_SUB_FIX_MIN_SAD                (volatile unsigned long *)0xd0057d74
// bit[31:24]  sub_snap_to_ref_max_sad
// bit[23]     sub_snap_to_ref_non_flex
// bit[22:16]  sub_snap_to_ref_mv_diff
// bit[15:4]   sub_glitch_mv_sad
// bit[3:0]    sub_glitch_mv_diff
#define P_HCODEC_ME_SUB_SNAP_GLITCH                (volatile unsigned long *)0xd0057d78
// bit[31:20]  sad_act_limit
// bit[19:8]   s_a_any_sad
// bit[7]      Reserved
// bit[6:5]    sub_merge_method
// bit[4]      use_sub_act_result
// bit[3]      s_a_rnd
// bit[2]      Reserved
// bit[1]      sub_act_en_16
// bit[0]      sub_act_en
#define P_HCODEC_ME_SUB_ACT_CTL                    (volatile unsigned long *)0xd0057d7c
//
// Closing file:  qdct_regs.h
//

#endif // DOS_C_ARC_POINTER_H

